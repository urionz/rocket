{"version":3,"sources":["src/definition/accessors/INotifier.ts"],"names":[],"mappings":"","file":"INotifier.js","sourcesContent":["import { IMessage } from '../messages';\nimport { IRoom } from '../rooms';\nimport { IUser } from '../users';\nimport { IMessageBuilder } from './IMessageBuilder';\n\nexport interface INotifier {\n    /**\n     * Notifies the provided user of the provided message.\n     *\n     * **Note**: Notifications only are shown to the user if they are\n     * online and it only stays around for the duration of their session.\n     *\n     * @param user The user who should be notified\n     * @param message The message with the content to notify the user about\n     */\n    notifyUser(user: IUser, message: IMessage): Promise<void>;\n\n    /**\n     * Notifies all of the users in the provided room.\n     *\n     * **Note**: Notifications only are shown to those online\n     * and it only stays around for the duration of their session.\n     *\n     * @param room The room which to notify the users in\n     * @param message The message content to notify users about\n     */\n    notifyRoom(room: IRoom, message: IMessage): Promise<void>;\n\n    /** Gets a new message builder for building a notification message. */\n    getMessageBuilder(): IMessageBuilder;\n}\n"]}