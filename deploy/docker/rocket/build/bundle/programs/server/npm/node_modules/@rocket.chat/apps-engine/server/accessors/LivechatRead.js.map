{"version":3,"sources":["src/server/accessors/LivechatRead.ts"],"names":[],"mappings":";;AAKA;IACI,YAA6B,cAA+B,EAAmB,KAAa;QAA/D,mBAAc,GAAd,cAAc,CAAiB;QAAmB,UAAK,GAAL,KAAK,CAAQ;IAAI,CAAC;IAEjG;;;OAGG;IACI,QAAQ,CAAC,YAAqB;QACjC,OAAO,CAAC,IAAI,CAAC,iIAAiI,CAAC,CAAC;QAEhJ,OAAO,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;IACtD,CAAC;IAEM,aAAa,CAAC,YAAqB;QACtC,OAAO,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;IAC3D,CAAC;IAEM,gBAAgB,CAAC,OAAiB,EAAE,YAAqB;QAC5D,OAAO,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,OAAO,EAAE,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IAC5E,CAAC;IAED;;;;OAIG;IACI,mBAAmB,CAAC,KAAa;QACpC,OAAO,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IAC/D,CAAC;IAEM,sBAAsB,CAAC,EAAU;QACpC,OAAO,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IAC/D,CAAC;IAEM,yBAAyB,CAAC,KAAa;QAC1C,OAAO,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IACrE,CAAC;IAEM,yBAAyB,CAAC,KAAa;QAC1C,OAAO,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IACrE,CAAC;IAEM,+BAA+B,CAAC,WAAmB;QACtD,OAAO,IAAI,CAAC,cAAc,CAAC,wBAAwB,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IACjF,CAAC;IAEM,+BAA+B,CAAC,KAAa;QAChD,OAAO,IAAI,CAAC,cAAc,CAAC,wBAAwB,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IAC3E,CAAC;CACJ;AAjDD,oCAiDC","file":"LivechatRead.js","sourcesContent":["import { ILivechatRead } from '../../definition/accessors/ILivechatRead';\nimport { IDepartment } from '../../definition/livechat';\nimport { ILivechatRoom } from '../../definition/livechat/ILivechatRoom';\nimport { IVisitor } from '../../definition/livechat/IVisitor';\nimport { ILivechatBridge } from '../bridges/ILivechatBridge';\nexport class LivechatRead implements ILivechatRead {\n    constructor(private readonly livechatBridge: ILivechatBridge, private readonly appId: string) { }\n\n    /**\n     * @deprecated please use the `isOnlineAsync` method instead.\n     * In the next major, this method will be `async`\n     */\n    public isOnline(departmentId?: string): boolean {\n        console.warn('The `LivechatRead.isOnline` method is deprecated and won\\'t behave as intended. Please use `LivechatRead.isOnlineAsync` instead');\n\n        return this.livechatBridge.isOnline(departmentId);\n    }\n\n    public isOnlineAsync(departmentId?: string): Promise<boolean> {\n        return this.livechatBridge.isOnlineAsync(departmentId);\n    }\n\n    public getLivechatRooms(visitor: IVisitor, departmentId?: string): Promise<Array<ILivechatRoom>> {\n        return this.livechatBridge.findRooms(visitor, departmentId, this.appId);\n    }\n\n    /**\n     * @deprecated This method does not adhere to the conversion practices applied\n     * elsewhere in the Apps-Engine and will be removed in the next major version.\n     * Prefer the alternative methods to fetch visitors.\n     */\n    public getLivechatVisitors(query: object): Promise<Array<IVisitor>> {\n        return this.livechatBridge.findVisitors(query, this.appId);\n    }\n\n    public getLivechatVisitorById(id: string): Promise<IVisitor | undefined> {\n        return this.livechatBridge.findVisitorById(id, this.appId);\n    }\n\n    public getLivechatVisitorByEmail(email: string): Promise<IVisitor | undefined> {\n        return this.livechatBridge.findVisitorByEmail(email, this.appId);\n    }\n\n    public getLivechatVisitorByToken(token: string): Promise<IVisitor | undefined> {\n        return this.livechatBridge.findVisitorByToken(token, this.appId);\n    }\n\n    public getLivechatVisitorByPhoneNumber(phoneNumber: string): Promise<IVisitor | undefined> {\n        return this.livechatBridge.findVisitorByPhoneNumber(phoneNumber, this.appId);\n    }\n\n    public getLivechatDepartmentByIdOrName(value: string): Promise<IDepartment | undefined> {\n        return this.livechatBridge.findDepartmentByIdOrName(value, this.appId);\n    }\n}\n"]}