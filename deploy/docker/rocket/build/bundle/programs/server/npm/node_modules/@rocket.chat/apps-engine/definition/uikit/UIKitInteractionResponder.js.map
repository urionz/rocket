{"version":3,"sources":["src/definition/uikit/UIKitInteractionResponder.ts"],"names":[],"mappings":";;AAEA,mEAAyH;AAGzH,yFAA4E;AAI5E;IACI,YAA6B,WAA0C;QAA1C,gBAAW,GAAX,WAAW,CAA+B;IAAI,CAAC;IAErE,eAAe;QAClB,OAAO;YACH,OAAO,EAAE,IAAI;SAChB,CAAC;IACN,CAAC;IAEM,aAAa;QAChB,OAAO;YACH,OAAO,EAAE,KAAK;SACjB,CAAC;IACN,CAAC;IACM,qBAAqB,CAAC,QAA8B;QACvD,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC;QAE9C,uBACI,OAAO,EAAE,IAAI,IACV,yDAAsB,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,4CAAoB,CAAC,UAAU,EAAE,CAAC,EAClG;IACN,CAAC;IAEM,uBAAuB,CAAC,QAA8B;QACzD,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC;QAE9C,uBACI,OAAO,EAAE,IAAI,IACV,yDAAsB,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,4CAAoB,CAAC,YAAY,EAAE,CAAC,EACpG;IACN,CAAC;IAEM,iBAAiB,CAAC,gBAA6C;QAClE,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC;QAE9C,OAAO;YACH,KAAK;YACL,SAAS;YACT,OAAO,EAAE,KAAK;YACd,IAAI,EAAE,4CAAoB,CAAC,MAAM;YACjC,MAAM,EAAE,gBAAgB,CAAC,MAAM;YAC/B,MAAM,EAAE,gBAAgB,CAAC,MAAM;SAClC,CAAC;IACN,CAAC;CACJ;AA5CD,8DA4CC","file":"UIKitInteractionResponder.js","sourcesContent":["import { Omit } from '../../lib/utils';\nimport { IUIKitErrorInteractionParam } from '../accessors/IUIController';\nimport { IUIKitErrorResponse, IUIKitModalResponse, IUIKitResponse, UIKitInteractionType } from './IUIKitInteractionType';\nimport { IUIKitView } from './IUIKitView';\nimport { IUIKitBaseIncomingInteraction } from './UIKitIncomingInteractionTypes';\nimport { formatModalInteraction } from './UIKitInteractionPayloadFormatter';\n\nexport type IUIKitModalViewParam = Omit<IUIKitView, 'appId' | 'id' | 'type'> & Partial<Pick<IUIKitView, 'id'>>;\n\nexport class UIKitInteractionResponder {\n    constructor(private readonly baseContext: IUIKitBaseIncomingInteraction) { }\n\n    public successResponse(): IUIKitResponse {\n        return {\n            success: true,\n        };\n    }\n\n    public errorResponse(): IUIKitResponse {\n        return {\n            success: false,\n        };\n    }\n    public openModalViewResponse(viewData: IUIKitModalViewParam): IUIKitModalResponse {\n        const { appId, triggerId } = this.baseContext;\n\n        return {\n            success: true,\n            ...formatModalInteraction(viewData, { appId, triggerId, type: UIKitInteractionType.MODAL_OPEN }),\n        };\n    }\n\n    public updateModalViewResponse(viewData: IUIKitModalViewParam): IUIKitModalResponse {\n        const { appId, triggerId } = this.baseContext;\n\n        return {\n            success: true,\n            ...formatModalInteraction(viewData, { appId, triggerId, type: UIKitInteractionType.MODAL_UPDATE }),\n        };\n    }\n\n    public viewErrorResponse(errorInteraction: IUIKitErrorInteractionParam): IUIKitErrorResponse {\n        const { appId, triggerId } = this.baseContext;\n\n        return {\n            appId,\n            triggerId,\n            success: false,\n            type: UIKitInteractionType.ERRORS,\n            viewId: errorInteraction.viewId,\n            errors: errorInteraction.errors,\n        };\n    }\n}\n"]}