{"version":3,"sources":["src/server/accessors/Modify.ts"],"names":[],"mappings":";;AASA,mDAAgD;AAChD,qDAAkD;AAClD,mDAAgD;AAChD,yCAAsC;AACtC,iDAA8C;AAE9C;IAOI,YAA6B,OAAmB,EAAmB,KAAa;QAAnD,YAAO,GAAP,OAAO,CAAY;QAAmB,UAAK,GAAL,KAAK,CAAQ;QAC5E,IAAI,CAAC,OAAO,GAAG,IAAI,6BAAa,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QAC3D,IAAI,CAAC,OAAO,GAAG,IAAI,6BAAa,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QAC3D,IAAI,CAAC,QAAQ,GAAG,IAAI,+BAAc,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QAC7D,IAAI,CAAC,QAAQ,GAAG,IAAI,mBAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QAC1E,IAAI,CAAC,YAAY,GAAG,IAAI,2BAAY,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACnE,CAAC;IAEM,UAAU;QACb,OAAO,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;IAEM,UAAU;QACb,OAAO,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;IAEM,WAAW;QACd,OAAO,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IAEM,WAAW;QACd,OAAO,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IAEM,eAAe;QAClB,OAAO,IAAI,CAAC,YAAY,CAAC;IAC7B,CAAC;CACJ;AAlCD,wBAkCC","file":"Modify.js","sourcesContent":["import {\n    IModify,\n    IModifyCreator,\n    IModifyExtender,\n    IModifyUpdater,\n    INotifier,\n    IUIController,\n} from '../../definition/accessors';\nimport { AppBridges } from '../bridges';\nimport { ModifyCreator } from './ModifyCreator';\nimport { ModifyExtender } from './ModifyExtender';\nimport { ModifyUpdater } from './ModifyUpdater';\nimport { Notifier } from './Notifier';\nimport { UIController } from './UIController';\n\nexport class Modify implements IModify {\n    private creator: IModifyCreator;\n    private updater: IModifyUpdater;\n    private extender: IModifyExtender;\n    private notifier: INotifier;\n    private uiController: IUIController;\n\n    constructor(private readonly bridges: AppBridges, private readonly appId: string) {\n        this.creator = new ModifyCreator(this.bridges, this.appId);\n        this.updater = new ModifyUpdater(this.bridges, this.appId);\n        this.extender = new ModifyExtender(this.bridges, this.appId);\n        this.notifier = new Notifier(this.bridges.getMessageBridge(), this.appId);\n        this.uiController = new UIController(this.appId, this.bridges);\n    }\n\n    public getCreator(): IModifyCreator {\n        return this.creator;\n    }\n\n    public getUpdater(): IModifyUpdater {\n        return this.updater;\n    }\n\n    public getExtender(): IModifyExtender {\n        return this.extender;\n    }\n\n    public getNotifier(): INotifier {\n        return this.notifier;\n    }\n\n    public getUiController(): IUIController {\n        return this.uiController;\n    }\n}\n"]}