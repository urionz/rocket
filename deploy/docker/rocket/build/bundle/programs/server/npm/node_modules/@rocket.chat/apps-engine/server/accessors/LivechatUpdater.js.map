{"version":3,"sources":["src/server/accessors/LivechatUpdater.ts"],"names":[],"mappings":";;AAIA;IACI,YAA6B,OAAmB,EAAmB,KAAa;QAAnD,YAAO,GAAP,OAAO,CAAY;QAAmB,UAAK,GAAL,KAAK,CAAQ;IAAI,CAAC;IAE9E,eAAe,CAAC,OAAiB,EAAE,YAAmC;QACzE,OAAO,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC,eAAe,CAAC,OAAO,EAAE,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IAC/F,CAAC;IAEM,SAAS,CAAC,IAAmB,EAAE,OAAe;QACjD,OAAO,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IACjF,CAAC;CACJ;AAVD,0CAUC","file":"LivechatUpdater.js","sourcesContent":["import { ILivechatUpdater } from '../../definition/accessors';\nimport { ILivechatRoom, ILivechatTransferData, IVisitor } from '../../definition/livechat';\nimport { AppBridges } from '../bridges';\n\nexport class LivechatUpdater implements ILivechatUpdater {\n    constructor(private readonly bridges: AppBridges, private readonly appId: string) { }\n\n    public transferVisitor(visitor: IVisitor, transferData: ILivechatTransferData): Promise<boolean> {\n        return this.bridges.getLivechatBridge().transferVisitor(visitor, transferData, this.appId);\n    }\n\n    public closeRoom(room: ILivechatRoom, comment: string): Promise<boolean> {\n        return this.bridges.getLivechatBridge().closeRoom(room, comment, this.appId);\n    }\n}\n"]}