function module(e,t,n){var r;r=function(e){"use strict";e.defineMode("scheme",(function(){var e="builtin",t="comment",n="string",r="atom",i="number",a="bracket",c=2;function o(e){for(var t={},n=e.split(" "),r=0;r<n.length;++r)t[n[r]]=!0;return t}var s=o("Î» case-lambda call/cc class define-class exit-handler field import inherit init-field interface let*-values let-values let/ec mixin opt-lambda override protect provide public rename require require-for-syntax syntax syntax-case syntax-error unit/sig unless when with-syntax and begin call-with-current-continuation call-with-input-file call-with-output-file case cond define define-syntax delay do dynamic-wind else for-each if lambda let let* let-syntax letrec letrec-syntax map or syntax-rules abs acos angle append apply asin assoc assq assv atan boolean? caar cadr call-with-input-file call-with-output-file call-with-values car cdddar cddddr cdr ceiling char->integer char-alphabetic? char-ci<=? char-ci<? char-ci=? char-ci>=? char-ci>? char-downcase char-lower-case? char-numeric? char-ready? char-upcase char-upper-case? char-whitespace? char<=? char<? char=? char>=? char>? char? close-input-port close-output-port complex? cons cos current-input-port current-output-port denominator display eof-object? eq? equal? eqv? eval even? exact->inexact exact? exp expt #f floor force gcd imag-part inexact->exact inexact? input-port? integer->char integer? interaction-environment lcm length list list->string list->vector list-ref list-tail list? load log magnitude make-polar make-rectangular make-string make-vector max member memq memv min modulo negative? newline not null-environment null? number->string number? numerator odd? open-input-file open-output-file output-port? pair? peek-char port? positive? procedure? quasiquote quote quotient rational? rationalize read read-char real-part real? remainder reverse round scheme-report-environment set! set-car! set-cdr! sin sqrt string string->list string->number string->symbol string-append string-ci<=? string-ci<? string-ci=? string-ci>=? string-ci>? string-copy string-fill! string-length string-ref string-set! string<=? string<? string=? string>=? string>? string? substring symbol->string symbol? #t tan transcript-off transcript-on truncate values vector vector->list vector-fill! vector-length vector-ref vector-set! with-input-from-file with-output-to-file write write-char zero?"),l=o("define let letrec let* lambda");function d(e,t,n){this.indent=e,this.type=t,this.prev=n}function u(e,t,n){e.indentStack=new d(t,n,e.indentStack)}function p(e){e.indentStack=e.indentStack.prev}var m=new RegExp(/^(?:[-+]i|[-+][01]+#*(?:\/[01]+#*)?i|[-+]?[01]+#*(?:\/[01]+#*)?@[-+]?[01]+#*(?:\/[01]+#*)?|[-+]?[01]+#*(?:\/[01]+#*)?[-+](?:[01]+#*(?:\/[01]+#*)?)?i|[-+]?[01]+#*(?:\/[01]+#*)?)(?=[()\s;"]|$)/i),f=new RegExp(/^(?:[-+]i|[-+][0-7]+#*(?:\/[0-7]+#*)?i|[-+]?[0-7]+#*(?:\/[0-7]+#*)?@[-+]?[0-7]+#*(?:\/[0-7]+#*)?|[-+]?[0-7]+#*(?:\/[0-7]+#*)?[-+](?:[0-7]+#*(?:\/[0-7]+#*)?)?i|[-+]?[0-7]+#*(?:\/[0-7]+#*)?)(?=[()\s;"]|$)/i),h=new RegExp(/^(?:[-+]i|[-+][\da-f]+#*(?:\/[\da-f]+#*)?i|[-+]?[\da-f]+#*(?:\/[\da-f]+#*)?@[-+]?[\da-f]+#*(?:\/[\da-f]+#*)?|[-+]?[\da-f]+#*(?:\/[\da-f]+#*)?[-+](?:[\da-f]+#*(?:\/[\da-f]+#*)?)?i|[-+]?[\da-f]+#*(?:\/[\da-f]+#*)?)(?=[()\s;"]|$)/i),g=new RegExp(/^(?:[-+]i|[-+](?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*)i|[-+]?(?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*)@[-+]?(?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*)|[-+]?(?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*)[-+](?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*)?i|(?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*))(?=[()\s;"]|$)/i);function x(e){return e.match(m)}function b(e){return e.match(f)}function v(e,t){return!0===t&&e.backUp(1),e.match(g)}function k(e){return e.match(h)}return{startState:function(){return{indentStack:null,indentation:0,mode:!1,sExprComment:!1,sExprQuote:!1}},token:function(c,o){if(null==o.indentStack&&c.sol()&&(o.indentation=c.indentation()),c.eatSpace())return null;var d=null;switch(o.mode){case"string":for(var m,f=!1;null!=(m=c.next());){if('"'==m&&!f){o.mode=!1;break}f=!f&&"\\"==m}d=n;break;case"comment":for(var m,h=!1;null!=(m=c.next());){if("#"==m&&h){o.mode=!1;break}h="|"==m}d=t;break;case"s-expr-comment":if(o.mode=!1,"("!=c.peek()&&"["!=c.peek()){c.eatWhile(/[^\s\(\)\[\]]/),d=t;break}o.sExprComment=0;default:var g=c.next();if('"'==g)o.mode="string",d=n;else if("'"==g)"("==c.peek()||"["==c.peek()?("number"!=typeof o.sExprQuote&&(o.sExprQuote=0),d=r):(c.eatWhile(/[\w_\-!$%&*+\.\/:<=>?@\^~]/),d=r);else if("#"==g)if(c.eat("|"))o.mode="comment",d=t;else if(c.eat(/[tf]/i))d=r;else if(c.eat(";"))o.mode="s-expr-comment",d=t;else{var y=null,w=!1,E=!0;c.eat(/[ei]/i)?w=!0:c.backUp(1),c.match(/^#b/i)?y=x:c.match(/^#o/i)?y=b:c.match(/^#x/i)?y=k:c.match(/^#d/i)?y=v:c.match(/^[-+0-9.]/,!1)?(E=!1,y=v):w||c.eat("#"),null!=y&&(E&&!w&&c.match(/^#[ei]/i),y(c)&&(d=i))}else if(/^[-+0-9.]/.test(g)&&v(c,!0))d=i;else if(";"==g)c.skipToEnd(),d=t;else if("("==g||"["==g){for(var S="",q=c.column(),C;null!=(C=c.eat(/[^\s\(\[\;\)\]]/));)S+=C;S.length>0&&l.propertyIsEnumerable(S)?u(o,q+2,g):(c.eatSpace(),c.eol()||";"==c.peek()?u(o,q+1,g):u(o,q+c.current().length,g)),c.backUp(c.current().length-1),"number"==typeof o.sExprComment&&o.sExprComment++,"number"==typeof o.sExprQuote&&o.sExprQuote++,d=a}else")"==g||"]"==g?(d=a,null!=o.indentStack&&o.indentStack.type==(")"==g?"(":"[")&&(p(o),"number"==typeof o.sExprComment&&0==--o.sExprComment&&(d=t,o.sExprComment=!1),"number"==typeof o.sExprQuote&&0==--o.sExprQuote&&(d=r,o.sExprQuote=!1))):(c.eatWhile(/[\w_\-!$%&*+\.\/:<=>?@\^~]/),d=s&&s.propertyIsEnumerable(c.current())?e:"variable")}return"number"==typeof o.sExprComment?t:"number"==typeof o.sExprQuote?r:d},indent:function(e){return null==e.indentStack?e.indentation:e.indentStack.indent},closeBrackets:{pairs:'()[]{}""'},lineComment:";;"}})),e.defineMIME("text/x-scheme","scheme")},"object"==typeof t&&"object"==typeof n?r(e("../../lib/codemirror")):"function"==typeof define&&define.amd?define(["../../lib/codemirror"],r):r(CodeMirror)}

