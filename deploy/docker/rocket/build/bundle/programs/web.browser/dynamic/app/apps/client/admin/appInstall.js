function module(e,a,t){let n,s,i,r,l,p,o,c;function d(e){if(!e.xhr||!e.xhr.responseJSON)return;const{status:a,messages:t,error:n,payload:s=null}=e.xhr.responseJSON;let i;switch(a){case"storage_error":i=t.join("");break;case"compiler_error":i="There has been compiler errors. App cannot be installed";break;case"app_user_error":i=t.join(""),s&&s.username&&(i=l.__("Apps_User_Already_Exists",{username:s.username}));break;default:i=n||"There has been an error installing the app"}p.error(i)}t.link("meteor/reactive-var",{ReactiveVar(e){n=e}},0),t.link("meteor/kadira:flow-router",{FlowRouter(e){s=e}},1),t.link("meteor/templating",{Template(e){i=e}},2),t.link("meteor/tracker",{Tracker(e){r=e}},3),t.link("meteor/rocketchat:tap-i18n",{TAPi18n(e){l=e}},4),t.link("toastr",{default(e){p=e}},5),t.link("../../../utils",{APIClient(e){o=e}},6),t.link("../../../ui-utils/client",{SideNav(e){c=e}},7),i.appInstall.helpers({appFile:()=>i.instance().file.get(),isInstalling:()=>i.instance().isInstalling.get(),appUrl:()=>i.instance().appUrl.get(),disabled(){const e=i.instance();return!(e.appUrl.get()||e.file.get())},isUpdating(){const e=i.instance();return!!e.isUpdatingId.get()}}),i.appInstall.onCreated((function(){const e=this;e.file=new n(""),e.isInstalling=new n(!1),e.appUrl=new n(""),e.isUpdatingId=new n(""),s.getQueryParam("url")&&(e.appUrl.set(s.getQueryParam("url")),s.setQueryParams({url:null})),s.getQueryParam("isUpdatingId")&&e.isUpdatingId.set(s.getQueryParam("isUpdatingId"))})),i.appInstall.events({"input #appPackage"(e,a){a.appUrl.set(e.currentTarget.value)},"change #upload-app"(e,a){const t=e.currentTarget.files[0];a.file.set(t.name)},"click .js-cancel"(){s.go("/admin/apps")},async"click .js-install"(e,a){const t=$("#appPackage").val().trim();if(t){try{a.isInstalling.set(!0);const e=a.isUpdatingId.get();let n;n=e?await o.post("apps/".concat(a.isUpdatingId.get()),{url:t}):await o.post("apps",{url:t}),s.go("/admin/apps/".concat(n.app.id))}catch(r){d(r)}return void a.isInstalling.set(!1)}const{files:n}=$("#upload-app")[0];if(!(n instanceof FileList))return;const i=new FormData;for(let s=0;s<n.length;s++){const e=n[0];"application/zip"===e.type&&i.append("app",e,e.name)}if(i.has("app")){a.isInstalling.set(!0);try{const e=a.isUpdatingId.get();let t;t=e?await o.upload("apps/".concat(a.isUpdatingId.get()),i):await o.upload("apps",i),s.go("/admin/apps/".concat(t.app.id,"?version=").concat(t.app.version))}catch(r){d(r)}a.isInstalling.set(!1)}}}),i.appInstall.onRendered(()=>{r.afterFlush(()=>{c.setFlex("adminFlex"),c.openFlex()})})}

