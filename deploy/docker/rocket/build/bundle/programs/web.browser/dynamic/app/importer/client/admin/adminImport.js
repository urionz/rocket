function module(t,e,r){let n,o,i,a,s,p,c,l,d,m,g,u,h;r.link("meteor/tracker",{Tracker(t){n=t}},0),r.link("meteor/kadira:flow-router",{FlowRouter(t){o=t}},1),r.link("meteor/templating",{Template(t){i=t}},2),r.link("meteor/reactive-var",{ReactiveVar(t){a=t}},3),r.link("toastr",{default(t){s=t}},4),r.link("../../../utils",{t(t){p=t},APIClient(t){c=t}},5),r.link("../../../ui-utils/client",{SideNav(t){l=t}},6),r.link("../../lib/ImporterProgressStep",{ImportWaitingStates(t){d=t},ImportFileReadyStates(t){m=t},ImportPreparingStartedStates(t){g=t},ImportingStartedStates(t){u=t},ProgressStep(t){h=t}},7),r.link("./adminImport.html"),r.link("./importOperationSummary.js"),i.adminImport.helpers({isPreparing:()=>i.instance().preparing.get(),history:()=>i.instance().history.get(),operation:()=>i.instance().operation.get(),isNotCurrentOperation(){const t=i.instance().operation.get();return!t||(t._id!==this._id||!t.valid)},canShowCurrentOperation(){const t=i.instance().operation.get();return t&&t.valid},canContinueOperation(){const t=i.instance().operation.get();if(!t||!t.valid)return!1;const e=[h.USER_SELECTION].concat(d).concat(m).concat(g);return e.includes(t.status)},canCheckOperationProgress(){const t=i.instance().operation.get();return!(!t||!t.valid)&&u.includes(t.status)},anySuccessfulSlackImports(){const t=i.instance().history.get();if(!t)return!1;for(const e of t)if("slack"===e.importerKey&&e.status===h.DONE)return!0;return!1}}),i.adminImport.events({"click .new-import-btn"(){o.go("/admin/import/new")},"click .download-slack-files-btn"(t,e){e.preparing.set(!0),c.post("v1/downloadPendingFiles").then(t=>{e.preparing.set(!1),t.count?(s.success(p("File_Downloads_Started")),o.go("/admin/import/progress")):s.success(p("No_files_left_to_download"))}).catch(t=>{e.preparing.set(!1),t&&(console.error(t),s.error(p("Failed_To_Download_Files")))})},"click .prepare-btn"(){o.go("/admin/import/prepare")},"click .progress-btn"(){o.go("/admin/import/progress")}}),i.adminImport.onCreated((function(){const t=this;this.preparing=new a(!0),this.history=new a([]),this.operation=new a(!1),c.get("v1/getCurrentImportOperation").then(e=>{t.operation.set(e.operation),c.get("v1/getLatestImportOperations").then(e=>{t.history.set(e),t.preparing.set(!1)}).catch(e=>{e&&(s.error(p("Failed_To_Load_Import_History")),t.preparing.set(!1))})}).catch(e=>{e&&(s.error(p("Failed_To_Load_Import_Operation")),t.preparing.set(!1))})})),i.adminImport.onRendered(()=>{n.afterFlush(()=>{l.setFlex("adminFlex"),l.openFlex()})})}

