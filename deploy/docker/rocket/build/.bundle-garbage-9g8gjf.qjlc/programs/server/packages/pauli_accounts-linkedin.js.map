{"version":3,"sources":["meteor://ðŸ’»app/packages/pauli:accounts-linkedin/notice.js","meteor://ðŸ’»app/packages/pauli:accounts-linkedin/linkedin.js"],"names":["Package","hasOwnProperty","console","warn","Accounts","oauth","registerService","Meteor","isClient","loginWithLinkedin","options","callback","credentialRequestCompleteCallback","credentialRequestCompleteHandler","Linkedin","requestCredential","registerClientLoginFunction","args","applyLoginFunction","addAutopublishFields","forLoggedInUser"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,IAAIA,OAAO,CAAC,aAAD,CAAP,IACG,CAACA,OAAO,CAAC,uBAAD,CADX,IAEG,CAACA,OAAO,CAACC,cAAR,CAAuB,0BAAvB,CAFR,EAE4D;AAC1DC,SAAO,CAACC,IAAR,CACE,kEACA,4DADA,GAEA,mCAFA,GAGA,IAHA,GAIA,yCAJA,GAKA,IANF;AAQD,C;;;;;;;;;;;ACXDC,QAAQ,CAACC,KAAT,CAAeC,eAAf,CAA+B,UAA/B;;AAEA,IAAIC,MAAM,CAACC,QAAX,EAAqB;AACnB,QAAMC,iBAAiB,GAAG,UAASC,OAAT,EAAkBC,QAAlB,EAA4B;AACpD;AACA,QAAI,CAACA,QAAD,IAAa,OAAOD,OAAP,KAAmB,UAApC,EAAgD;AAC9CC,cAAQ,GAAGD,OAAX;AACAA,aAAO,GAAG,IAAV;AACD;;AACD,UAAME,iCAAiC,GAAGR,QAAQ,CAACC,KAAT,CAAeQ,gCAAf,CACxCF,QADwC,CAA1C;AAGAG,YAAQ,CAACC,iBAAT,CACEL,OADF,EAEEE,iCAFF;AAID,GAbD;;AAcAR,UAAQ,CAACY,2BAAT,CACE,UADF,EAEEP,iBAFF;;AAKAF,QAAM,CAACE,iBAAP,GAA2B;AAAA,sCAAIQ,IAAJ;AAAIA,UAAJ;AAAA;;AAAA,WACzBb,QAAQ,CAACc,kBAAT,CAA4B,UAA5B,EAAwCD,IAAxC,CADyB;AAAA,GAA3B;AAED,CAtBD,MAsBO;AACLb,UAAQ,CAACe,oBAAT,CAA8B;AAC5BC,mBAAe,EAAE,CAAC,mBAAD;AADW,GAA9B;AAGD,C","file":"/packages/pauli_accounts-linkedin.js","sourcesContent":["if (Package['accounts-ui']\n    && !Package['service-configuration']\n    && !Package.hasOwnProperty('pauli:linkedin-config-ui')) {\n  console.warn(\n    \"Note: You're using accounts-ui and pauli:accounts-linkedin,\\n\" +\n    \"but didn't install the configuration UI for the Linkedin\\n\" +\n    \"OAuth. You can install it with:\\n\" +\n    \"\\n\" +\n    \"    meteor add pauli:linkedin-config-ui\" +\n    \"\\n\"\n  );\n}\n","Accounts.oauth.registerService('linkedin')\n\nif (Meteor.isClient) {\n  const loginWithLinkedin = function(options, callback) {\n    // support a callback without options\n    if (!callback && typeof options === 'function') {\n      callback = options\n      options = null\n    }\n    const credentialRequestCompleteCallback = Accounts.oauth.credentialRequestCompleteHandler(\n      callback,\n    )\n    Linkedin.requestCredential(\n      options,\n      credentialRequestCompleteCallback,\n    )\n  }\n  Accounts.registerClientLoginFunction(\n    'linkedin',\n    loginWithLinkedin,\n  )\n\n  Meteor.loginWithLinkedin = (...args) =>\n    Accounts.applyLoginFunction('linkedin', args)\n} else {\n  Accounts.addAutopublishFields({\n    forLoggedInUser: ['services.linkedin'],\n  })\n}\n"]}