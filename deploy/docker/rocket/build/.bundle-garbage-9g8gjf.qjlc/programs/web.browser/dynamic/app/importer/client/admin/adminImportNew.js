function module(e,t,i){let r,l,n,p,o,a,s,m,c,d,f,g;i.link("meteor/tracker",{Tracker(e){r=e}},0),i.link("meteor/kadira:flow-router",{FlowRouter(e){l=e}},1),i.link("meteor/templating",{Template(e){n=e}},2),i.link("meteor/rocketchat:tap-i18n",{TAPi18n(e){p=e}},3),i.link("meteor/reactive-var",{ReactiveVar(e){o=e}},4),i.link("toastr",{default(e){a=e}},5),i.link("../../../utils",{t(e){s=e},APIClient(e){m=e}},6),i.link("../../../ui-utils/client",{SideNav(e){c=e}},7),i.link("../../../settings",{settings(e){d=e}},8),i.link("../functions/showImporterException",{showImporterException(e){f=e}},9),i.link("..",{Importers(e){g=e}},10),i.link("./adminImportNew.html"),n.adminImportNew.helpers({isPreparing:()=>n.instance().preparing.get(),importers:()=>g.getAll(),pageTitle(){const e=n.instance().importType.get();if(!e)return s("Import_New_File");const t=g.get(e);return t?p.__("Importer_From_Description",{from:s(t.name)}):s("Import_New_File")},importType:()=>n.instance().importType.get(),fileType:()=>n.instance().fileType.get(),isImporterSelected:()=>n.instance().importType.get(),isFileTypeSelected:()=>n.instance().fileType.get(),isUpload:()=>"upload"===n.instance().fileType.get(),isPublicURL:()=>"url"===n.instance().fileType.get(),isServerFile:()=>"path"===n.instance().fileType.get(),fileSizeLimitMessage(){const e=d.get("FileUpload_MaxFileSize");let t;if(e>0){const i=e/1024,r=i/1024;let l;l=r>0?p.__("FileSize_MB",{fileSize:r.toFixed(2)}):i>0?p.__("FileSize_KB",{fileSize:i.toFixed(2)}):p.__("FileSize_Bytes",{fileSize:e.toFixed(0)}),t=p.__("Importer_Upload_FileSize_Message",{maxFileSize:l})}else t=p.__("Importer_Upload_Unlimited_FileSize");return t}}),n.adminImportNew.events({"change .file-type"(e,t){t.fileType.set($("select[name=file-type]").val())},"change .import-type"(e,t){t.importType.set($("select[name=import-type]").val())},"change .import-file-input"(e,t){const i=t.importType.get(),r=e.originalEvent||e;let{files:n}=r.target;n&&0!==n.length||(n=(null!=r.dataTransfer?r.dataTransfer.files:void 0)||[]),Array.from(n).forEach(e=>{t.preparing.set(!0);const r=new FileReader;r.readAsDataURL(e),r.onloadend=()=>{m.post("v1/uploadImportFile",{binaryContent:r.result.split(";base64,")[1],contentType:e.type,fileName:e.name,importerKey:i}).then(()=>{a.success(s("File_uploaded_successfully")),l.go("/admin/import/prepare")}).catch(e=>{e&&(f(e),t.preparing.set(!1))})}})},"click .import-btn"(e,t){const i=t.importType.get(),r=$(".import-file-url").val();t.preparing.set(!0),m.post("v1/downloadPublicImportFile",{fileUrl:r,importerKey:i}).then(()=>{a.success(s("Import_requested_successfully")),l.go("/admin/import/prepare")}).catch(e=>{e&&(f(e),t.preparing.set(!1))})}}),n.adminImportNew.onCreated((function(){this.preparing=new o(!1),this.importType=new o(""),this.fileType=new o("upload")})),n.adminImportNew.onRendered(()=>{r.afterFlush(()=>{c.setFlex("adminFlex"),c.openFlex()})})}

