function module(t,e,o){let r,n,s,a,i,p,c,l,m,d;o.link("meteor/reactive-var",{ReactiveVar(t){r=t}},0),o.link("meteor/kadira:flow-router",{FlowRouter(t){n=t}},1),o.link("meteor/templating",{Template(t){s=t}},2),o.link("toastr",{default(t){a=t}},3),o.link("../../../utils",{t(t){i=t},handleError(t){p=t},APIClient(t){c=t}},4),o.link("../../lib/ImporterProgressStep",{ProgressStep(t){l=t},ImportingStartedStates(t){m=t}},5),o.link("..",{ImporterWebsocketReceiver(t){d=t}},6),o.link("./adminImportProgress.html"),s.adminImportProgress.helpers({step:()=>s.instance().step.get(),completed:()=>s.instance().completed.get(),total:()=>s.instance().total.get(),progressRate(){try{const t=s.instance(),e=t.completed.get(),o=t.total.get(),r=Math.floor(1e4*e/o)/100;return isNaN(r)?"":"".concat(r,"%")}catch(t){return""}}}),s.adminImportProgress.onCreated((function(){const t=this;this.operation=new r(!1),this.step=new r(i("Loading...")),this.completed=new r(0),this.total=new r(0);let e=!1;function o(e){switch(e.step){case l.DONE:return a.success(i(e.step[0].toUpperCase()+e.step.slice(1))),n.go("/admin/import");case l.ERROR:case l.CANCELLED:return a.error(i(e.step[0].toUpperCase()+e.step.slice(1))),n.go("/admin/import");default:t.step.set(i(e.step[0].toUpperCase()+e.step.slice(1))),e.count.completed&&t.completed.set(e.count.completed),e.count.total&&t.total.set(e.count.total)}}this.progressUpdated=function t(r){r.key.toLowerCase()===e&&o(r)},c.get("v1/getCurrentImportOperation").then(r=>{const{operation:s}=r;return s.valid?m.includes(s.status)?(e=s.importerKey,t.operation.set(s),s.count&&(s.count.total&&t.total.set(s.count.total),s.count.completed&&t.completed.set(s.count.completed)),void c.get("v1/getImportProgress").then(e=>{if(!e)return a.warning(i("Importer_not_in_progress")),n.go("/admin/import/prepare");const r=o(e);r||d.registerCallback(t.progressUpdated)}).catch(t=>(console.warn("Error on getting the import progress:",t),t?p(t):a.error(i("Failed_To_Load_Import_Data")),n.go("/admin/import")))):n.go("/admin/import/prepare"):n.go("/admin/import")}).catch(t=>(t?p(t):a.error(i("Failed_To_Load_Import_Data")),n.go("/admin/import")))})),s.adminImportProgress.onDestroyed((function(){d.unregisterCallback(this.progressUpdated)}))}

