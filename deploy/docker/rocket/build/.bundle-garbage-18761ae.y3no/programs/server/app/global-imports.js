/* Imports for global scope */

check = Package.check.check;
Match = Package.check.Match;
DDPRateLimiter = Package['ddp-rate-limiter'].DDPRateLimiter;
DDPCommon = Package['ddp-common'].DDPCommon;
ECMAScript = Package.ecmascript.ECMAScript;
EJSON = Package.ejson.EJSON;
Email = Package.email.Email;
EmailInternals = Package.email.EmailInternals;
HTTP = Package.http.HTTP;
HTTPInternals = Package.http.HTTPInternals;
Log = Package.logging.Log;
MongoInternals = Package.mongo.MongoInternals;
Mongo = Package.mongo.Mongo;
Random = Package.random.Random;
RateLimiter = Package['rate-limit'].RateLimiter;
ReactiveDict = Package['reactive-dict'].ReactiveDict;
ReactiveVar = Package['reactive-var'].ReactiveVar;
ServiceConfiguration = Package['service-configuration'].ServiceConfiguration;
Spacebars = Package.spacebars.Spacebars;
Tracker = Package.tracker.Tracker;
Deps = Package.tracker.Deps;
Streamer = Package['rocketchat:streamer'].Streamer;
changeCase = Package['konecty:change-case'].changeCase;
DelayedTask = Package['konecty:delayed-task'].DelayedTask;
incrementCounter = Package['konecty:mongo-counter'].incrementCounter;
decrementCounter = Package['konecty:mongo-counter'].decrementCounter;
setCounter = Package['konecty:mongo-counter'].setCounter;
InstanceStatus = Package['konecty:multiple-instances-status'].InstanceStatus;
UserPresence = Package['konecty:user-presence'].UserPresence;
UsersSessions = Package['konecty:user-presence'].UsersSessions;
UserPresenceMonitor = Package['konecty:user-presence'].UserPresenceMonitor;
UserPresenceEvents = Package['konecty:user-presence'].UserPresenceEvents;
Gravatar = Package['jparker:gravatar'].Gravatar;
BlazeLayout = Package['kadira:blaze-layout'].BlazeLayout;
FlowRouter = Package['kadira:flow-router'].FlowRouter;
Restivus = Package['nimble:restivus'].Restivus;
colors = Package['nooitaf:colors'].colors;
Helpers = Package['raix:handlebar-helpers'].Helpers;
Push = Package['rocketchat:push'].Push;
TAPi18next = Package['rocketchat:tap-i18n'].TAPi18next;
TAPi18n = Package['rocketchat:tap-i18n'].TAPi18n;
_ = Package.underscore._;
SyncedCron = Package['littledata:synced-cron'].SyncedCron;
Slingshot = Package['edgee:slingshot'].Slingshot;
Accounts = Package['accounts-base'].Accounts;
Autoupdate = Package.autoupdate.Autoupdate;
Babel = Package['babel-compiler'].Babel;
BabelCompiler = Package['babel-compiler'].BabelCompiler;
Google = Package['google-oauth'].Google;
HTML = Package.htmljs.HTML;
CollectionHooks = Package['matb33:collection-hooks'].CollectionHooks;
Inject = Package['meteorhacks:inject-initial'].Inject;
OAuth = Package.oauth.OAuth;
Oauth = Package.oauth.Oauth;
EventEmitter = Package['raix:eventemitter'].EventEmitter;
RoutePolicy = Package.routepolicy.RoutePolicy;
SHA256 = Package.sha.SHA256;
WebApp = Package.webapp.WebApp;
WebAppInternals = Package.webapp.WebAppInternals;
main = Package.webapp.main;
WebAppHashing = Package['webapp-hashing'].WebAppHashing;
OAuth2Server = Package['rocketchat:oauth2-server'].OAuth2Server;
Facebook = Package['facebook-oauth'].Facebook;
Github = Package['github-oauth'].Github;
MeteorDeveloperAccounts = Package['meteor-developer-oauth'].MeteorDeveloperAccounts;
Twitter = Package['twitter-oauth'].Twitter;
Blaze = Package.ui.Blaze;
UI = Package.ui.UI;
Handlebars = Package.ui.Handlebars;
meteorInstall = Package.modules.meteorInstall;
Promise = Package.promise.Promise;
Meteor = Package.meteor.Meteor;
global = Package.meteor.global;
meteorEnv = Package.meteor.meteorEnv;
DDP = Package['ddp-client'].DDP;
DDPServer = Package['ddp-server'].DDPServer;
LaunchScreen = Package['launch-screen'].LaunchScreen;
Linkedin = Package['pauli:linkedin-oauth'].Linkedin;

