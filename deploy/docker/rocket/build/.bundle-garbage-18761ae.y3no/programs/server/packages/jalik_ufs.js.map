{"version":3,"sources":["meteor://ðŸ’»app/packages/jalik:ufs/ufs.js","meteor://ðŸ’»app/packages/jalik:ufs/ufs-config.js","meteor://ðŸ’»app/packages/jalik:ufs/ufs-filter.js","meteor://ðŸ’»app/packages/jalik:ufs/ufs-methods.js","meteor://ðŸ’»app/packages/jalik:ufs/ufs-mime.js","meteor://ðŸ’»app/packages/jalik:ufs/ufs-server.js","meteor://ðŸ’»app/packages/jalik:ufs/ufs-store-permissions.js","meteor://ðŸ’»app/packages/jalik:ufs/ufs-store.js","meteor://ðŸ’»app/packages/jalik:ufs/ufs-template-helpers.js","meteor://ðŸ’»app/packages/jalik:ufs/ufs-tokens.js","meteor://ðŸ’»app/packages/jalik:ufs/ufs-uploader.js"],"names":["module1","export","UploadFS","_","link","v","Meteor","Mongo","MIME","Random","Tokens","Config","Filter","Store","StorePermissions","Uploader","stores","store","tokens","addETagAttributeToFiles","where","each","getStores","files","getCollection","find","etag","fields","_id","forEach","file","direct","update","$set","generateEtag","addMimeType","extension","mime","toLowerCase","addPathAttributeToFiles","path","getFileRelativeURL","addStore","TypeError","getName","id","getMimeType","getMimeTypes","getStore","name","getTempFilePath","fileId","config","tmpDir","importFromURL","url","callback","call","readAsArrayBuffer","event","console","error","selectFile","input","document","createElement","type","multiple","onchange","ev","target","div","className","style","appendChild","body","click","selectFiles","i","length","isClient","require","isServer","global","window","module","constructor","options","extend","defaultStorePermissions","https","simulateReadDelay","simulateUploadSpeed","simulateWriteDelay","storesPath","tmpDirPermissions","parseInt","self","contentTypes","extensions","minSize","maxSize","onCheck","Array","method","check","Error","size","getMinSize","getMaxSize","getExtensions","contains","getContentTypes","isContentTypeInList","list","wildCardGlob","wildcards","filter","item","indexOf","replace","isValid","result","err","fs","Npm","http","Future","methods","ufsComplete","storeName","token","String","checkToken","fut","tmpFile","removeTempFile","unlink","message","findOne","validate","rs","createReadStream","flags","encoding","autoClose","on","bindEnvironment","remove","throw","write","return","wait","ufsCreate","Object","complete","uploading","substr","lastIndexOf","progress","userId","getFilter","create","createToken","uploadUrl","getURL","ufsDelete","count","ufsImportURL","split","pop","originalUrl","warn","proto","test","unblock","get","res","ufsStop","WebApp","domain","mkdirp","stream","URL","zlib","startup","mode","stat","log","chmod","d","connectHandlers","use","req","next","parsedUrl","parse","pathname","allowCORS","setHeader","regExp","RegExp","match","exec","writeHead","end","query","ws","createWriteStream","parseFloat","isNaN","Math","min","chunk","onRead","undefined","index","_sleepForMs","run","status","headers","modifiedAt","Date","toUTCString","uploadedAt","modifiedSince","range","total","unit","ranges","r","start","getReadStream","PassThrough","onReadError","emit","transformRead","accept","pipe","createGzip","createDeflate","insert","actions","action","modifiers","checkInsert","checkRemove","checkUpdate","collection","onCopyError","onFinishUpload","onValidate","onWriteError","permissions","transformWrite","Collection","value","copy","omit","originalStore","originalId","copyId","generateToken","createdAt","getWriteStream","errorHandler","readStream","data","getFileURL","copyTo","after","before","delete","pattern","c","random","s","toString","round","toUpperCase","getRelativeURL","rootUrl","absoluteUrl","rootPath","trim","encodeURI","secure","request","response","setPermissions","writeStream","Template","isMIME","registerHelper","adaptive","capacity","chunkSize","maxChunkSize","maxTries","onAbort","onComplete","onCreate","onError","onProgress","onStart","onStop","retryDelay","transferDelay","RangeError","Blob","File","capacityMargin","offset","loaded","tries","postUrl","timeA","timeB","elapsedTime","startTime","finish","uploadedFile","abort","getAverageSpeed","seconds","getElapsedTime","getLoaded","isUploading","now","getFile","getProgress","getRemainingTime","averageSpeed","remainingBytes","max","getSpeed","getTotal","isComplete","readChunk","slice","setTimeout","sendChunk","duration","abs","xhr","XMLHttpRequest","onreadystatechange","readyState","open","send","stop"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,SAAO,CAACC,MAAR,CAAe;AAACC,YAAQ,EAAC,MAAIA;AAAd,GAAf;;AAAwC,MAAIC,CAAJ;;AAAMH,SAAO,CAACI,IAAR,CAAa,mBAAb,EAAiC;AAACD,KAAC,CAACE,CAAD,EAAG;AAACF,OAAC,GAACE,CAAF;AAAI;;AAAV,GAAjC,EAA6C,CAA7C;AAAgD,MAAIC,MAAJ;AAAWN,SAAO,CAACI,IAAR,CAAa,eAAb,EAA6B;AAACE,UAAM,CAACD,CAAD,EAAG;AAACC,YAAM,GAACD,CAAP;AAAS;;AAApB,GAA7B,EAAmD,CAAnD;AAAsD,MAAIE,KAAJ;AAAUP,SAAO,CAACI,IAAR,CAAa,cAAb,EAA4B;AAACG,SAAK,CAACF,CAAD,EAAG;AAACE,WAAK,GAACF,CAAN;AAAQ;;AAAlB,GAA5B,EAAgD,CAAhD;AAAmD,MAAIG,IAAJ;AAASR,SAAO,CAACI,IAAR,CAAa,YAAb,EAA0B;AAACI,QAAI,CAACH,CAAD,EAAG;AAACG,UAAI,GAACH,CAAL;AAAO;;AAAhB,GAA1B,EAA4C,CAA5C;AAA+C,MAAII,MAAJ;AAAWT,SAAO,CAACI,IAAR,CAAa,eAAb,EAA6B;AAACK,UAAM,CAACJ,CAAD,EAAG;AAACI,YAAM,GAACJ,CAAP;AAAS;;AAApB,GAA7B,EAAmD,CAAnD;AAAsD,MAAIK,MAAJ;AAAWV,SAAO,CAACI,IAAR,CAAa,cAAb,EAA4B;AAACM,UAAM,CAACL,CAAD,EAAG;AAACK,YAAM,GAACL,CAAP;AAAS;;AAApB,GAA5B,EAAkD,CAAlD;AAAqD,MAAIM,MAAJ;AAAWX,SAAO,CAACI,IAAR,CAAa,cAAb,EAA4B;AAACO,UAAM,CAACN,CAAD,EAAG;AAACM,YAAM,GAACN,CAAP;AAAS;;AAApB,GAA5B,EAAkD,CAAlD;AAAqD,MAAIO,MAAJ;AAAWZ,SAAO,CAACI,IAAR,CAAa,cAAb,EAA4B;AAACQ,UAAM,CAACP,CAAD,EAAG;AAACO,YAAM,GAACP,CAAP;AAAS;;AAApB,GAA5B,EAAkD,CAAlD;AAAqD,MAAIQ,KAAJ;AAAUb,SAAO,CAACI,IAAR,CAAa,aAAb,EAA2B;AAACS,SAAK,CAACR,CAAD,EAAG;AAACQ,WAAK,GAACR,CAAN;AAAQ;;AAAlB,GAA3B,EAA+C,CAA/C;AAAkD,MAAIS,gBAAJ;AAAqBd,SAAO,CAACI,IAAR,CAAa,yBAAb,EAAuC;AAACU,oBAAgB,CAACT,CAAD,EAAG;AAACS,sBAAgB,GAACT,CAAjB;AAAmB;;AAAxC,GAAvC,EAAiF,CAAjF;AAAoF,MAAIU,QAAJ;AAAaf,SAAO,CAACI,IAAR,CAAa,gBAAb,EAA8B;AAACW,YAAQ,CAACV,CAAD,EAAG;AAACU,cAAQ,GAACV,CAAT;AAAW;;AAAxB,GAA9B,EAAwD,EAAxD;AAqCvsB,MAAIW,MAAM,GAAG,EAAb;AAEO,QAAMd,QAAQ,GAAG;AAEpB;;;AAGAe,SAAK,EAAE,EALa;;AAOpB;;;AAGAC,UAAM,EAAER,MAVY;;AAYpB;;;;AAIAS,2BAAuB,CAACC,KAAD,EAAQ;AAC3BjB,OAAC,CAACkB,IAAF,CAAO,KAAKC,SAAL,EAAP,EAA0BL,KAAD,IAAW;AAChC,cAAMM,KAAK,GAAGN,KAAK,CAACO,aAAN,EAAd,CADgC,CAGhC;;AACAD,aAAK,CAACE,IAAN,CAAWL,KAAK,IAAI;AAACM,cAAI,EAAE;AAAP,SAApB,EAAkC;AAACC,gBAAM,EAAE;AAACC,eAAG,EAAE;AAAN;AAAT,SAAlC,EAAsDC,OAAtD,CAA+DC,IAAD,IAAU;AACpEP,eAAK,CAACQ,MAAN,CAAaC,MAAb,CAAoBF,IAAI,CAACF,GAAzB,EAA8B;AAACK,gBAAI,EAAE;AAACP,kBAAI,EAAE,KAAKQ,YAAL;AAAP;AAAP,WAA9B;AACH,SAFD;AAGH,OAPD;AAQH,KAzBmB;;AA2BpB;;;;;AAKAC,eAAW,CAACC,SAAD,EAAYC,IAAZ,EAAkB;AACzB7B,UAAI,CAAC4B,SAAS,CAACE,WAAV,EAAD,CAAJ,GAAgCD,IAAhC;AACH,KAlCmB;;AAoCpB;;;;AAIAE,2BAAuB,CAACnB,KAAD,EAAQ;AAC3BjB,OAAC,CAACkB,IAAF,CAAO,KAAKC,SAAL,EAAP,EAA0BL,KAAD,IAAW;AAChC,cAAMM,KAAK,GAAGN,KAAK,CAACO,aAAN,EAAd,CADgC,CAGhC;;AACAD,aAAK,CAACE,IAAN,CAAWL,KAAK,IAAI;AAACoB,cAAI,EAAE;AAAP,SAApB,EAAkC;AAACb,gBAAM,EAAE;AAACC,eAAG,EAAE;AAAN;AAAT,SAAlC,EAAsDC,OAAtD,CAA+DC,IAAD,IAAU;AACpEP,eAAK,CAACQ,MAAN,CAAaC,MAAb,CAAoBF,IAAI,CAACF,GAAzB,EAA8B;AAACK,gBAAI,EAAE;AAACO,kBAAI,EAAEvB,KAAK,CAACwB,kBAAN,CAAyBX,IAAI,CAACF,GAA9B;AAAP;AAAP,WAA9B;AACH,SAFD;AAGH,OAPD;AAQH,KAjDmB;;AAmDpB;;;;AAIAc,YAAQ,CAACzB,KAAD,EAAQ;AACZ,UAAI,EAAEA,KAAK,YAAYJ,KAAnB,CAAJ,EAA+B;AAC3B,cAAM,IAAI8B,SAAJ,oDAAN;AACH;;AACD3B,YAAM,CAACC,KAAK,CAAC2B,OAAN,EAAD,CAAN,GAA0B3B,KAA1B;AACH,KA5DmB;;AA8DpB;;;;AAIAiB,gBAAY,GAAG;AACX,aAAOzB,MAAM,CAACoC,EAAP,EAAP;AACH,KApEmB;;AAsEpB;;;;;AAKAC,eAAW,CAACV,SAAD,EAAY;AACnBA,eAAS,GAAGA,SAAS,CAACE,WAAV,EAAZ;AACA,aAAO9B,IAAI,CAAC4B,SAAD,CAAX;AACH,KA9EmB;;AAgFpB;;;AAGAW,gBAAY,GAAG;AACX,aAAOvC,IAAP;AACH,KArFmB;;AAuFpB;;;;;AAKAwC,YAAQ,CAACC,IAAD,EAAO;AACX,aAAOjC,MAAM,CAACiC,IAAD,CAAb;AACH,KA9FmB;;AAgGpB;;;;AAIA3B,aAAS,GAAG;AACR,aAAON,MAAP;AACH,KAtGmB;;AAwGpB;;;;;AAKAkC,mBAAe,CAACC,MAAD,EAAS;AACpB,uBAAU,KAAKC,MAAL,CAAYC,MAAtB,cAAgCF,MAAhC;AACH,KA/GmB;;AAiHpB;;;;;;;AAOAG,iBAAa,CAACC,GAAD,EAAMzB,IAAN,EAAYb,KAAZ,EAAmBuC,QAAnB,EAA6B;AACtC,UAAI,OAAOvC,KAAP,KAAiB,QAArB,EAA+B;AAC3BX,cAAM,CAACmD,IAAP,CAAY,cAAZ,EAA4BF,GAA5B,EAAiCzB,IAAjC,EAAuCb,KAAvC,EAA8CuC,QAA9C;AACH,OAFD,MAGK,IAAI,OAAOvC,KAAP,KAAiB,QAArB,EAA+B;AAChCA,aAAK,CAACqC,aAAN,CAAoBC,GAApB,EAAyBzB,IAAzB,EAA+B0B,QAA/B;AACH;AACJ,KA/HmB;;AAiIpB;;;;;;AAMAE,qBAAiB,CAAEC,KAAF,EAASH,QAAT,EAAmB;AAChCI,aAAO,CAACC,KAAR,CAAc,wGAAd;AACH,KAzImB;;AA2IpB;;;;AAIAC,cAAU,CAACN,QAAD,EAAW;AACjB,YAAMO,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAd;AACAF,WAAK,CAACG,IAAN,GAAa,MAAb;AACAH,WAAK,CAACI,QAAN,GAAiB,KAAjB;;AACAJ,WAAK,CAACK,QAAN,GAAkBC,EAAD,IAAQ;AACrB,YAAI9C,KAAK,GAAG8C,EAAE,CAACC,MAAH,CAAU/C,KAAtB;AACAiC,gBAAQ,CAACC,IAAT,CAAcvD,QAAd,EAAwBqB,KAAK,CAAC,CAAD,CAA7B;AACH,OAHD,CAJiB,CAQjB;;;AACA,YAAMgD,GAAG,GAAGP,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAZ;AACAM,SAAG,CAACC,SAAJ,GAAgB,mBAAhB;AACAD,SAAG,CAACE,KAAJ,GAAY,oDAAZ;AACAF,SAAG,CAACG,WAAJ,CAAgBX,KAAhB;AACAC,cAAQ,CAACW,IAAT,CAAcD,WAAd,CAA0BH,GAA1B,EAbiB,CAcjB;;AACAR,WAAK,CAACa,KAAN;AACH,KA/JmB;;AAiKpB;;;;AAIAC,eAAW,CAACrB,QAAD,EAAW;AAClB,YAAMO,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAd;AACAF,WAAK,CAACG,IAAN,GAAa,MAAb;AACAH,WAAK,CAACI,QAAN,GAAiB,IAAjB;;AACAJ,WAAK,CAACK,QAAN,GAAkBC,EAAD,IAAQ;AACrB,cAAM9C,KAAK,GAAG8C,EAAE,CAACC,MAAH,CAAU/C,KAAxB;;AAEA,aAAK,IAAIuD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGvD,KAAK,CAACwD,MAA1B,EAAkCD,CAAC,IAAI,CAAvC,EAA0C;AACtCtB,kBAAQ,CAACC,IAAT,CAAcvD,QAAd,EAAwBqB,KAAK,CAACuD,CAAD,CAA7B;AACH;AACJ,OAND,CAJkB,CAWlB;;;AACA,YAAMP,GAAG,GAAGP,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAZ;AACAM,SAAG,CAACC,SAAJ,GAAgB,mBAAhB;AACAD,SAAG,CAACE,KAAJ,GAAY,oDAAZ;AACAF,SAAG,CAACG,WAAJ,CAAgBX,KAAhB;AACAC,cAAQ,CAACW,IAAT,CAAcD,WAAd,CAA0BH,GAA1B,EAhBkB,CAiBlB;;AACAR,WAAK,CAACa,KAAN;AACH;;AAxLmB,GAAjB;;AA4LP,MAAItE,MAAM,CAAC0E,QAAX,EAAqB;AACjBC,WAAO,CAAC,wBAAD,CAAP;AACH;;AACD,MAAI3E,MAAM,CAAC4E,QAAX,EAAqB;AACjBD,WAAO,CAAC,eAAD,CAAP;;AACAA,WAAO,CAAC,cAAD,CAAP;AACH;AAED;;;;;;AAIA/E,UAAQ,CAACkD,MAAT,GAAkB,IAAIzC,MAAJ,EAAlB,C,CAEA;;AACAT,UAAQ,CAACS,MAAT,GAAkBA,MAAlB;AACAT,UAAQ,CAACU,MAAT,GAAkBA,MAAlB;AACAV,UAAQ,CAACW,KAAT,GAAiBA,KAAjB;AACAX,UAAQ,CAACY,gBAAT,GAA4BA,gBAA5B;AACAZ,UAAQ,CAACa,QAAT,GAAoBA,QAApB;;AAEA,MAAIT,MAAM,CAAC4E,QAAX,EAAqB;AACjB;AACA,QAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AAC/BA,YAAM,CAAC,UAAD,CAAN,GAAqBjF,QAArB;AACH;AACJ,GALD,MAMK,IAAII,MAAM,CAAC0E,QAAX,EAAqB;AACtB;AACA,QAAI,OAAOI,MAAP,KAAkB,WAAtB,EAAmC;AAC/BA,YAAM,CAAClF,QAAP,GAAkBA,QAAlB;AACH;AACJ;;;;;;;;;;;;ACnQDmF,MAAM,CAACpF,MAAP,CAAc;AAACU,QAAM,EAAC,MAAIA;AAAZ,CAAd;;AAAmC,IAAIR,CAAJ;;AAAMkF,MAAM,CAACjF,IAAP,CAAY,mBAAZ,EAAgC;AAACD,GAAC,CAACE,CAAD,EAAG;AAACF,KAAC,GAACE,CAAF;AAAI;;AAAV,CAAhC,EAA4C,CAA5C;AAA+C,IAAIC,MAAJ;AAAW+E,MAAM,CAACjF,IAAP,CAAY,eAAZ,EAA4B;AAACE,QAAM,CAACD,CAAD,EAAG;AAACC,UAAM,GAACD,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIS,gBAAJ;AAAqBuE,MAAM,CAACjF,IAAP,CAAY,yBAAZ,EAAsC;AAACU,kBAAgB,CAACT,CAAD,EAAG;AAACS,oBAAgB,GAACT,CAAjB;AAAmB;;AAAxC,CAAtC,EAAgF,CAAhF;;AAiCtK,MAAMM,MAAN,CAAa;AAEhB2E,aAAW,CAACC,OAAD,EAAU;AACjB;AACAA,WAAO,GAAGpF,CAAC,CAACqF,MAAF,CAAS;AACfC,6BAAuB,EAAE,IADV;AAEfC,WAAK,EAAE,KAFQ;AAGfC,uBAAiB,EAAE,CAHJ;AAIfC,yBAAmB,EAAE,CAJN;AAKfC,wBAAkB,EAAE,CALL;AAMfC,gBAAU,EAAE,KANG;AAOfzC,YAAM,EAAE,UAPO;AAQf0C,uBAAiB,EAAE;AARJ,KAAT,EASPR,OATO,CAAV,CAFiB,CAajB;;AACA,QAAIA,OAAO,CAACE,uBAAR,IAAmC,EAAEF,OAAO,CAACE,uBAAR,YAA2C3E,gBAA7C,CAAvC,EAAuG;AACnG,YAAM,IAAI6B,SAAJ,CAAc,wEAAd,CAAN;AACH;;AACD,QAAI,OAAO4C,OAAO,CAACG,KAAf,KAAyB,SAA7B,EAAwC;AACpC,YAAM,IAAI/C,SAAJ,CAAc,iCAAd,CAAN;AACH;;AACD,QAAI,OAAO4C,OAAO,CAACI,iBAAf,KAAqC,QAAzC,EAAmD;AAC/C,YAAM,IAAIhD,SAAJ,CAAc,2CAAd,CAAN;AACH;;AACD,QAAI,OAAO4C,OAAO,CAACK,mBAAf,KAAuC,QAA3C,EAAqD;AACjD,YAAM,IAAIjD,SAAJ,CAAc,6CAAd,CAAN;AACH;;AACD,QAAI,OAAO4C,OAAO,CAACM,kBAAf,KAAsC,QAA1C,EAAoD;AAChD,YAAM,IAAIlD,SAAJ,CAAc,4CAAd,CAAN;AACH;;AACD,QAAI,OAAO4C,OAAO,CAACO,UAAf,KAA8B,QAAlC,EAA4C;AACxC,YAAM,IAAInD,SAAJ,CAAc,oCAAd,CAAN;AACH;;AACD,QAAI,OAAO4C,OAAO,CAAClC,MAAf,KAA0B,QAA9B,EAAwC;AACpC,YAAM,IAAIV,SAAJ,CAAc,gCAAd,CAAN;AACH;;AACD,QAAI,OAAO4C,OAAO,CAACQ,iBAAf,KAAqC,QAAzC,EAAmD;AAC/C,YAAM,IAAIpD,SAAJ,CAAc,2CAAd,CAAN;AACH;AAED;;;;;;AAIA,SAAK8C,uBAAL,GAA+BF,OAAO,CAACE,uBAAvC;AACA;;;;;AAIA,SAAKC,KAAL,GAAaH,OAAO,CAACG,KAArB;AACA;;;;;AAIA,SAAKC,iBAAL,GAAyBK,QAAQ,CAACT,OAAO,CAACI,iBAAT,CAAjC;AACA;;;;;AAIA,SAAKC,mBAAL,GAA2BI,QAAQ,CAACT,OAAO,CAACK,mBAAT,CAAnC;AACA;;;;;AAIA,SAAKC,kBAAL,GAA0BG,QAAQ,CAACT,OAAO,CAACM,kBAAT,CAAlC;AACA;;;;;AAIA,SAAKC,UAAL,GAAkBP,OAAO,CAACO,UAA1B;AACA;;;;;AAIA,SAAKzC,MAAL,GAAckC,OAAO,CAAClC,MAAtB;AACA;;;;;AAIA,SAAK0C,iBAAL,GAAyBR,OAAO,CAACQ,iBAAjC;AACH;;AAjFe,C;;;;;;;;;;;ACjCpBV,MAAM,CAACpF,MAAP,CAAc;AAACW,QAAM,EAAC,MAAIA;AAAZ,CAAd;;AAAmC,IAAIT,CAAJ;;AAAMkF,MAAM,CAACjF,IAAP,CAAY,mBAAZ,EAAgC;AAACD,GAAC,CAACE,CAAD,EAAG;AAACF,KAAC,GAACE,CAAF;AAAI;;AAAV,CAAhC,EAA4C,CAA5C;AAA+C,IAAIC,MAAJ;AAAW+E,MAAM,CAACjF,IAAP,CAAY,eAAZ,EAA4B;AAACE,QAAM,CAACD,CAAD,EAAG;AAACC,UAAM,GAACD,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;;AA+B5F,MAAMO,MAAN,CAAa;AAEhB0E,aAAW,CAACC,OAAD,EAAU;AACjB,UAAMU,IAAI,GAAG,IAAb,CADiB,CAGjB;;AACAV,WAAO,GAAGpF,CAAC,CAACqF,MAAF,CAAS;AACfU,kBAAY,EAAE,IADC;AAEfC,gBAAU,EAAE,IAFG;AAGfC,aAAO,EAAE,CAHM;AAIfC,aAAO,EAAE,CAJM;AAKfC,aAAO,EAAE,KAAKA;AALC,KAAT,EAMPf,OANO,CAAV,CAJiB,CAYjB;;AACA,QAAIA,OAAO,CAACW,YAAR,IAAwB,EAAEX,OAAO,CAACW,YAAR,YAAgCK,KAAlC,CAA5B,EAAsE;AAClE,YAAM,IAAI5D,SAAJ,CAAc,sCAAd,CAAN;AACH;;AACD,QAAI4C,OAAO,CAACY,UAAR,IAAsB,EAAEZ,OAAO,CAACY,UAAR,YAA8BI,KAAhC,CAA1B,EAAkE;AAC9D,YAAM,IAAI5D,SAAJ,CAAc,oCAAd,CAAN;AACH;;AACD,QAAI,OAAO4C,OAAO,CAACa,OAAf,KAA2B,QAA/B,EAAyC;AACrC,YAAM,IAAIzD,SAAJ,CAAc,iCAAd,CAAN;AACH;;AACD,QAAI,OAAO4C,OAAO,CAACc,OAAf,KAA2B,QAA/B,EAAyC;AACrC,YAAM,IAAI1D,SAAJ,CAAc,iCAAd,CAAN;AACH;;AACD,QAAI4C,OAAO,CAACe,OAAR,IAAmB,OAAOf,OAAO,CAACe,OAAf,KAA2B,UAAlD,EAA8D;AAC1D,YAAM,IAAI3D,SAAJ,CAAc,mCAAd,CAAN;AACH,KA3BgB,CA6BjB;;;AACAsD,QAAI,CAACV,OAAL,GAAeA,OAAf;;AACApF,KAAC,CAACkB,IAAF,CAAO,CACH,SADG,CAAP,EAEImF,MAAD,IAAY;AACX,UAAI,OAAOjB,OAAO,CAACiB,MAAD,CAAd,KAA2B,UAA/B,EAA2C;AACvCP,YAAI,CAACO,MAAD,CAAJ,GAAejB,OAAO,CAACiB,MAAD,CAAtB;AACH;AACJ,KAND;AAOH;AAED;;;;;;AAIAC,OAAK,CAAC3E,IAAD,EAAO;AACR,QAAI,OAAOA,IAAP,KAAgB,QAAhB,IAA4B,CAACA,IAAjC,EAAuC;AACnC,YAAM,IAAIxB,MAAM,CAACoG,KAAX,CAAiB,cAAjB,EAAiC,mBAAjC,CAAN;AACH,KAHO,CAIR;;;AACA,QAAI5E,IAAI,CAAC6E,IAAL,IAAa,CAAb,IAAkB7E,IAAI,CAAC6E,IAAL,GAAY,KAAKC,UAAL,EAAlC,EAAqD;AACjD,YAAM,IAAItG,MAAM,CAACoG,KAAX,CAAiB,gBAAjB,0CAAoE,KAAKE,UAAL,EAApE,OAAN;AACH;;AACD,QAAI,KAAKC,UAAL,KAAoB,CAApB,IAAyB/E,IAAI,CAAC6E,IAAL,GAAY,KAAKE,UAAL,EAAzC,EAA4D;AACxD,YAAM,IAAIvG,MAAM,CAACoG,KAAX,CAAiB,gBAAjB,0CAAoE,KAAKG,UAAL,EAApE,OAAN;AACH,KAVO,CAWR;;;AACA,QAAI,KAAKC,aAAL,MAAwB,CAAC3G,CAAC,CAAC4G,QAAF,CAAW,KAAKD,aAAL,EAAX,EAAiChF,IAAI,CAACM,SAAtC,CAA7B,EAA+E;AAC3E,YAAM,IAAI9B,MAAM,CAACoG,KAAX,CAAiB,wBAAjB,6BAA8D5E,IAAI,CAACM,SAAnE,wBAAN;AACH,KAdO,CAeR;;;AACA,QAAI,KAAK4E,eAAL,MAA0B,CAAC,KAAKC,mBAAL,CAAyBnF,IAAI,CAACoC,IAA9B,EAAoC,KAAK8C,eAAL,EAApC,CAA/B,EAA4F;AACxF,YAAM,IAAI1G,MAAM,CAACoG,KAAX,CAAiB,mBAAjB,wBAAoD5E,IAAI,CAACoC,IAAzD,wBAAN;AACH,KAlBO,CAmBR;;;AACA,QAAI,OAAO,KAAKoC,OAAZ,KAAwB,UAAxB,IAAsC,CAAC,KAAKA,OAAL,CAAaxE,IAAb,CAA3C,EAA+D;AAC3D,YAAM,IAAIxB,MAAM,CAACoG,KAAX,CAAiB,cAAjB,EAAiC,4BAAjC,CAAN;AACH;AACJ;AAED;;;;;;AAIAM,iBAAe,GAAG;AACd,WAAO,KAAKzB,OAAL,CAAaW,YAApB;AACH;AAED;;;;;;AAIAY,eAAa,GAAG;AACZ,WAAO,KAAKvB,OAAL,CAAaY,UAApB;AACH;AAED;;;;;;AAIAU,YAAU,GAAG;AACT,WAAO,KAAKtB,OAAL,CAAac,OAApB;AACH;AAED;;;;;;AAIAO,YAAU,GAAG;AACT,WAAO,KAAKrB,OAAL,CAAaa,OAApB;AACH;AAED;;;;;;;;AAMAa,qBAAmB,CAAC/C,IAAD,EAAOgD,IAAP,EAAa;AAC5B,QAAI,OAAOhD,IAAP,KAAgB,QAAhB,IAA4BgD,IAAI,YAAYX,KAAhD,EAAuD;AACnD,UAAIpG,CAAC,CAAC4G,QAAF,CAAWG,IAAX,EAAiBhD,IAAjB,CAAJ,EAA4B;AACxB,eAAO,IAAP;AACH,OAFD,MAEO;AACH,YAAIiD,YAAY,GAAG,IAAnB;;AACA,YAAIC,SAAS,GAAGjH,CAAC,CAACkH,MAAF,CAASH,IAAT,EAAgBI,IAAD,IAAU;AACrC,iBAAOA,IAAI,CAACC,OAAL,CAAaJ,YAAb,IAA6B,CAApC;AACH,SAFe,CAAhB;;AAIA,YAAIhH,CAAC,CAAC4G,QAAF,CAAWK,SAAX,EAAsBlD,IAAI,CAACsD,OAAL,CAAa,SAAb,EAAwBL,YAAxB,CAAtB,CAAJ,EAAkE;AAC9D,iBAAO,IAAP;AACH;AACJ;AACJ;;AACD,WAAO,KAAP;AACH;AAED;;;;;;;AAKAM,SAAO,CAAC3F,IAAD,EAAO;AACV,QAAI4F,MAAM,GAAG,IAAb;;AACA,QAAI;AACA,WAAKjB,KAAL,CAAW3E,IAAX;AACH,KAFD,CAEE,OAAO6F,GAAP,EAAY;AACVD,YAAM,GAAG,KAAT;AACH;;AACD,WAAOA,MAAP;AACH;AAED;;;;;;;AAKApB,SAAO,CAACxE,IAAD,EAAO;AACV,WAAO,IAAP;AACH;;AArJe,C;;;;;;;;;;;AC/BpB,IAAI3B,CAAJ;;AAAMkF,MAAM,CAACjF,IAAP,CAAY,mBAAZ,EAAgC;AAACD,GAAC,CAACE,CAAD,EAAG;AAACF,KAAC,GAACE,CAAF;AAAI;;AAAV,CAAhC,EAA4C,CAA5C;AAA+C,IAAIoG,KAAJ;AAAUpB,MAAM,CAACjF,IAAP,CAAY,cAAZ,EAA2B;AAACqG,OAAK,CAACpG,CAAD,EAAG;AAACoG,SAAK,GAACpG,CAAN;AAAQ;;AAAlB,CAA3B,EAA+C,CAA/C;AAAkD,IAAIC,MAAJ;AAAW+E,MAAM,CAACjF,IAAP,CAAY,eAAZ,EAA4B;AAACE,QAAM,CAACD,CAAD,EAAG;AAACC,UAAM,GAACD,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIH,QAAJ;AAAamF,MAAM,CAACjF,IAAP,CAAY,OAAZ,EAAoB;AAACF,UAAQ,CAACG,CAAD,EAAG;AAACH,YAAQ,GAACG,CAAT;AAAW;;AAAxB,CAApB,EAA8C,CAA9C;AAAiD,IAAIO,MAAJ;AAAWyE,MAAM,CAACjF,IAAP,CAAY,cAAZ,EAA2B;AAACQ,QAAM,CAACP,CAAD,EAAG;AAACO,UAAM,GAACP,CAAP;AAAS;;AAApB,CAA3B,EAAiD,CAAjD;AAAoD,IAAIK,MAAJ;AAAW2E,MAAM,CAACjF,IAAP,CAAY,cAAZ,EAA2B;AAACM,QAAM,CAACL,CAAD,EAAG;AAACK,UAAM,GAACL,CAAP;AAAS;;AAApB,CAA3B,EAAiD,CAAjD;;AAgCzT,MAAMuH,EAAE,GAAGC,GAAG,CAAC5C,OAAJ,CAAY,IAAZ,CAAX;;AACA,MAAM6C,IAAI,GAAGD,GAAG,CAAC5C,OAAJ,CAAY,MAAZ,CAAb;;AACA,MAAMS,KAAK,GAAGmC,GAAG,CAAC5C,OAAJ,CAAY,OAAZ,CAAd;;AACA,MAAM8C,MAAM,GAAGF,GAAG,CAAC5C,OAAJ,CAAY,eAAZ,CAAf;;AAGA,IAAI3E,MAAM,CAAC4E,QAAX,EAAqB;AACjB5E,QAAM,CAAC0H,OAAP,CAAe;AAEX;;;;;;AAMAC,eAAW,CAAC9E,MAAD,EAAS+E,SAAT,EAAoBC,KAApB,EAA2B;AAClC1B,WAAK,CAACtD,MAAD,EAASiF,MAAT,CAAL;AACA3B,WAAK,CAACyB,SAAD,EAAYE,MAAZ,CAAL;AACA3B,WAAK,CAAC0B,KAAD,EAAQC,MAAR,CAAL,CAHkC,CAKlC;;AACA,UAAInH,KAAK,GAAGf,QAAQ,CAAC8C,QAAT,CAAkBkF,SAAlB,CAAZ;;AACA,UAAI,CAACjH,KAAL,EAAY;AACR,cAAM,IAAIX,MAAM,CAACoG,KAAX,CAAiB,eAAjB,EAAkC,iBAAlC,CAAN;AACH,OATiC,CAUlC;;;AACA,UAAI,CAACzF,KAAK,CAACoH,UAAN,CAAiBF,KAAjB,EAAwBhF,MAAxB,CAAL,EAAsC;AAClC,cAAM,IAAI7C,MAAM,CAACoG,KAAX,CAAiB,eAAjB,EAAkC,oBAAlC,CAAN;AACH;;AAED,UAAI4B,GAAG,GAAG,IAAIP,MAAJ,EAAV;AACA,UAAIQ,OAAO,GAAGrI,QAAQ,CAACgD,eAAT,CAAyBC,MAAzB,CAAd;;AAEA,YAAMqF,cAAc,GAAG,YAAY;AAC/BZ,UAAE,CAACa,MAAH,CAAUF,OAAV,EAAmB,UAAUZ,GAAV,EAAe;AAC9BA,aAAG,IAAI/D,OAAO,CAACC,KAAR,0CAA+C0E,OAA/C,iBAA4DZ,GAAG,CAACe,OAAhE,OAAP;AACH,SAFD;AAGH,OAJD;;AAMA,UAAI;AACA;AAEA;AACA,YAAI5G,IAAI,GAAGb,KAAK,CAACO,aAAN,GAAsBmH,OAAtB,CAA8B;AAAC/G,aAAG,EAAEuB;AAAN,SAA9B,CAAX,CAJA,CAMA;;AACAlC,aAAK,CAAC2H,QAAN,CAAe9G,IAAf,EAPA,CASA;;AACA,YAAI+G,EAAE,GAAGjB,EAAE,CAACkB,gBAAH,CAAoBP,OAApB,EAA6B;AAClCQ,eAAK,EAAE,GAD2B;AAElCC,kBAAQ,EAAE,IAFwB;AAGlCC,mBAAS,EAAE;AAHuB,SAA7B,CAAT,CAVA,CAgBA;;AACAJ,UAAE,CAACK,EAAH,CAAM,OAAN,EAAe5I,MAAM,CAAC6I,eAAP,CAAuB,UAAUxB,GAAV,EAAe;AACjD/D,iBAAO,CAACC,KAAR,CAAc8D,GAAd;AACA1G,eAAK,CAACO,aAAN,GAAsB4H,MAAtB,CAA6B;AAACxH,eAAG,EAAEuB;AAAN,WAA7B;AACAmF,aAAG,CAACe,KAAJ,CAAU1B,GAAV;AACH,SAJc,CAAf,EAjBA,CAuBA;;AACA1G,aAAK,CAACqI,KAAN,CAAYT,EAAZ,EAAgB1F,MAAhB,EAAwB7C,MAAM,CAAC6I,eAAP,CAAuB,UAAUxB,GAAV,EAAe7F,IAAf,EAAqB;AAChE0G,wBAAc;;AAEd,cAAIb,GAAJ,EAAS;AACLW,eAAG,CAACe,KAAJ,CAAU1B,GAAV;AACH,WAFD,MAEO;AACH;AACA;AACA;AACAjH,kBAAM,CAAC0I,MAAP,CAAc;AAACjG,oBAAM,EAAEA;AAAT,aAAd;AACAmF,eAAG,CAACiB,MAAJ,CAAWzH,IAAX;AACH;AACJ,SAZuB,CAAxB;AAaH,OArCD,CAsCA,OAAO6F,GAAP,EAAY;AACR;AACA1G,aAAK,CAACO,aAAN,GAAsB4H,MAAtB,CAA6B;AAACxH,aAAG,EAAEuB;AAAN,SAA7B,EAFQ,CAGR;;AACAmF,WAAG,CAACe,KAAJ,CAAU1B,GAAV;AACH;;AACD,aAAOW,GAAG,CAACkB,IAAJ,EAAP;AACH,KA7EU;;AA+EX;;;;;AAKAC,aAAS,CAAC3H,IAAD,EAAO;AACZ2E,WAAK,CAAC3E,IAAD,EAAO4H,MAAP,CAAL;;AAEA,UAAI,OAAO5H,IAAI,CAACmB,IAAZ,KAAqB,QAArB,IAAiC,CAACnB,IAAI,CAACmB,IAAL,CAAU8B,MAAhD,EAAwD;AACpD,cAAM,IAAIzE,MAAM,CAACoG,KAAX,CAAiB,mBAAjB,EAAsC,wBAAtC,CAAN;AACH;;AACD,UAAI,OAAO5E,IAAI,CAACb,KAAZ,KAAsB,QAAtB,IAAkC,CAACa,IAAI,CAACb,KAAL,CAAW8D,MAAlD,EAA0D;AACtD,cAAM,IAAIzE,MAAM,CAACoG,KAAX,CAAiB,eAAjB,EAAkC,oBAAlC,CAAN;AACH,OARW,CASZ;;;AACA,UAAIzF,KAAK,GAAGf,QAAQ,CAAC8C,QAAT,CAAkBlB,IAAI,CAACb,KAAvB,CAAZ;;AACA,UAAI,CAACA,KAAL,EAAY;AACR,cAAM,IAAIX,MAAM,CAACoG,KAAX,CAAiB,eAAjB,EAAkC,iBAAlC,CAAN;AACH,OAbW,CAeZ;;;AACA5E,UAAI,CAAC6H,QAAL,GAAgB,KAAhB;AACA7H,UAAI,CAAC8H,SAAL,GAAiB,KAAjB;AACA9H,UAAI,CAACM,SAAL,GAAiBN,IAAI,CAACmB,IAAL,IAAanB,IAAI,CAACmB,IAAL,CAAU4G,MAAV,CAAiB,CAAC,CAAC,CAAC/H,IAAI,CAACmB,IAAL,CAAU6G,WAAV,CAAsB,GAAtB,CAAF,KAAiC,CAAlC,IAAuC,CAAxD,EAA2DxH,WAA3D,EAA9B,CAlBY,CAmBZ;;AACA,UAAIR,IAAI,CAACM,SAAL,IAAkB,CAACN,IAAI,CAACoC,IAA5B,EAAkC;AAC9BpC,YAAI,CAACoC,IAAL,GAAYhE,QAAQ,CAAC4C,WAAT,CAAqBhB,IAAI,CAACM,SAA1B,KAAwC,0BAApD;AACH;;AACDN,UAAI,CAACiI,QAAL,GAAgB,CAAhB;AACAjI,UAAI,CAAC6E,IAAL,GAAYX,QAAQ,CAAClE,IAAI,CAAC6E,IAAN,CAAR,IAAuB,CAAnC;AACA7E,UAAI,CAACkI,MAAL,GAAclI,IAAI,CAACkI,MAAL,IAAe,KAAKA,MAAlC,CAzBY,CA2BZ;;AACA,UAAI3C,MAAM,GAAGpG,KAAK,CAACgJ,SAAN,EAAb;;AACA,UAAI5C,MAAM,YAAYzG,MAAtB,EAA8B;AAC1ByG,cAAM,CAACZ,KAAP,CAAa3E,IAAb;AACH,OA/BW,CAiCZ;;;AACA,UAAIqB,MAAM,GAAGlC,KAAK,CAACiJ,MAAN,CAAapI,IAAb,CAAb;AACA,UAAIqG,KAAK,GAAGlH,KAAK,CAACkJ,WAAN,CAAkBhH,MAAlB,CAAZ;AACA,UAAIiH,SAAS,GAAGnJ,KAAK,CAACoJ,MAAN,WAAgBlH,MAAhB,oBAAgCgF,KAAhC,EAAhB;AAEA,aAAO;AACHhF,cAAM,EAAEA,MADL;AAEHgF,aAAK,EAAEA,KAFJ;AAGH5E,WAAG,EAAE6G;AAHF,OAAP;AAKH,KA/HU;;AAiIX;;;;;;;AAOAE,aAAS,CAACnH,MAAD,EAAS+E,SAAT,EAAoBC,KAApB,EAA2B;AAChC1B,WAAK,CAACtD,MAAD,EAASiF,MAAT,CAAL;AACA3B,WAAK,CAACyB,SAAD,EAAYE,MAAZ,CAAL;AACA3B,WAAK,CAAC0B,KAAD,EAAQC,MAAR,CAAL,CAHgC,CAKhC;;AACA,UAAInH,KAAK,GAAGf,QAAQ,CAAC8C,QAAT,CAAkBkF,SAAlB,CAAZ;;AACA,UAAI,CAACjH,KAAL,EAAY;AACR,cAAM,IAAIX,MAAM,CAACoG,KAAX,CAAiB,eAAjB,EAAkC,iBAAlC,CAAN;AACH,OAT+B,CAUhC;;;AACA,UAAIzF,KAAK,CAACO,aAAN,GAAsBC,IAAtB,CAA2B;AAACG,WAAG,EAAEuB;AAAN,OAA3B,EAA0CoH,KAA1C,OAAsD,CAA1D,EAA6D;AACzD,eAAO,CAAP;AACH,OAb+B,CAchC;;;AACA,UAAI,CAACtJ,KAAK,CAACoH,UAAN,CAAiBF,KAAjB,EAAwBhF,MAAxB,CAAL,EAAsC;AAClC,cAAM,IAAI7C,MAAM,CAACoG,KAAX,CAAiB,eAAjB,EAAkC,oBAAlC,CAAN;AACH;;AACD,aAAOzF,KAAK,CAACO,aAAN,GAAsB4H,MAAtB,CAA6B;AAACxH,WAAG,EAAEuB;AAAN,OAA7B,CAAP;AACH,KA3JU;;AA6JX;;;;;;;AAOAqH,gBAAY,CAACjH,GAAD,EAAMzB,IAAN,EAAYoG,SAAZ,EAAuB;AAC/BzB,WAAK,CAAClD,GAAD,EAAM6E,MAAN,CAAL;AACA3B,WAAK,CAAC3E,IAAD,EAAO4H,MAAP,CAAL;AACAjD,WAAK,CAACyB,SAAD,EAAYE,MAAZ,CAAL,CAH+B,CAK/B;;AACA,UAAI,OAAO7E,GAAP,KAAe,QAAf,IAA2BA,GAAG,CAACwB,MAAJ,IAAc,CAA7C,EAAgD;AAC5C,cAAM,IAAIzE,MAAM,CAACoG,KAAX,CAAiB,aAAjB,EAAgC,sBAAhC,CAAN;AACH,OAR8B,CAS/B;;;AACA,UAAI,OAAO5E,IAAP,KAAgB,QAAhB,IAA4BA,IAAI,KAAK,IAAzC,EAA+C;AAC3C,cAAM,IAAIxB,MAAM,CAACoG,KAAX,CAAiB,cAAjB,EAAiC,uBAAjC,CAAN;AACH,OAZ8B,CAa/B;;;AACA,YAAMzF,KAAK,GAAGf,QAAQ,CAAC8C,QAAT,CAAkBkF,SAAlB,CAAd;;AACA,UAAI,CAACjH,KAAL,EAAY;AACR,cAAM,IAAIX,MAAM,CAACoG,KAAX,CAAiB,eAAjB,EAAkC,0BAAlC,CAAN;AACH,OAjB8B,CAmB/B;;;AACA,UAAI,CAAC5E,IAAI,CAACmB,IAAV,EAAgB;AACZnB,YAAI,CAACmB,IAAL,GAAYM,GAAG,CAACiE,OAAJ,CAAY,OAAZ,EAAqB,EAArB,EAAyBiD,KAAzB,CAA+B,GAA/B,EAAoCC,GAApC,EAAZ;AACH;;AACD,UAAI5I,IAAI,CAACmB,IAAL,IAAa,CAACnB,IAAI,CAACM,SAAvB,EAAkC;AAC9BN,YAAI,CAACM,SAAL,GAAiBN,IAAI,CAACmB,IAAL,IAAanB,IAAI,CAACmB,IAAL,CAAU4G,MAAV,CAAiB,CAAC,CAAC,CAAC/H,IAAI,CAACmB,IAAL,CAAU6G,WAAV,CAAsB,GAAtB,CAAF,KAAiC,CAAlC,IAAuC,CAAxD,EAA2DxH,WAA3D,EAA9B;AACH;;AACD,UAAIR,IAAI,CAACM,SAAL,IAAkB,CAACN,IAAI,CAACoC,IAA5B,EAAkC;AAC9B;AACApC,YAAI,CAACoC,IAAL,GAAYhE,QAAQ,CAAC4C,WAAT,CAAqBhB,IAAI,CAACM,SAA1B,KAAwC,0BAApD;AACH,OA7B8B,CA8B/B;;;AACA,UAAInB,KAAK,CAACgJ,SAAN,cAA6BrJ,MAAjC,EAAyC;AACrCK,aAAK,CAACgJ,SAAN,GAAkBxD,KAAlB,CAAwB3E,IAAxB;AACH;;AAED,UAAIA,IAAI,CAAC6I,WAAT,EAAsB;AAClB/G,eAAO,CAACgH,IAAR;AACH,OArC8B,CAuC/B;;;AACA9I,UAAI,CAAC6I,WAAL,GAAmBpH,GAAnB,CAxC+B,CA0C/B;;AACAzB,UAAI,CAAC6H,QAAL,GAAgB,KAAhB;AACA7H,UAAI,CAAC8H,SAAL,GAAiB,IAAjB;AACA9H,UAAI,CAACiI,QAAL,GAAgB,CAAhB;AACAjI,UAAI,CAACF,GAAL,GAAWX,KAAK,CAACiJ,MAAN,CAAapI,IAAb,CAAX;AAEA,UAAIwG,GAAG,GAAG,IAAIP,MAAJ,EAAV;AACA,UAAI8C,KAAJ,CAjD+B,CAmD/B;;AACA,UAAI,aAAaC,IAAb,CAAkBvH,GAAlB,CAAJ,EAA4B;AACxBsH,aAAK,GAAG/C,IAAR;AACH,OAFD,MAEO,IAAI,cAAcgD,IAAd,CAAmBvH,GAAnB,CAAJ,EAA6B;AAChCsH,aAAK,GAAGnF,KAAR;AACH;;AAED,WAAKqF,OAAL,GA1D+B,CA4D/B;;AACAF,WAAK,CAACG,GAAN,CAAUzH,GAAV,EAAejD,MAAM,CAAC6I,eAAP,CAAuB,UAAU8B,GAAV,EAAe;AACjD;AACAhK,aAAK,CAACqI,KAAN,CAAY2B,GAAZ,EAAiBnJ,IAAI,CAACF,GAAtB,EAA2B,UAAU+F,GAAV,EAAe7F,IAAf,EAAqB;AAC5C,cAAI6F,GAAJ,EAAS;AACLW,eAAG,CAACe,KAAJ,CAAU1B,GAAV;AACH,WAFD,MAEO;AACHW,eAAG,CAACiB,MAAJ,CAAWzH,IAAX;AACH;AACJ,SAND;AAOH,OATc,CAAf,EASIoH,EATJ,CASO,OATP,EASgB,UAAUvB,GAAV,EAAe;AAC3BW,WAAG,CAACe,KAAJ,CAAU1B,GAAV;AACH,OAXD;AAYA,aAAOW,GAAG,CAACkB,IAAJ,EAAP;AACH,KA9OU;;AAgPX;;;;;;;AAOA0B,WAAO,CAAC/H,MAAD,EAAS+E,SAAT,EAAoBC,KAApB,EAA2B;AAC9B1B,WAAK,CAACtD,MAAD,EAASiF,MAAT,CAAL;AACA3B,WAAK,CAACyB,SAAD,EAAYE,MAAZ,CAAL;AACA3B,WAAK,CAAC0B,KAAD,EAAQC,MAAR,CAAL,CAH8B,CAK9B;;AACA,YAAMnH,KAAK,GAAGf,QAAQ,CAAC8C,QAAT,CAAkBkF,SAAlB,CAAd;;AACA,UAAI,CAACjH,KAAL,EAAY;AACR,cAAM,IAAIX,MAAM,CAACoG,KAAX,CAAiB,eAAjB,EAAkC,iBAAlC,CAAN;AACH,OAT6B,CAU9B;;;AACA,YAAM5E,IAAI,GAAGb,KAAK,CAACO,aAAN,GAAsBC,IAAtB,CAA2B;AAACG,WAAG,EAAEuB;AAAN,OAA3B,EAA0C;AAACxB,cAAM,EAAE;AAACqI,gBAAM,EAAE;AAAT;AAAT,OAA1C,CAAb;;AACA,UAAI,CAAClI,IAAL,EAAW;AACP,cAAM,IAAIxB,MAAM,CAACoG,KAAX,CAAiB,cAAjB,EAAiC,gBAAjC,CAAN;AACH,OAd6B,CAe9B;;;AACA,UAAI,CAACzF,KAAK,CAACoH,UAAN,CAAiBF,KAAjB,EAAwBhF,MAAxB,CAAL,EAAsC;AAClC,cAAM,IAAI7C,MAAM,CAACoG,KAAX,CAAiB,eAAjB,EAAkC,oBAAlC,CAAN;AACH;;AAED,aAAOzF,KAAK,CAACO,aAAN,GAAsBQ,MAAtB,CAA6B;AAACJ,WAAG,EAAEuB;AAAN,OAA7B,EAA4C;AAC/ClB,YAAI,EAAE;AAAC2H,mBAAS,EAAE;AAAZ;AADyC,OAA5C,CAAP;AAGH;;AA9QU,GAAf;AAgRH,C;;;;;;;;;;;ACvTDvE,MAAM,CAACpF,MAAP,CAAc;AAACO,MAAI,EAAC,MAAIA;AAAV,CAAd;AA4BO,MAAMA,IAAI,GAAG;AAEhB;AACA,QAAM,6BAHU;AAIhB,SAAO,0BAJS;AAKhB,QAAM,wBALU;AAMhB,SAAO,0BANS;AAOhB,QAAM,oBAPU;AAQhB,SAAO,qBARS;AAShB,SAAO,wBATS;AAUhB,SAAO,0BAVS;AAWhB,QAAM,oBAXU;AAYhB,UAAQ,oBAZQ;AAahB,QAAM,wBAbU;AAchB,UAAQ,kBAdQ;AAehB,SAAO,iBAfS;AAgBhB,SAAO,iBAhBS;AAiBhB,QAAM,wBAjBU;AAkBhB,SAAO,0BAlBS;AAmBhB,SAAO,8BAnBS;AAoBhB,SAAO,8BApBS;AAqBhB,SAAO,+BArBS;AAsBhB,SAAO,mBAtBS;AAuBhB,WAAS,uBAvBO;AAwBhB,SAAO,iBAxBS;AAyBhB,SAAO,iBAzBS;AA2BhB;AACA,SAAO,YA5BS;AA6BhB,UAAQ,YA7BQ;AA8BhB,UAAQ,YA9BQ;AA+BhB,QAAM,aA/BU;AAgChB,UAAQ,YAhCQ;AAiChB,UAAQ,YAjCQ;AAkChB,SAAO,YAlCS;AAmChB,SAAO,YAnCS;AAoChB,SAAO,YApCS;AAqChB,SAAO,WArCS;AAsChB,SAAO,WAtCS;AAuChB,UAAQ,WAvCQ;AAwChB,QAAM,wBAxCU;AAyChB,SAAO,WAzCS;AA0ChB,SAAO,aA1CS;AA2ChB,UAAQ,YA3CQ;AA4ChB,SAAO,gBA5CS;AA8ChB;AACA,SAAO,iBA/CS;AAgDhB,SAAO,qBAhDS;AAiDhB,SAAO,WAjDS;AAkDhB,SAAO,0BAlDS;AAmDhB,UAAQ,YAnDQ;AAoDhB,SAAO,WApDS;AAqDhB,UAAQ,qBArDQ;AAsDhB,SAAO,WAtDS;AAuDhB,SAAO,WAvDS;AAwDhB,SAAO,eAxDS;AAyDhB,SAAO,YAzDS;AA0DhB,UAAQ,YA1DQ;AA4DhB;AACA,SAAO,UA7DS;AA8DhB,SAAO,UA9DS;AA+DhB,UAAQ,WA/DQ;AAgEhB,SAAO,YAhES;AAkEhB;AACA,SAAO,WAnES;AAoEhB,QAAM,YApEU;AAqEhB,SAAO,aArES;AAsEhB,SAAO,iBAtES;AAuEhB,SAAO,WAvES;AAwEhB,UAAQ,YAxEQ;AAyEhB,SAAO,WAzES;AA0EhB,SAAO,WA1ES;AA2EhB,SAAO,WA3ES;AA4EhB,UAAQ,YA5EQ;AA6EhB,SAAO,gBA7ES;AA+EhB;AACA,SAAO,oBAhFS;AAiFhB,UAAQ,yEAjFQ;AAkFhB,SAAO,6CAlFS;AAmFhB,SAAO,0CAnFS;AAoFhB,SAAO,4CApFS;AAqFhB,SAAO,6CArFS;AAsFhB,SAAO,0CAtFS;AAuFhB,SAAO,gDAvFS;AAwFhB,SAAO,iDAxFS;AAyFhB,SAAO,gDAzFS;AA0FhB,SAAO,yCA1FS;AA2FhB,SAAO,sDA3FS;AA4FhB,SAAO,0DA5FS;AA6FhB,SAAO,yDA7FS;AA8FhB,SAAO,kDA9FS;AA+FhB,SAAO,+BA/FS;AAgGhB,UAAQ,2EAhGQ;AAiGhB,SAAO,0BAjGS;AAkGhB,UAAQ;AAlGQ,CAAb,C;;;;;;;;;;;AC5BP,IAAIL,CAAJ;;AAAMkF,MAAM,CAACjF,IAAP,CAAY,mBAAZ,EAAgC;AAACD,GAAC,CAACE,CAAD,EAAG;AAACF,KAAC,GAACE,CAAF;AAAI;;AAAV,CAAhC,EAA4C,CAA5C;AAA+C,IAAIC,MAAJ;AAAW+E,MAAM,CAACjF,IAAP,CAAY,eAAZ,EAA4B;AAACE,QAAM,CAACD,CAAD,EAAG;AAACC,UAAM,GAACD,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAI8K,MAAJ;AAAW9F,MAAM,CAACjF,IAAP,CAAY,eAAZ,EAA4B;AAAC+K,QAAM,CAAC9K,CAAD,EAAG;AAAC8K,UAAM,GAAC9K,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIH,QAAJ;AAAamF,MAAM,CAACjF,IAAP,CAAY,OAAZ,EAAoB;AAACF,UAAQ,CAACG,CAAD,EAAG;AAACH,YAAQ,GAACG,CAAT;AAAW;;AAAxB,CAApB,EAA8C,CAA9C;;AA8BlM,IAAIC,MAAM,CAAC4E,QAAX,EAAqB;AAEjB,QAAMkG,MAAM,GAAGvD,GAAG,CAAC5C,OAAJ,CAAY,QAAZ,CAAf;;AACA,QAAM2C,EAAE,GAAGC,GAAG,CAAC5C,OAAJ,CAAY,IAAZ,CAAX;;AACA,QAAM6C,IAAI,GAAGD,GAAG,CAAC5C,OAAJ,CAAY,MAAZ,CAAb;;AACA,QAAMS,KAAK,GAAGmC,GAAG,CAAC5C,OAAJ,CAAY,OAAZ,CAAd;;AACA,QAAMoG,MAAM,GAAGxD,GAAG,CAAC5C,OAAJ,CAAY,QAAZ,CAAf;;AACA,QAAMqG,MAAM,GAAGzD,GAAG,CAAC5C,OAAJ,CAAY,QAAZ,CAAf;;AACA,QAAMsG,GAAG,GAAG1D,GAAG,CAAC5C,OAAJ,CAAY,KAAZ,CAAZ;;AACA,QAAMuG,IAAI,GAAG3D,GAAG,CAAC5C,OAAJ,CAAY,MAAZ,CAAb;;AAGA3E,QAAM,CAACmL,OAAP,CAAe,MAAM;AACjB,QAAIjJ,IAAI,GAAGtC,QAAQ,CAACkD,MAAT,CAAgBC,MAA3B;AACA,QAAIqI,IAAI,GAAGxL,QAAQ,CAACkD,MAAT,CAAgB2C,iBAA3B;AAEA6B,MAAE,CAAC+D,IAAH,CAAQnJ,IAAR,EAAemF,GAAD,IAAS;AACnB,UAAIA,GAAJ,EAAS;AACL;AACA0D,cAAM,CAAC7I,IAAD,EAAO;AAACkJ,cAAI,EAAEA;AAAP,SAAP,EAAsB/D,GAAD,IAAS;AAChC,cAAIA,GAAJ,EAAS;AACL/D,mBAAO,CAACC,KAAR,kDAAuDrB,IAAvD,iBAAiEmF,GAAG,CAACe,OAArE;AACH,WAFD,MAEO;AACH9E,mBAAO,CAACgI,GAAR,4CAA+CpJ,IAA/C;AACH;AACJ,SANK,CAAN;AAOH,OATD,MASO;AACH;AACAoF,UAAE,CAACiE,KAAH,CAASrJ,IAAT,EAAekJ,IAAf,EAAsB/D,GAAD,IAAS;AAC1BA,aAAG,IAAI/D,OAAO,CAACC,KAAR,sDAA4D6H,IAA5D,eAAqE/D,GAAG,CAACe,OAAzE,OAAP;AACH,SAFD;AAGH;AACJ,KAhBD;AAiBH,GArBD,EAZiB,CAmCjB;AACA;;AACA,MAAIoD,CAAC,GAAGV,MAAM,CAAClB,MAAP,EAAR;AAEA4B,GAAC,CAAC5C,EAAF,CAAK,OAAL,EAAevB,GAAD,IAAS;AACnB/D,WAAO,CAACC,KAAR,CAAc,UAAU8D,GAAG,CAACe,OAA5B;AACH,GAFD,EAvCiB,CA2CjB;;AACAyC,QAAM,CAACY,eAAP,CAAuBC,GAAvB,CAA2B,CAACC,GAAD,EAAMhB,GAAN,EAAWiB,IAAX,KAAoB;AAC3C;AACA,QAAID,GAAG,CAAC1I,GAAJ,CAAQgE,OAAR,CAAgBrH,QAAQ,CAACkD,MAAT,CAAgB0C,UAAhC,MAAgD,CAAC,CAArD,EAAwD;AACpDoG,UAAI;AACJ;AACH,KAL0C,CAO3C;;;AACA,QAAIC,SAAS,GAAGZ,GAAG,CAACa,KAAJ,CAAUH,GAAG,CAAC1I,GAAd,CAAhB;AACA,QAAIf,IAAI,GAAG2J,SAAS,CAACE,QAAV,CAAmBxC,MAAnB,CAA0B3J,QAAQ,CAACkD,MAAT,CAAgB0C,UAAhB,CAA2Bf,MAA3B,GAAoC,CAA9D,CAAX;;AAEA,QAAIuH,SAAS,GAAG,MAAM;AAClB;AACArB,SAAG,CAACsB,SAAJ,CAAc,8BAAd,EAA8C,MAA9C;AACAtB,SAAG,CAACsB,SAAJ,CAAc,6BAAd,EAA6C,GAA7C;AACAtB,SAAG,CAACsB,SAAJ,CAAc,8BAAd,EAA8C,cAA9C;AACH,KALD;;AAOA,QAAIN,GAAG,CAACzF,MAAJ,KAAe,SAAnB,EAA8B;AAC1B,UAAIgG,MAAM,GAAG,IAAIC,MAAJ,CAAW,4BAAX,CAAb;AACA,UAAIC,KAAK,GAAGF,MAAM,CAACG,IAAP,CAAYnK,IAAZ,CAAZ,CAF0B,CAI1B;;AACA,UAAIkK,KAAK,KAAK,IAAd,EAAoB;AAChBzB,WAAG,CAAC2B,SAAJ,CAAc,GAAd;AACA3B,WAAG,CAAC4B,GAAJ;AACA;AACH,OATyB,CAW1B;;;AACA,UAAI5L,KAAK,GAAGf,QAAQ,CAAC8C,QAAT,CAAkB0J,KAAK,CAAC,CAAD,CAAvB,CAAZ;;AACA,UAAI,CAACzL,KAAL,EAAY;AACRgK,WAAG,CAAC2B,SAAJ,CAAc,GAAd;AACA3B,WAAG,CAAC4B,GAAJ;AACA;AACH,OAjByB,CAmB1B;;;AACAP,eAAS;AAETJ,UAAI;AACP,KAvBD,MAwBK,IAAID,GAAG,CAACzF,MAAJ,KAAe,MAAnB,EAA2B;AAC5B;AACA,UAAIgG,MAAM,GAAG,IAAIC,MAAJ,CAAW,4BAAX,CAAb;AACA,UAAIC,KAAK,GAAGF,MAAM,CAACG,IAAP,CAAYnK,IAAZ,CAAZ,CAH4B,CAK5B;;AACA,UAAIkK,KAAK,KAAK,IAAd,EAAoB;AAChBzB,WAAG,CAAC2B,SAAJ,CAAc,GAAd;AACA3B,WAAG,CAAC4B,GAAJ;AACA;AACH,OAV2B,CAY5B;;;AACA,UAAI5L,KAAK,GAAGf,QAAQ,CAAC8C,QAAT,CAAkB0J,KAAK,CAAC,CAAD,CAAvB,CAAZ;;AACA,UAAI,CAACzL,KAAL,EAAY;AACRgK,WAAG,CAAC2B,SAAJ,CAAc,GAAd;AACA3B,WAAG,CAAC4B,GAAJ;AACA;AACH,OAlB2B,CAoB5B;;;AACAP,eAAS,GArBmB,CAuB5B;;AACA,UAAInJ,MAAM,GAAGuJ,KAAK,CAAC,CAAD,CAAlB;;AACA,UAAIzL,KAAK,CAACO,aAAN,GAAsBC,IAAtB,CAA2B;AAACG,WAAG,EAAEuB;AAAN,OAA3B,EAA0CoH,KAA1C,OAAsD,CAA1D,EAA6D;AACzDU,WAAG,CAAC2B,SAAJ,CAAc,GAAd;AACA3B,WAAG,CAAC4B,GAAJ;AACA;AACH,OA7B2B,CA+B5B;;;AACA,UAAI,CAAC5L,KAAK,CAACoH,UAAN,CAAiB4D,GAAG,CAACa,KAAJ,CAAU3E,KAA3B,EAAkChF,MAAlC,CAAL,EAAgD;AAC5C8H,WAAG,CAAC2B,SAAJ,CAAc,GAAd;AACA3B,WAAG,CAAC4B,GAAJ;AACA;AACH;;AAED,UAAItE,OAAO,GAAGrI,QAAQ,CAACgD,eAAT,CAAyBC,MAAzB,CAAd;AACA,UAAI4J,EAAE,GAAGnF,EAAE,CAACoF,iBAAH,CAAqBzE,OAArB,EAA8B;AAACQ,aAAK,EAAE;AAAR,OAA9B,CAAT;AACA,UAAIpH,MAAM,GAAG;AAACiI,iBAAS,EAAE;AAAZ,OAAb;AACA,UAAIG,QAAQ,GAAGkD,UAAU,CAAChB,GAAG,CAACa,KAAJ,CAAU/C,QAAX,CAAzB;;AACA,UAAI,CAACmD,KAAK,CAACnD,QAAD,CAAN,IAAoBA,QAAQ,GAAG,CAAnC,EAAsC;AAClCpI,cAAM,CAACoI,QAAP,GAAkBoD,IAAI,CAACC,GAAL,CAASrD,QAAT,EAAmB,CAAnB,CAAlB;AACH;;AAEDkC,SAAG,CAAC/C,EAAJ,CAAO,MAAP,EAAgBmE,KAAD,IAAW;AACtBN,UAAE,CAACzD,KAAH,CAAS+D,KAAT;AACH,OAFD;AAGApB,SAAG,CAAC/C,EAAJ,CAAO,OAAP,EAAiBvB,GAAD,IAAS;AACrBsD,WAAG,CAAC2B,SAAJ,CAAc,GAAd;AACA3B,WAAG,CAAC4B,GAAJ;AACH,OAHD;AAIAZ,SAAG,CAAC/C,EAAJ,CAAO,KAAP,EAAc5I,MAAM,CAAC6I,eAAP,CAAuB,MAAM;AACvC;AACAlI,aAAK,CAACO,aAAN,GAAsBO,MAAtB,CAA6BC,MAA7B,CAAoC;AAACJ,aAAG,EAAEuB;AAAN,SAApC,EAAmD;AAAClB,cAAI,EAAEN;AAAP,SAAnD;AACAoL,UAAE,CAACF,GAAH;AACH,OAJa,CAAd;AAKAE,QAAE,CAAC7D,EAAH,CAAM,OAAN,EAAgBvB,GAAD,IAAS;AACpB/D,eAAO,CAACC,KAAR,6CAAkDV,MAAlD,iBAA8DwE,GAAG,CAACe,OAAlE;AACAd,UAAE,CAACa,MAAH,CAAUF,OAAV,EAAoBZ,GAAD,IAAS;AACxBA,aAAG,IAAI/D,OAAO,CAACC,KAAR,0CAA+C0E,OAA/C,iBAA4DZ,GAAG,CAACe,OAAhE,OAAP;AACH,SAFD;AAGAuC,WAAG,CAAC2B,SAAJ,CAAc,GAAd;AACA3B,WAAG,CAAC4B,GAAJ;AACH,OAPD;AAQAE,QAAE,CAAC7D,EAAH,CAAM,QAAN,EAAgB,MAAM;AAClB+B,WAAG,CAAC2B,SAAJ,CAAc,GAAd,EAAmB;AAAC,0BAAgB;AAAjB,SAAnB;AACA3B,WAAG,CAAC4B,GAAJ;AACH,OAHD;AAIH,KAtEI,MAuEA,IAAIZ,GAAG,CAACzF,MAAJ,KAAe,KAAnB,EAA0B;AAC3B;AACA,UAAIgG,MAAM,GAAG,IAAIC,MAAJ,CAAW,6CAAX,CAAb;AACA,UAAIC,KAAK,GAAGF,MAAM,CAACG,IAAP,CAAYnK,IAAZ,CAAZ,CAH2B,CAK3B;AACA;;AACA,UAAIkK,KAAK,KAAK,IAAd,EAAoB;AAChBR,YAAI;AACJ;AACH,OAV0B,CAY3B;;;AACA,YAAMhE,SAAS,GAAGwE,KAAK,CAAC,CAAD,CAAvB;AACA,YAAMzL,KAAK,GAAGf,QAAQ,CAAC8C,QAAT,CAAkBkF,SAAlB,CAAd;;AAEA,UAAI,CAACjH,KAAL,EAAY;AACRgK,WAAG,CAAC2B,SAAJ,CAAc,GAAd;AACA3B,WAAG,CAAC4B,GAAJ;AACA;AACH;;AAED,UAAI5L,KAAK,CAACqM,MAAN,KAAiB,IAAjB,IAAyBrM,KAAK,CAACqM,MAAN,KAAiBC,SAA1C,IAAuD,OAAOtM,KAAK,CAACqM,MAAb,KAAwB,UAAnF,EAA+F;AAC3F1J,eAAO,CAACC,KAAR,0DAA+DqE,SAA/D;AACA+C,WAAG,CAAC2B,SAAJ,CAAc,GAAd;AACA3B,WAAG,CAAC4B,GAAJ;AACA;AACH,OA3B0B,CA6B3B;;;AACA,UAAIW,KAAK,GAAGd,KAAK,CAAC,CAAD,CAAL,CAASnF,OAAT,CAAiB,GAAjB,CAAZ;AACA,UAAIpE,MAAM,GAAGqK,KAAK,KAAK,CAAC,CAAX,GAAed,KAAK,CAAC,CAAD,CAAL,CAAS7C,MAAT,CAAgB,CAAhB,EAAmB2D,KAAnB,CAAf,GAA2Cd,KAAK,CAAC,CAAD,CAA7D,CA/B2B,CAiC3B;;AACA,YAAM5K,IAAI,GAAGb,KAAK,CAACO,aAAN,GAAsBmH,OAAtB,CAA8B;AAAC/G,WAAG,EAAEuB;AAAN,OAA9B,CAAb;;AACA,UAAI,CAACrB,IAAL,EAAW;AACPmJ,WAAG,CAAC2B,SAAJ,CAAc,GAAd;AACA3B,WAAG,CAAC4B,GAAJ;AACA;AACH,OAvC0B,CAyC3B;;;AACA,UAAI3M,QAAQ,CAACkD,MAAT,CAAgBuC,iBAApB,EAAuC;AACnCrF,cAAM,CAACmN,WAAP,CAAmBvN,QAAQ,CAACkD,MAAT,CAAgBuC,iBAAnC;AACH;;AAEDmG,OAAC,CAAC4B,GAAF,CAAM,MAAM;AACR;AACA,YAAIzM,KAAK,CAACqM,MAAN,CAAa7J,IAAb,CAAkBxC,KAAlB,EAAyBkC,MAAzB,EAAiCrB,IAAjC,EAAuCmK,GAAvC,EAA4ChB,GAA5C,MAAqD,KAAzD,EAAgE;AAC5D,cAAI1F,OAAO,GAAG,EAAd;AACA,cAAIoI,MAAM,GAAG,GAAb,CAF4D,CAI5D;;AACA,cAAIC,OAAO,GAAG;AACV,4BAAgB9L,IAAI,CAACoC,IADX;AAEV,8BAAkBpC,IAAI,CAAC6E;AAFb,WAAd,CAL4D,CAU5D;;AACA,cAAI,OAAO7E,IAAI,CAACJ,IAAZ,KAAqB,QAAzB,EAAmC;AAC/BkM,mBAAO,CAAC,MAAD,CAAP,GAAkB9L,IAAI,CAACJ,IAAvB;AACH,WAb2D,CAe5D;;;AACA,cAAII,IAAI,CAAC+L,UAAL,YAA2BC,IAA/B,EAAqC;AACjCF,mBAAO,CAAC,eAAD,CAAP,GAA2B9L,IAAI,CAAC+L,UAAL,CAAgBE,WAAhB,EAA3B;AACH,WAFD,MAGK,IAAIjM,IAAI,CAACkM,UAAL,YAA2BF,IAA/B,EAAqC;AACtCF,mBAAO,CAAC,eAAD,CAAP,GAA2B9L,IAAI,CAACkM,UAAL,CAAgBD,WAAhB,EAA3B;AACH,WArB2D,CAuB5D;;;AACA,cAAI,OAAO9B,GAAG,CAAC2B,OAAX,KAAuB,QAA3B,EAAqC;AAEjC;AACA,gBAAI3B,GAAG,CAAC2B,OAAJ,CAAY,eAAZ,CAAJ,EAAkC;AAC9B,kBAAI9L,IAAI,CAACJ,IAAL,KAAcuK,GAAG,CAAC2B,OAAJ,CAAY,eAAZ,CAAlB,EAAgD;AAC5C3C,mBAAG,CAAC2B,SAAJ,CAAc,GAAd,EAD4C,CACxB;;AACpB3B,mBAAG,CAAC4B,GAAJ;AACA;AACH;AACJ,aATgC,CAWjC;;;AACA,gBAAIZ,GAAG,CAAC2B,OAAJ,CAAY,mBAAZ,CAAJ,EAAsC;AAClC,oBAAMK,aAAa,GAAG,IAAIH,IAAJ,CAAS7B,GAAG,CAAC2B,OAAJ,CAAY,mBAAZ,CAAT,CAAtB;;AAEA,kBAAK9L,IAAI,CAAC+L,UAAL,YAA2BC,IAA3B,IAAmChM,IAAI,CAAC+L,UAAL,GAAkBI,aAAtD,IACGnM,IAAI,CAACkM,UAAL,YAA2BF,IAA3B,IAAmChM,IAAI,CAACkM,UAAL,GAAkBC,aAD5D,EAC2E;AACvEhD,mBAAG,CAAC2B,SAAJ,CAAc,GAAd,EADuE,CACnD;;AACpB3B,mBAAG,CAAC4B,GAAJ;AACA;AACH;AACJ,aArBgC,CAuBjC;;;AACA,gBAAI,OAAOZ,GAAG,CAAC2B,OAAJ,CAAYM,KAAnB,KAA6B,QAAjC,EAA2C;AACvC,oBAAMA,KAAK,GAAGjC,GAAG,CAAC2B,OAAJ,CAAYM,KAA1B,CADuC,CAGvC;;AACA,kBAAI,CAACA,KAAL,EAAY;AACRjD,mBAAG,CAAC2B,SAAJ,CAAc,GAAd;AACA3B,mBAAG,CAAC4B,GAAJ;AACA;AACH;;AAED,oBAAMsB,KAAK,GAAGrM,IAAI,CAAC6E,IAAnB;AACA,oBAAMyH,IAAI,GAAGF,KAAK,CAACrE,MAAN,CAAa,CAAb,EAAgBqE,KAAK,CAAC3G,OAAN,CAAc,GAAd,CAAhB,CAAb;;AAEA,kBAAI6G,IAAI,KAAK,OAAb,EAAsB;AAClBnD,mBAAG,CAAC2B,SAAJ,CAAc,GAAd;AACA3B,mBAAG,CAAC4B,GAAJ;AACA;AACH;;AAED,oBAAMwB,MAAM,GAAGH,KAAK,CAACrE,MAAN,CAAauE,IAAI,CAACrJ,MAAlB,EAA0ByC,OAA1B,CAAkC,WAAlC,EAA+C,EAA/C,EAAmDiD,KAAnD,CAAyD,GAAzD,CAAf;;AAEA,kBAAI4D,MAAM,CAACtJ,MAAP,GAAgB,CAApB,EAAuB,CACnB;AACH,eAFD,MAEO;AACH,sBAAMuJ,CAAC,GAAGD,MAAM,CAAC,CAAD,CAAN,CAAU5D,KAAV,CAAgB,GAAhB,CAAV;AACA,sBAAM8D,KAAK,GAAGvI,QAAQ,CAACsI,CAAC,CAAC,CAAD,CAAF,EAAO,EAAP,CAAtB;AACA,sBAAMzB,GAAG,GAAGyB,CAAC,CAAC,CAAD,CAAD,GAAOtI,QAAQ,CAACsI,CAAC,CAAC,CAAD,CAAF,EAAO,EAAP,CAAf,GAA4BH,KAAK,GAAG,CAAhD,CAHG,CAKH;;AACA,oBAAII,KAAK,GAAG,CAAR,IAAa1B,GAAG,IAAIsB,KAApB,IAA6BI,KAAK,GAAG1B,GAAzC,EAA8C;AAC1C5B,qBAAG,CAAC2B,SAAJ,CAAc,GAAd;AACA3B,qBAAG,CAAC4B,GAAJ;AACA;AACH,iBAVE,CAYH;;;AACAe,uBAAO,CAAC,eAAD,CAAP,mBAAoCW,KAApC,cAA6C1B,GAA7C,cAAoDsB,KAApD;AACAP,uBAAO,CAAC,gBAAD,CAAP,GAA4Bf,GAAG,GAAG0B,KAAN,GAAc,CAA1C;AACAhJ,uBAAO,CAACgJ,KAAR,GAAgBA,KAAhB;AACAhJ,uBAAO,CAACsH,GAAR,GAAcA,GAAd;AACH;;AACDc,oBAAM,GAAG,GAAT,CAzCuC,CAyCzB;AACjB;AACJ,WAnED,MAmEO;AACHC,mBAAO,CAAC,eAAD,CAAP,GAA2B,OAA3B;AACH,WA7F2D,CA+F5D;;;AACA,gBAAM/E,EAAE,GAAG5H,KAAK,CAACuN,aAAN,CAAoBrL,MAApB,EAA4BrB,IAA5B,EAAkCyD,OAAlC,CAAX;AACA,gBAAMwH,EAAE,GAAG,IAAIzB,MAAM,CAACmD,WAAX,EAAX;AAEA5F,YAAE,CAACK,EAAH,CAAM,OAAN,EAAe5I,MAAM,CAAC6I,eAAP,CAAwBxB,GAAD,IAAS;AAC3C1G,iBAAK,CAACyN,WAAN,CAAkBjL,IAAlB,CAAuBxC,KAAvB,EAA8B0G,GAA9B,EAAmCxE,MAAnC,EAA2CrB,IAA3C;AACAmJ,eAAG,CAAC4B,GAAJ;AACH,WAHc,CAAf;AAIAE,YAAE,CAAC7D,EAAH,CAAM,OAAN,EAAe5I,MAAM,CAAC6I,eAAP,CAAwBxB,GAAD,IAAS;AAC3C1G,iBAAK,CAACyN,WAAN,CAAkBjL,IAAlB,CAAuBxC,KAAvB,EAA8B0G,GAA9B,EAAmCxE,MAAnC,EAA2CrB,IAA3C;AACAmJ,eAAG,CAAC4B,GAAJ;AACH,WAHc,CAAf;AAIAE,YAAE,CAAC7D,EAAH,CAAM,OAAN,EAAe,MAAM;AACjB;AACA6D,cAAE,CAAC4B,IAAH,CAAQ,KAAR;AACH,WAHD,EA3G4D,CAgH5D;;AACA1N,eAAK,CAAC2N,aAAN,CAAoB/F,EAApB,EAAwBkE,EAAxB,EAA4B5J,MAA5B,EAAoCrB,IAApC,EAA0CmK,GAA1C,EAA+C2B,OAA/C,EAjH4D,CAmH5D;;AACA,cAAI,OAAO3B,GAAG,CAAC2B,OAAX,KAAuB,QAA3B,EAAqC;AACjC;AACA,gBAAI,OAAO3B,GAAG,CAAC2B,OAAJ,CAAY,iBAAZ,CAAP,KAA0C,QAA1C,IAAsD,CAAC,iBAAiB9C,IAAjB,CAAsBhJ,IAAI,CAACoC,IAA3B,CAA3D,EAA6F;AACzF,kBAAI2K,MAAM,GAAG5C,GAAG,CAAC2B,OAAJ,CAAY,iBAAZ,CAAb,CADyF,CAGzF;;AACA,kBAAIiB,MAAM,CAACnC,KAAP,CAAa,UAAb,CAAJ,EAA8B;AAC1BkB,uBAAO,CAAC,kBAAD,CAAP,GAA8B,MAA9B;AACA,uBAAOA,OAAO,CAAC,gBAAD,CAAd;AACA3C,mBAAG,CAAC2B,SAAJ,CAAce,MAAd,EAAsBC,OAAtB;AACAb,kBAAE,CAAC+B,IAAH,CAAQtD,IAAI,CAACuD,UAAL,EAAR,EAA2BD,IAA3B,CAAgC7D,GAAhC;AACA;AACH,eAND,CAOA;AAPA,mBAQK,IAAI4D,MAAM,CAACnC,KAAP,CAAa,aAAb,CAAJ,EAAiC;AAClCkB,yBAAO,CAAC,kBAAD,CAAP,GAA8B,SAA9B;AACA,yBAAOA,OAAO,CAAC,gBAAD,CAAd;AACA3C,qBAAG,CAAC2B,SAAJ,CAAce,MAAd,EAAsBC,OAAtB;AACAb,oBAAE,CAAC+B,IAAH,CAAQtD,IAAI,CAACwD,aAAL,EAAR,EAA8BF,IAA9B,CAAmC7D,GAAnC;AACA;AACH;AACJ;AACJ,WA1I2D,CA4I5D;;;AACA,cAAI,CAAC2C,OAAO,CAAC,kBAAD,CAAZ,EAAkC;AAC9B3C,eAAG,CAAC2B,SAAJ,CAAce,MAAd,EAAsBC,OAAtB;AACAb,cAAE,CAAC+B,IAAH,CAAQ7D,GAAR;AACH;AAEJ,SAlJD,MAkJO;AACHA,aAAG,CAAC4B,GAAJ;AACH;AACJ,OAvJD;AAwJH,KAtMI,MAsME;AACHX,UAAI;AACP;AACJ,GA1TD;AA2TH,C;;;;;;;;;;;ACrYD7G,MAAM,CAACpF,MAAP,CAAc;AAACa,kBAAgB,EAAC,MAAIA;AAAtB,CAAd;;AAAuD,IAAIX,CAAJ;;AAAMkF,MAAM,CAACjF,IAAP,CAAY,mBAAZ,EAAgC;AAACD,GAAC,CAACE,CAAD,EAAG;AAACF,KAAC,GAACE,CAAF;AAAI;;AAAV,CAAhC,EAA4C,CAA5C;;AA8BtD,MAAMS,gBAAN,CAAuB;AAE1BwE,aAAW,CAACC,OAAD,EAAU;AACjB;AACAA,WAAO,GAAGpF,CAAC,CAACqF,MAAF,CAAS;AACfyJ,YAAM,EAAE,IADO;AAEf7F,YAAM,EAAE,IAFO;AAGfpH,YAAM,EAAE;AAHO,KAAT,EAIPuD,OAJO,CAAV,CAFiB,CAQjB;;AACA,QAAIA,OAAO,CAAC0J,MAAR,IAAkB,OAAO1J,OAAO,CAAC0J,MAAf,KAA0B,UAAhD,EAA4D;AACxD,YAAM,IAAItM,SAAJ,CAAc,4CAAd,CAAN;AACH;;AACD,QAAI4C,OAAO,CAAC6D,MAAR,IAAkB,OAAO7D,OAAO,CAAC6D,MAAf,KAA0B,UAAhD,EAA4D;AACxD,YAAM,IAAIzG,SAAJ,CAAc,4CAAd,CAAN;AACH;;AACD,QAAI4C,OAAO,CAACvD,MAAR,IAAkB,OAAOuD,OAAO,CAACvD,MAAf,KAA0B,UAAhD,EAA4D;AACxD,YAAM,IAAIW,SAAJ,CAAc,4CAAd,CAAN;AACH,KAjBgB,CAmBjB;;;AACA,SAAKuM,OAAL,GAAe;AACXD,YAAM,EAAE1J,OAAO,CAAC0J,MADL;AAEX7F,YAAM,EAAE7D,OAAO,CAAC6D,MAFL;AAGXpH,YAAM,EAAEuD,OAAO,CAACvD;AAHL,KAAf;AAKH;AAED;;;;;;;;;;;AASAyE,OAAK,CAAC0I,MAAD,EAASnF,MAAT,EAAiBlI,IAAjB,EAAuBH,MAAvB,EAA+ByN,SAA/B,EAA0C;AAC3C,QAAI,OAAO,KAAKF,OAAL,CAAaC,MAAb,CAAP,KAAgC,UAApC,EAAgD;AAC5C,aAAO,KAAKD,OAAL,CAAaC,MAAb,EAAqBnF,MAArB,EAA6BlI,IAA7B,EAAmCH,MAAnC,EAA2CyN,SAA3C,CAAP;AACH;;AACD,WAAO,IAAP,CAJ2C,CAI9B;AAChB;AAED;;;;;;;;AAMAC,aAAW,CAACrF,MAAD,EAASlI,IAAT,EAAe;AACtB,WAAO,KAAK2E,KAAL,CAAW,QAAX,EAAqBuD,MAArB,EAA6BlI,IAA7B,CAAP;AACH;AAED;;;;;;;;AAMAwN,aAAW,CAACtF,MAAD,EAASlI,IAAT,EAAe;AACtB,WAAO,KAAK2E,KAAL,CAAW,QAAX,EAAqBuD,MAArB,EAA6BlI,IAA7B,CAAP;AACH;AAED;;;;;;;;;;AAQAyN,aAAW,CAACvF,MAAD,EAASlI,IAAT,EAAeH,MAAf,EAAuByN,SAAvB,EAAkC;AACzC,WAAO,KAAK3I,KAAL,CAAW,QAAX,EAAqBuD,MAArB,EAA6BlI,IAA7B,EAAmCH,MAAnC,EAA2CyN,SAA3C,CAAP;AACH;;AA3EyB,C;;;;;;;;;;;AC9B9B/J,MAAM,CAACpF,MAAP,CAAc;AAACY,OAAK,EAAC,MAAIA;AAAX,CAAd;;AAAiC,IAAIV,CAAJ;;AAAMkF,MAAM,CAACjF,IAAP,CAAY,mBAAZ,EAAgC;AAACD,GAAC,CAACE,CAAD,EAAG;AAACF,KAAC,GAACE,CAAF;AAAI;;AAAV,CAAhC,EAA4C,CAA5C;AAA+C,IAAIoG,KAAJ;AAAUpB,MAAM,CAACjF,IAAP,CAAY,cAAZ,EAA2B;AAACqG,OAAK,CAACpG,CAAD,EAAG;AAACoG,SAAK,GAACpG,CAAN;AAAQ;;AAAlB,CAA3B,EAA+C,CAA/C;AAAkD,IAAIC,MAAJ;AAAW+E,MAAM,CAACjF,IAAP,CAAY,eAAZ,EAA4B;AAACE,QAAM,CAACD,CAAD,EAAG;AAACC,UAAM,GAACD,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIE,KAAJ;AAAU8E,MAAM,CAACjF,IAAP,CAAY,cAAZ,EAA2B;AAACG,OAAK,CAACF,CAAD,EAAG;AAACE,SAAK,GAACF,CAAN;AAAQ;;AAAlB,CAA3B,EAA+C,CAA/C;AAAkD,IAAIH,QAAJ;AAAamF,MAAM,CAACjF,IAAP,CAAY,OAAZ,EAAoB;AAACF,UAAQ,CAACG,CAAD,EAAG;AAACH,YAAQ,GAACG,CAAT;AAAW;;AAAxB,CAApB,EAA8C,CAA9C;AAAiD,IAAIO,MAAJ;AAAWyE,MAAM,CAACjF,IAAP,CAAY,cAAZ,EAA2B;AAACQ,QAAM,CAACP,CAAD,EAAG;AAACO,UAAM,GAACP,CAAP;AAAS;;AAApB,CAA3B,EAAiD,CAAjD;AAAoD,IAAIS,gBAAJ;AAAqBuE,MAAM,CAACjF,IAAP,CAAY,yBAAZ,EAAsC;AAACU,kBAAgB,CAACT,CAAD,EAAG;AAACS,oBAAgB,GAACT,CAAjB;AAAmB;;AAAxC,CAAtC,EAAgF,CAAhF;AAAmF,IAAIK,MAAJ;AAAW2E,MAAM,CAACjF,IAAP,CAAY,cAAZ,EAA2B;AAACM,QAAM,CAACL,CAAD,EAAG;AAACK,UAAM,GAACL,CAAP;AAAS;;AAApB,CAA3B,EAAiD,CAAjD;;AAqCvf,MAAMQ,KAAN,CAAY;AAEfyE,aAAW,CAACC,OAAD,EAAU;AACjB,QAAIU,IAAI,GAAG,IAAX,CADiB,CAGjB;;AACAV,WAAO,GAAGpF,CAAC,CAACqF,MAAF,CAAS;AACfgK,gBAAU,EAAE,IADG;AAEfnI,YAAM,EAAE,IAFO;AAGfpE,UAAI,EAAE,IAHS;AAIfwM,iBAAW,EAAE,KAAKA,WAJH;AAKfC,oBAAc,EAAE,KAAKA,cALN;AAMfpC,YAAM,EAAE,KAAKA,MANE;AAOfoB,iBAAW,EAAE,KAAKA,WAPH;AAQfiB,gBAAU,EAAE,KAAKA,UARF;AASfC,kBAAY,EAAE,KAAKA,YATJ;AAUfC,iBAAW,EAAE,IAVE;AAWfjB,mBAAa,EAAE,IAXA;AAYfkB,oBAAc,EAAE;AAZD,KAAT,EAaPvK,OAbO,CAAV,CAJiB,CAmBjB;;AACA,QAAI,EAAEA,OAAO,CAACiK,UAAR,YAA8BjP,KAAK,CAACwP,UAAtC,CAAJ,EAAuD;AACnD,YAAM,IAAIpN,SAAJ,CAAc,6CAAd,CAAN;AACH;;AACD,QAAI4C,OAAO,CAAC8B,MAAR,IAAkB,EAAE9B,OAAO,CAAC8B,MAAR,YAA0BzG,MAA5B,CAAtB,EAA2D;AACvD,YAAM,IAAI+B,SAAJ,CAAc,wCAAd,CAAN;AACH;;AACD,QAAI,OAAO4C,OAAO,CAACtC,IAAf,KAAwB,QAA5B,EAAsC;AAClC,YAAM,IAAIN,SAAJ,CAAc,6BAAd,CAAN;AACH;;AACD,QAAIzC,QAAQ,CAAC8C,QAAT,CAAkBuC,OAAO,CAACtC,IAA1B,CAAJ,EAAqC;AACjC,YAAM,IAAIN,SAAJ,CAAc,4BAAd,CAAN;AACH;;AACD,QAAI4C,OAAO,CAACkK,WAAR,IAAuB,OAAOlK,OAAO,CAACkK,WAAf,KAA+B,UAA1D,EAAsE;AAClE,YAAM,IAAI9M,SAAJ,CAAc,sCAAd,CAAN;AACH;;AACD,QAAI4C,OAAO,CAACmK,cAAR,IAA0B,OAAOnK,OAAO,CAACmK,cAAf,KAAkC,UAAhE,EAA4E;AACxE,YAAM,IAAI/M,SAAJ,CAAc,yCAAd,CAAN;AACH;;AACD,QAAI4C,OAAO,CAAC+H,MAAR,IAAkB,OAAO/H,OAAO,CAAC+H,MAAf,KAA0B,UAAhD,EAA4D;AACxD,YAAM,IAAI3K,SAAJ,CAAc,iCAAd,CAAN;AACH;;AACD,QAAI4C,OAAO,CAACmJ,WAAR,IAAuB,OAAOnJ,OAAO,CAACmJ,WAAf,KAA+B,UAA1D,EAAsE;AAClE,YAAM,IAAI/L,SAAJ,CAAc,sCAAd,CAAN;AACH;;AACD,QAAI4C,OAAO,CAACqK,YAAR,IAAwB,OAAOrK,OAAO,CAACqK,YAAf,KAAgC,UAA5D,EAAwE;AACpE,YAAM,IAAIjN,SAAJ,CAAc,uCAAd,CAAN;AACH;;AACD,QAAI4C,OAAO,CAACsK,WAAR,IAAuB,EAAEtK,OAAO,CAACsK,WAAR,YAA+B/O,gBAAjC,CAA3B,EAA+E;AAC3E,YAAM,IAAI6B,SAAJ,CAAc,uDAAd,CAAN;AACH;;AACD,QAAI4C,OAAO,CAACqJ,aAAR,IAAyB,OAAOrJ,OAAO,CAACqJ,aAAf,KAAiC,UAA9D,EAA0E;AACtE,YAAM,IAAIjM,SAAJ,CAAc,wCAAd,CAAN;AACH;;AACD,QAAI4C,OAAO,CAACuK,cAAR,IAA0B,OAAOvK,OAAO,CAACuK,cAAf,KAAkC,UAAhE,EAA4E;AACxE,YAAM,IAAInN,SAAJ,CAAc,yCAAd,CAAN;AACH;;AACD,QAAI4C,OAAO,CAACoK,UAAR,IAAsB,OAAOpK,OAAO,CAACoK,UAAf,KAA8B,UAAxD,EAAoE;AAChE,YAAM,IAAIhN,SAAJ,CAAc,qCAAd,CAAN;AACH,KA1DgB,CA4DjB;;;AACAsD,QAAI,CAACV,OAAL,GAAeA,OAAf;AACAU,QAAI,CAAC4J,WAAL,GAAmBtK,OAAO,CAACsK,WAA3B;;AACA1P,KAAC,CAACkB,IAAF,CAAO,CACH,aADG,EAEH,gBAFG,EAGH,QAHG,EAIH,aAJG,EAKH,cALG,EAMH,YANG,CAAP,EAOImF,MAAD,IAAY;AACX,UAAI,OAAOjB,OAAO,CAACiB,MAAD,CAAd,KAA2B,UAA/B,EAA2C;AACvCP,YAAI,CAACO,MAAD,CAAJ,GAAejB,OAAO,CAACiB,MAAD,CAAtB;AACH;AACJ,KAXD,EA/DiB,CA4EjB;;;AACAtG,YAAQ,CAACwC,QAAT,CAAkBuD,IAAlB,EA7EiB,CA+EjB;;AACA,QAAI,EAAEA,IAAI,CAAC4J,WAAL,YAA4B/O,gBAA9B,CAAJ,EAAqD;AACjD;AACA,UAAIZ,QAAQ,CAACkD,MAAT,CAAgBqC,uBAAhB,YAAmD3E,gBAAvD,EAAyE;AACrEmF,YAAI,CAAC4J,WAAL,GAAmB3P,QAAQ,CAACkD,MAAT,CAAgBqC,uBAAnC;AACH,OAFD,MAEO;AACHQ,YAAI,CAAC4J,WAAL,GAAmB,IAAI/O,gBAAJ,EAAnB;AACA8C,eAAO,CAACgH,IAAR,wDAA4DrF,OAAO,CAACtC,IAApE;AACH;AACJ;;AAED,QAAI3C,MAAM,CAAC4E,QAAX,EAAqB;AAEjB;;;;;;AAMAe,UAAI,CAACoC,UAAL,GAAkB,UAAUF,KAAV,EAAiBhF,MAAjB,EAAyB;AACvCsD,aAAK,CAAC0B,KAAD,EAAQC,MAAR,CAAL;AACA3B,aAAK,CAACtD,MAAD,EAASiF,MAAT,CAAL;AACA,eAAO1H,MAAM,CAACe,IAAP,CAAY;AAACuO,eAAK,EAAE7H,KAAR;AAAehF,gBAAM,EAAEA;AAAvB,SAAZ,EAA4CoH,KAA5C,OAAwD,CAA/D;AACH,OAJD;AAMA;;;;;;;;AAMAtE,UAAI,CAACgK,IAAL,GAAY,UAAU9M,MAAV,EAAkBlC,KAAlB,EAAyBuC,QAAzB,EAAmC;AAC3CiD,aAAK,CAACtD,MAAD,EAASiF,MAAT,CAAL;;AAEA,YAAI,EAAEnH,KAAK,YAAYJ,KAAnB,CAAJ,EAA+B;AAC3B,gBAAM,IAAI8B,SAAJ,CAAc,4CAAd,CAAN;AACH,SAL0C,CAM3C;;;AACA,YAAIb,IAAI,GAAGmE,IAAI,CAACzE,aAAL,GAAqBmH,OAArB,CAA6B;AAAC/G,aAAG,EAAEuB;AAAN,SAA7B,CAAX;;AACA,YAAI,CAACrB,IAAL,EAAW;AACP,gBAAM,IAAIxB,MAAM,CAACoG,KAAX,CAAiB,gBAAjB,EAAmC,gBAAnC,CAAN;AACH,SAV0C,CAW3C;;;AACA,cAAMW,MAAM,GAAGpG,KAAK,CAACgJ,SAAN,EAAf;;AACA,YAAI5C,MAAM,YAAYzG,MAAlB,IAA4B,CAACyG,MAAM,CAACI,OAAP,CAAe3F,IAAf,CAAjC,EAAuD;AACnD;AACH,SAf0C,CAiB3C;;;AACA,YAAImO,IAAI,GAAG9P,CAAC,CAAC+P,IAAF,CAAOpO,IAAP,EAAa,KAAb,EAAoB,KAApB,CAAX;;AACAmO,YAAI,CAACE,aAAL,GAAqBlK,IAAI,CAACrD,OAAL,EAArB;AACAqN,YAAI,CAACG,UAAL,GAAkBjN,MAAlB,CApB2C,CAsB3C;;AACA,YAAIkN,MAAM,GAAGpP,KAAK,CAACiJ,MAAN,CAAa+F,IAAb,CAAb,CAvB2C,CAyB3C;;AACA,YAAIpH,EAAE,GAAG5C,IAAI,CAACuI,aAAL,CAAmBrL,MAAnB,EAA2BrB,IAA3B,CAAT,CA1B2C,CA4B3C;;AACA+G,UAAE,CAACK,EAAH,CAAM,OAAN,EAAe5I,MAAM,CAAC6I,eAAP,CAAuB,UAAUxB,GAAV,EAAe;AACjDnE,kBAAQ,CAACC,IAAT,CAAcwC,IAAd,EAAoB0B,GAApB,EAAyB,IAAzB;AACH,SAFc,CAAf,EA7B2C,CAiC3C;;AACA1G,aAAK,CAACqI,KAAN,CAAYT,EAAZ,EAAgBwH,MAAhB,EAAwB/P,MAAM,CAAC6I,eAAP,CAAuB,UAAUxB,GAAV,EAAe;AAC1D,cAAIA,GAAJ,EAAS;AACL1B,gBAAI,CAACzE,aAAL,GAAqB4H,MAArB,CAA4B;AAACxH,iBAAG,EAAEyO;AAAN,aAA5B;AACApK,gBAAI,CAACwJ,WAAL,CAAiBhM,IAAjB,CAAsBwC,IAAtB,EAA4B0B,GAA5B,EAAiCxE,MAAjC,EAAyCrB,IAAzC;AACH;;AACD,cAAI,OAAO0B,QAAP,KAAoB,UAAxB,EAAoC;AAChCA,oBAAQ,CAACC,IAAT,CAAcwC,IAAd,EAAoB0B,GAApB,EAAyB0I,MAAzB,EAAiCJ,IAAjC,EAAuChP,KAAvC;AACH;AACJ,SARuB,CAAxB;AASH,OA3CD;AA6CA;;;;;;;;AAMAgF,UAAI,CAACiE,MAAL,GAAc,UAAUpI,IAAV,EAAgB0B,QAAhB,EAA0B;AACpCiD,aAAK,CAAC3E,IAAD,EAAO4H,MAAP,CAAL;AACA5H,YAAI,CAACb,KAAL,GAAagF,IAAI,CAACV,OAAL,CAAatC,IAA1B,CAFoC,CAEJ;;AAChC,eAAOgD,IAAI,CAACzE,aAAL,GAAqByN,MAArB,CAA4BnN,IAA5B,EAAkC0B,QAAlC,CAAP;AACH,OAJD;AAMA;;;;;;;AAKAyC,UAAI,CAACkE,WAAL,GAAmB,UAAUhH,MAAV,EAAkB;AACjC,YAAIgF,KAAK,GAAGlC,IAAI,CAACqK,aAAL,EAAZ,CADiC,CAGjC;;AACA,YAAI5P,MAAM,CAACe,IAAP,CAAY;AAAC0B,gBAAM,EAAEA;AAAT,SAAZ,EAA8BoH,KAA9B,EAAJ,EAA2C;AACvC7J,gBAAM,CAACsB,MAAP,CAAc;AAACmB,kBAAM,EAAEA;AAAT,WAAd,EAAgC;AAC5BlB,gBAAI,EAAE;AACFsO,uBAAS,EAAE,IAAIzC,IAAJ,EADT;AAEFkC,mBAAK,EAAE7H;AAFL;AADsB,WAAhC;AAMH,SAPD,MAOO;AACHzH,gBAAM,CAACuO,MAAP,CAAc;AACVsB,qBAAS,EAAE,IAAIzC,IAAJ,EADD;AAEV3K,kBAAM,EAAEA,MAFE;AAGV6M,iBAAK,EAAE7H;AAHG,WAAd;AAKH;;AACD,eAAOA,KAAP;AACH,OAnBD;AAqBA;;;;;;;;AAMAlC,UAAI,CAACqD,KAAL,GAAa,UAAUT,EAAV,EAAc1F,MAAd,EAAsBK,QAAtB,EAAgC;AACzC,YAAI1B,IAAI,GAAGmE,IAAI,CAACzE,aAAL,GAAqBmH,OAArB,CAA6B;AAAC/G,aAAG,EAAEuB;AAAN,SAA7B,CAAX;AACA,YAAI4J,EAAE,GAAG9G,IAAI,CAACuK,cAAL,CAAoBrN,MAApB,EAA4BrB,IAA5B,CAAT;AAEA,YAAI2O,YAAY,GAAGnQ,MAAM,CAAC6I,eAAP,CAAuB,UAAUxB,GAAV,EAAe;AACrD1B,cAAI,CAACzE,aAAL,GAAqB4H,MAArB,CAA4B;AAACxH,eAAG,EAAEuB;AAAN,WAA5B;AACA8C,cAAI,CAAC2J,YAAL,CAAkBnM,IAAlB,CAAuBwC,IAAvB,EAA6B0B,GAA7B,EAAkCxE,MAAlC,EAA0CrB,IAA1C;AACA0B,kBAAQ,CAACC,IAAT,CAAcwC,IAAd,EAAoB0B,GAApB;AACH,SAJkB,CAAnB;AAMAoF,UAAE,CAAC7D,EAAH,CAAM,OAAN,EAAeuH,YAAf;AACA1D,UAAE,CAAC7D,EAAH,CAAM,QAAN,EAAgB5I,MAAM,CAAC6I,eAAP,CAAuB,YAAY;AAC/C,cAAIxC,IAAI,GAAG,CAAX;AACA,cAAI+J,UAAU,GAAGzK,IAAI,CAACuI,aAAL,CAAmBrL,MAAnB,EAA2BrB,IAA3B,CAAjB;AAEA4O,oBAAU,CAACxH,EAAX,CAAc,OAAd,EAAuB5I,MAAM,CAAC6I,eAAP,CAAuB,UAAUtF,KAAV,EAAiB;AAC3DL,oBAAQ,CAACC,IAAT,CAAcwC,IAAd,EAAoBpC,KAApB,EAA2B,IAA3B;AACH,WAFsB,CAAvB;AAGA6M,oBAAU,CAACxH,EAAX,CAAc,MAAd,EAAsB5I,MAAM,CAAC6I,eAAP,CAAuB,UAAUwH,IAAV,EAAgB;AACzDhK,gBAAI,IAAIgK,IAAI,CAAC5L,MAAb;AACH,WAFqB,CAAtB;AAGA2L,oBAAU,CAACxH,EAAX,CAAc,KAAd,EAAqB5I,MAAM,CAAC6I,eAAP,CAAuB,YAAY;AACpD;AACArH,gBAAI,CAAC6H,QAAL,GAAgB,IAAhB;AACA7H,gBAAI,CAACJ,IAAL,GAAYxB,QAAQ,CAACgC,YAAT,EAAZ;AACAJ,gBAAI,CAACU,IAAL,GAAYyD,IAAI,CAACxD,kBAAL,CAAwBU,MAAxB,CAAZ;AACArB,gBAAI,CAACiI,QAAL,GAAgB,CAAhB;AACAjI,gBAAI,CAAC6E,IAAL,GAAYA,IAAZ;AACA7E,gBAAI,CAACqG,KAAL,GAAalC,IAAI,CAACqK,aAAL,EAAb;AACAxO,gBAAI,CAAC8H,SAAL,GAAiB,KAAjB;AACA9H,gBAAI,CAACkM,UAAL,GAAkB,IAAIF,IAAJ,EAAlB;AACAhM,gBAAI,CAACyB,GAAL,GAAW0C,IAAI,CAAC2K,UAAL,CAAgBzN,MAAhB,CAAX,CAVoD,CAYpD;;AACA,gBAAI,OAAO8C,IAAI,CAACyJ,cAAZ,KAA+B,UAAnC,EAA+C;AAC3CzJ,kBAAI,CAACyJ,cAAL,CAAoBjM,IAApB,CAAyBwC,IAAzB,EAA+BnE,IAA/B;AACH,aAfmD,CAiBpD;AACA;;;AACAmE,gBAAI,CAACzE,aAAL,GAAqBO,MAArB,CAA4BC,MAA5B,CAAmC;AAACJ,iBAAG,EAAEuB;AAAN,aAAnC,EAAkD;AAC9ClB,kBAAI,EAAE;AACF0H,wBAAQ,EAAE7H,IAAI,CAAC6H,QADb;AAEFjI,oBAAI,EAAEI,IAAI,CAACJ,IAFT;AAGFc,oBAAI,EAAEV,IAAI,CAACU,IAHT;AAIFuH,wBAAQ,EAAEjI,IAAI,CAACiI,QAJb;AAKFpD,oBAAI,EAAE7E,IAAI,CAAC6E,IALT;AAMFwB,qBAAK,EAAErG,IAAI,CAACqG,KANV;AAOFyB,yBAAS,EAAE9H,IAAI,CAAC8H,SAPd;AAQFoE,0BAAU,EAAElM,IAAI,CAACkM,UARf;AASFzK,mBAAG,EAAEzB,IAAI,CAACyB;AATR;AADwC,aAAlD,EAnBoD,CAiCpD;;AACAC,oBAAQ,CAACC,IAAT,CAAcwC,IAAd,EAAoB,IAApB,EAA0BnE,IAA1B,EAlCoD,CAoCpD;;AACA,gBAAI5B,QAAQ,CAACkD,MAAT,CAAgByC,kBAApB,EAAwC;AACpCvF,oBAAM,CAACmN,WAAP,CAAmBvN,QAAQ,CAACkD,MAAT,CAAgByC,kBAAnC;AACH,aAvCmD,CAyCpD;;;AACA,gBAAII,IAAI,CAACV,OAAL,CAAasL,MAAb,YAA+BtK,KAAnC,EAA0C;AACtC,mBAAK,IAAIzB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmB,IAAI,CAACV,OAAL,CAAasL,MAAb,CAAoB9L,MAAxC,EAAgDD,CAAC,IAAI,CAArD,EAAwD;AACpD,oBAAI7D,KAAK,GAAGgF,IAAI,CAACV,OAAL,CAAasL,MAAb,CAAoB/L,CAApB,CAAZ;;AAEA,oBAAI,CAAC7D,KAAK,CAACgJ,SAAN,EAAD,IAAsBhJ,KAAK,CAACgJ,SAAN,GAAkBxC,OAAlB,CAA0B3F,IAA1B,CAA1B,EAA2D;AACvDmE,sBAAI,CAACgK,IAAL,CAAU9M,MAAV,EAAkBlC,KAAlB;AACH;AACJ;AACJ;AACJ,WAnDoB,CAArB;AAoDH,SA9De,CAAhB,EAXyC,CA2EzC;;AACAgF,YAAI,CAAC6J,cAAL,CAAoBjH,EAApB,EAAwBkE,EAAxB,EAA4B5J,MAA5B,EAAoCrB,IAApC;AACH,OA7ED;AA8EH;;AAED,QAAIxB,MAAM,CAAC4E,QAAX,EAAqB;AACjB,YAAM0C,EAAE,GAAGC,GAAG,CAAC5C,OAAJ,CAAY,IAAZ,CAAX;;AACA,YAAMuK,UAAU,GAAGvJ,IAAI,CAACzE,aAAL,EAAnB,CAFiB,CAIjB;;AACAgO,gBAAU,CAACsB,KAAX,CAAiB1H,MAAjB,CAAwB,UAAUY,MAAV,EAAkBlI,IAAlB,EAAwB;AAC5C;AACApB,cAAM,CAAC0I,MAAP,CAAc;AAACjG,gBAAM,EAAErB,IAAI,CAACF;AAAd,SAAd;;AAEA,YAAIqE,IAAI,CAACV,OAAL,CAAasL,MAAb,YAA+BtK,KAAnC,EAA0C;AACtC,eAAK,IAAIzB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmB,IAAI,CAACV,OAAL,CAAasL,MAAb,CAAoB9L,MAAxC,EAAgDD,CAAC,IAAI,CAArD,EAAwD;AACpD;AACAmB,gBAAI,CAACV,OAAL,CAAasL,MAAb,CAAoB/L,CAApB,EAAuBtD,aAAvB,GAAuC4H,MAAvC,CAA8C;AAACgH,wBAAU,EAAEtO,IAAI,CAACF;AAAlB,aAA9C;AACH;AACJ;AACJ,OAVD,EALiB,CAiBjB;;AACA4N,gBAAU,CAACuB,MAAX,CAAkB9B,MAAlB,CAAyB,UAAUjF,MAAV,EAAkBlI,IAAlB,EAAwB;AAC7C,YAAI,CAACmE,IAAI,CAAC4J,WAAL,CAAiBR,WAAjB,CAA6BrF,MAA7B,EAAqClI,IAArC,CAAL,EAAiD;AAC7C,gBAAM,IAAIxB,MAAM,CAACoG,KAAX,CAAiB,WAAjB,EAA8B,WAA9B,CAAN;AACH;AACJ,OAJD,EAlBiB,CAwBjB;;AACA8I,gBAAU,CAACuB,MAAX,CAAkB/O,MAAlB,CAAyB,UAAUgI,MAAV,EAAkBlI,IAAlB,EAAwBH,MAAxB,EAAgCyN,SAAhC,EAA2C;AAChE,YAAI,CAACnJ,IAAI,CAAC4J,WAAL,CAAiBN,WAAjB,CAA6BvF,MAA7B,EAAqClI,IAArC,EAA2CH,MAA3C,EAAmDyN,SAAnD,CAAL,EAAoE;AAChE,gBAAM,IAAI9O,MAAM,CAACoG,KAAX,CAAiB,WAAjB,EAA8B,WAA9B,CAAN;AACH;AACJ,OAJD,EAzBiB,CA+BjB;;AACA8I,gBAAU,CAACuB,MAAX,CAAkB3H,MAAlB,CAAyB,UAAUY,MAAV,EAAkBlI,IAAlB,EAAwB;AAC7C,YAAI,CAACmE,IAAI,CAAC4J,WAAL,CAAiBP,WAAjB,CAA6BtF,MAA7B,EAAqClI,IAArC,CAAL,EAAiD;AAC7C,gBAAM,IAAIxB,MAAM,CAACoG,KAAX,CAAiB,WAAjB,EAA8B,WAA9B,CAAN;AACH,SAH4C,CAK7C;;;AACAT,YAAI,CAAC+K,MAAL,CAAYlP,IAAI,CAACF,GAAjB;AAEA,YAAI2G,OAAO,GAAGrI,QAAQ,CAACgD,eAAT,CAAyBpB,IAAI,CAACF,GAA9B,CAAd,CAR6C,CAU7C;;AACAgG,UAAE,CAAC+D,IAAH,CAAQpD,OAAR,EAAiB,UAAUZ,GAAV,EAAe;AAC5B,WAACA,GAAD,IAAQC,EAAE,CAACa,MAAH,CAAUF,OAAV,EAAmB,UAAUZ,GAAV,EAAe;AACtCA,eAAG,IAAI/D,OAAO,CAACC,KAAR,2CAAiD0E,OAAjD,eAA6DZ,GAAG,CAACe,OAAjE,OAAP;AACH,WAFO,CAAR;AAGH,SAJD;AAKH,OAhBD;AAiBH;AACJ;AAED;;;;;;;AAKAsI,QAAM,CAAC7N,MAAD,EAASK,QAAT,EAAmB;AACrB,UAAM,IAAIkD,KAAJ,CAAU,2BAAV,CAAN;AACH;AAED;;;;;;;AAKA4J,eAAa,CAACW,OAAD,EAAU;AACnB,WAAO,CAACA,OAAO,IAAI,YAAZ,EAA0BzJ,OAA1B,CAAkC,OAAlC,EAA4C0J,CAAD,IAAO;AACrD,UAAI5C,CAAC,GAAGnB,IAAI,CAACgE,MAAL,KAAgB,EAAhB,GAAqB,CAA7B;AAAA,UAAgC9Q,CAAC,GAAG6Q,CAAC,KAAK,GAAN,GAAY5C,CAAZ,GAAiBA,CAAC,GAAG,GAAJ,GAAU,GAA/D;AACA,UAAI8C,CAAC,GAAG/Q,CAAC,CAACgR,QAAF,CAAW,EAAX,CAAR;AACA,aAAOlE,IAAI,CAACmE,KAAL,CAAWnE,IAAI,CAACgE,MAAL,EAAX,IAA4BC,CAAC,CAACG,WAAF,EAA5B,GAA8CH,CAArD;AACH,KAJM,CAAP;AAKH;AAED;;;;;;AAIA5P,eAAa,GAAG;AACZ,WAAO,KAAK+D,OAAL,CAAaiK,UAApB;AACH;AAED;;;;;;;AAKA/M,oBAAkB,CAACU,MAAD,EAAS;AACvB,QAAIrB,IAAI,GAAG,KAAKN,aAAL,GAAqBmH,OAArB,CAA6BxF,MAA7B,EAAqC;AAACxB,YAAM,EAAE;AAACsB,YAAI,EAAE;AAAP;AAAT,KAArC,CAAX;AACA,WAAOnB,IAAI,GAAG,KAAK0P,cAAL,WAAuBrO,MAAvB,cAAiCrB,IAAI,CAACmB,IAAtC,EAAH,GAAmD,IAA9D;AACH;AAED;;;;;;;AAKA2N,YAAU,CAACzN,MAAD,EAAS;AACf,QAAIrB,IAAI,GAAG,KAAKN,aAAL,GAAqBmH,OAArB,CAA6BxF,MAA7B,EAAqC;AAACxB,YAAM,EAAE;AAACsB,YAAI,EAAE;AAAP;AAAT,KAArC,CAAX;AACA,WAAOnB,IAAI,GAAG,KAAKuI,MAAL,WAAelH,MAAf,cAAyBrB,IAAI,CAACmB,IAA9B,EAAH,GAA2C,IAAtD;AACH;AAED;;;;;;AAIAgH,WAAS,GAAG;AACR,WAAO,KAAK1E,OAAL,CAAa8B,MAApB;AACH;AAED;;;;;;AAIAzE,SAAO,GAAG;AACN,WAAO,KAAK2C,OAAL,CAAatC,IAApB;AACH;AAED;;;;;;;AAKAuL,eAAa,CAACrL,MAAD,EAASrB,IAAT,EAAe;AACxB,UAAM,IAAI4E,KAAJ,CAAU,wCAAV,CAAN;AACH;AAED;;;;;;;AAKA8K,gBAAc,CAAChP,IAAD,EAAO;AACjB,UAAMiP,OAAO,GAAGnR,MAAM,CAACoR,WAAP,GAAqBlK,OAArB,CAA6B,MAA7B,EAAqC,EAArC,CAAhB;AACA,UAAMmK,QAAQ,GAAGF,OAAO,CAACjK,OAAR,CAAgB,wBAAhB,EAA0C,EAA1C,CAAjB;AACA,UAAMU,SAAS,GAAG,KAAKtF,OAAL,EAAlB;AACAJ,QAAI,GAAG4F,MAAM,CAAC5F,IAAD,CAAN,CAAagF,OAAb,CAAqB,KAArB,EAA4B,EAA5B,EAAgCoK,IAAhC,EAAP;AACA,WAAOC,SAAS,WAAIF,QAAJ,cAAgBzR,QAAQ,CAACkD,MAAT,CAAgB0C,UAAhC,cAA8CoC,SAA9C,cAA2D1F,IAA3D,EAAhB;AACH;AAED;;;;;;;AAKA6H,QAAM,CAAC7H,IAAD,EAAO;AACT,UAAMiP,OAAO,GAAGnR,MAAM,CAACoR,WAAP,CAAmB;AAACI,YAAM,EAAE5R,QAAQ,CAACkD,MAAT,CAAgBsC;AAAzB,KAAnB,EAAoD8B,OAApD,CAA4D,MAA5D,EAAoE,EAApE,CAAhB;AACA,UAAMU,SAAS,GAAG,KAAKtF,OAAL,EAAlB;AACAJ,QAAI,GAAG4F,MAAM,CAAC5F,IAAD,CAAN,CAAagF,OAAb,CAAqB,KAArB,EAA4B,EAA5B,EAAgCoK,IAAhC,EAAP;AACA,WAAOC,SAAS,WAAIJ,OAAJ,cAAevR,QAAQ,CAACkD,MAAT,CAAgB0C,UAA/B,cAA6CoC,SAA7C,cAA0D1F,IAA1D,EAAhB;AACH;AAED;;;;;;;AAKAgO,gBAAc,CAACrN,MAAD,EAASrB,IAAT,EAAe;AACzB,UAAM,IAAI4E,KAAJ,CAAU,mCAAV,CAAN;AACH;AAED;;;;;;;;AAMApD,eAAa,CAACC,GAAD,EAAMzB,IAAN,EAAY0B,QAAZ,EAAsB;AAC/BlD,UAAM,CAACmD,IAAP,CAAY,cAAZ,EAA4BF,GAA5B,EAAiCzB,IAAjC,EAAuC,KAAKc,OAAL,EAAvC,EAAuDY,QAAvD;AACH;AAED;;;;;;;;AAMAiM,aAAW,CAAC9H,GAAD,EAAMxE,MAAN,EAAcrB,IAAd,EAAoB;AAC3B8B,WAAO,CAACC,KAAR,mCAAwCV,MAAxC,iBAAoDwE,GAAG,CAACe,OAAxD,QAAoEf,GAApE;AACH;AAED;;;;;;AAIA+H,gBAAc,CAAC5N,IAAD,EAAO,CACpB;AAED;;;;;;;;;;AAQAwL,QAAM,CAACnK,MAAD,EAASrB,IAAT,EAAeiQ,OAAf,EAAwBC,QAAxB,EAAkC;AACpC,WAAO,IAAP;AACH;AAED;;;;;;;;;AAOAtD,aAAW,CAAC/G,GAAD,EAAMxE,MAAN,EAAcrB,IAAd,EAAoB;AAC3B8B,WAAO,CAACC,KAAR,mCAAwCV,MAAxC,iBAAoDwE,GAAG,CAACe,OAAxD,QAAoEf,GAApE;AACH;AAED;;;;;;AAIAgI,YAAU,CAAC7N,IAAD,EAAO,CAChB;AAED;;;;;;;;;AAOA8N,cAAY,CAACjI,GAAD,EAAMxE,MAAN,EAAcrB,IAAd,EAAoB;AAC5B8B,WAAO,CAACC,KAAR,oCAAyCV,MAAzC,iBAAqDwE,GAAG,CAACe,OAAzD,QAAqEf,GAArE;AACH;AAED;;;;;;AAIAsK,gBAAc,CAACpC,WAAD,EAAc;AACxB,QAAI,EAAEA,WAAW,YAAY/O,gBAAzB,CAAJ,EAAgD;AAC5C,YAAM,IAAI6B,SAAJ,CAAc,6DAAd,CAAN;AACH;;AACD,SAAKkN,WAAL,GAAmBA,WAAnB;AACH;AAED;;;;;;;;;;;AASAjB,eAAa,CAAC8B,UAAD,EAAawB,WAAb,EAA0B/O,MAA1B,EAAkCrB,IAAlC,EAAwCiQ,OAAxC,EAAiDnE,OAAjD,EAA0D;AACnE,QAAI,OAAO,KAAKrI,OAAL,CAAaqJ,aAApB,KAAsC,UAA1C,EAAsD;AAClD,WAAKrJ,OAAL,CAAaqJ,aAAb,CAA2BnL,IAA3B,CAAgC,IAAhC,EAAsCiN,UAAtC,EAAkDwB,WAAlD,EAA+D/O,MAA/D,EAAuErB,IAAvE,EAA6EiQ,OAA7E,EAAsFnE,OAAtF;AACH,KAFD,MAEO;AACH8C,gBAAU,CAAC5B,IAAX,CAAgBoD,WAAhB;AACH;AACJ;AAED;;;;;;;;;AAOApC,gBAAc,CAACY,UAAD,EAAawB,WAAb,EAA0B/O,MAA1B,EAAkCrB,IAAlC,EAAwC;AAClD,QAAI,OAAO,KAAKyD,OAAL,CAAauK,cAApB,KAAuC,UAA3C,EAAuD;AACnD,WAAKvK,OAAL,CAAauK,cAAb,CAA4BrM,IAA5B,CAAiC,IAAjC,EAAuCiN,UAAvC,EAAmDwB,WAAnD,EAAgE/O,MAAhE,EAAwErB,IAAxE;AACH,KAFD,MAEO;AACH4O,gBAAU,CAAC5B,IAAX,CAAgBoD,WAAhB;AACH;AACJ;AAED;;;;;;AAIAtJ,UAAQ,CAAC9G,IAAD,EAAO;AACX,QAAI,OAAO,KAAK6N,UAAZ,KAA2B,UAA/B,EAA2C;AACvC,WAAKA,UAAL,CAAgB7N,IAAhB;AACH;AACJ;;AAjjBc,C;;;;;;;;;;;ACrCnB,IAAIqQ,QAAJ;AAAa9M,MAAM,CAACjF,IAAP,CAAY,mBAAZ,EAAgC;AAAC+R,UAAQ,CAAC9R,CAAD,EAAG;AAAC8R,YAAQ,GAAC9R,CAAT;AAAW;;AAAxB,CAAhC,EAA0D,CAA1D;;AA4Bb,IAAI+R,MAAM,GAAG,UAAUlO,IAAV,EAAgB7B,IAAhB,EAAsB;AAC/B,SAAO,OAAO6B,IAAP,KAAgB,QAAhB,IACA,OAAO7B,IAAP,KAAgB,QADhB,IAEAA,IAAI,CAACkF,OAAL,CAAarD,IAAI,GAAG,GAApB,MAA6B,CAFpC;AAGH,CAJD;;AAMAiO,QAAQ,CAACE,cAAT,CAAwB,eAAxB,EAAyC,UAAUnO,IAAV,EAAgB;AACrD,SAAOkO,MAAM,CAAC,aAAD,EAAgB,KAAKlO,IAAL,IAAaA,IAA7B,CAAb;AACH,CAFD;AAIAiO,QAAQ,CAACE,cAAT,CAAwB,SAAxB,EAAmC,UAAUnO,IAAV,EAAgB;AAC/C,SAAOkO,MAAM,CAAC,OAAD,EAAU,KAAKlO,IAAL,IAAaA,IAAvB,CAAb;AACH,CAFD;AAIAiO,QAAQ,CAACE,cAAT,CAAwB,SAAxB,EAAmC,UAAUnO,IAAV,EAAgB;AAC/C,SAAOkO,MAAM,CAAC,OAAD,EAAU,KAAKlO,IAAL,IAAaA,IAAvB,CAAb;AACH,CAFD;AAIAiO,QAAQ,CAACE,cAAT,CAAwB,QAAxB,EAAkC,UAAUnO,IAAV,EAAgB;AAC9C,SAAOkO,MAAM,CAAC,MAAD,EAAS,KAAKlO,IAAL,IAAaA,IAAtB,CAAb;AACH,CAFD;AAIAiO,QAAQ,CAACE,cAAT,CAAwB,SAAxB,EAAmC,UAAUnO,IAAV,EAAgB;AAC/C,SAAOkO,MAAM,CAAC,OAAD,EAAU,KAAKlO,IAAL,IAAaA,IAAvB,CAAb;AACH,CAFD,E;;;;;;;;;;;AClDAmB,MAAM,CAACpF,MAAP,CAAc;AAACS,QAAM,EAAC,MAAIA;AAAZ,CAAd;AAAmC,IAAIH,KAAJ;AAAU8E,MAAM,CAACjF,IAAP,CAAY,cAAZ,EAA2B;AAACG,OAAK,CAACF,CAAD,EAAG;AAACE,SAAK,GAACF,CAAN;AAAQ;;AAAlB,CAA3B,EAA+C,CAA/C;AA+BtC,MAAMK,MAAM,GAAG,IAAIH,KAAK,CAACwP,UAAV,CAAqB,WAArB,CAAf,C;;;;;;;;;;;AC/BP1K,MAAM,CAACpF,MAAP,CAAc;AAACc,UAAQ,EAAC,MAAIA;AAAd,CAAd;;AAAuC,IAAIZ,CAAJ;;AAAMkF,MAAM,CAACjF,IAAP,CAAY,mBAAZ,EAAgC;AAACD,GAAC,CAACE,CAAD,EAAG;AAACF,KAAC,GAACE,CAAF;AAAI;;AAAV,CAAhC,EAA4C,CAA5C;AAA+C,IAAIC,MAAJ;AAAW+E,MAAM,CAACjF,IAAP,CAAY,eAAZ,EAA4B;AAACE,QAAM,CAACD,CAAD,EAAG;AAACC,UAAM,GAACD,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIQ,KAAJ;AAAUwE,MAAM,CAACjF,IAAP,CAAY,aAAZ,EAA0B;AAACS,OAAK,CAACR,CAAD,EAAG;AAACQ,SAAK,GAACR,CAAN;AAAQ;;AAAlB,CAA1B,EAA8C,CAA9C;;AAiC/J,MAAMU,QAAN,CAAe;AAElBuE,aAAW,CAACC,OAAD,EAAU;AACjB,QAAIU,IAAI,GAAG,IAAX,CADiB,CAGjB;;AACAV,WAAO,GAAGpF,CAAC,CAACqF,MAAF,CAAS;AACf8M,cAAQ,EAAE,IADK;AAEfC,cAAQ,EAAE,GAFK;AAGfC,eAAS,EAAE,KAAK,IAHD;AAIf7B,UAAI,EAAE,IAJS;AAKf7O,UAAI,EAAE,IALS;AAMf2Q,kBAAY,EAAE,IAAI,IAAJ,GAAW,IANV;AAOfC,cAAQ,EAAE,CAPK;AAQfC,aAAO,EAAE,KAAKA,OARC;AASfC,gBAAU,EAAE,KAAKA,UATF;AAUfC,cAAQ,EAAE,KAAKA,QAVA;AAWfC,aAAO,EAAE,KAAKA,OAXC;AAYfC,gBAAU,EAAE,KAAKA,UAZF;AAafC,aAAO,EAAE,KAAKA,OAbC;AAcfC,YAAM,EAAE,KAAKA,MAdE;AAefC,gBAAU,EAAE,IAfG;AAgBfjS,WAAK,EAAE,IAhBQ;AAiBfkS,mBAAa,EAAE;AAjBA,KAAT,EAkBP5N,OAlBO,CAAV,CAJiB,CAwBjB;;AACA,QAAI,OAAOA,OAAO,CAAC+M,QAAf,KAA4B,SAAhC,EAA2C;AACvC,YAAM,IAAI3P,SAAJ,CAAc,0BAAd,CAAN;AACH;;AACD,QAAI,OAAO4C,OAAO,CAACgN,QAAf,KAA4B,QAAhC,EAA0C;AACtC,YAAM,IAAI5P,SAAJ,CAAc,0BAAd,CAAN;AACH;;AACD,QAAI4C,OAAO,CAACgN,QAAR,IAAoB,CAApB,IAAyBhN,OAAO,CAACgN,QAAR,GAAmB,CAAhD,EAAmD;AAC/C,YAAM,IAAIa,UAAJ,CAAe,8CAAf,CAAN;AACH;;AACD,QAAI,OAAO7N,OAAO,CAACiN,SAAf,KAA6B,QAAjC,EAA2C;AACvC,YAAM,IAAI7P,SAAJ,CAAc,2BAAd,CAAN;AACH;;AACD,QAAI,EAAE4C,OAAO,CAACoL,IAAR,YAAwB0C,IAA1B,KAAmC,EAAE9N,OAAO,CAACoL,IAAR,YAAwB2C,IAA1B,CAAvC,EAAwE;AACpE,YAAM,IAAI3Q,SAAJ,CAAc,6BAAd,CAAN;AACH;;AACD,QAAI4C,OAAO,CAACzD,IAAR,KAAiB,IAAjB,IAAyB,OAAOyD,OAAO,CAACzD,IAAf,KAAwB,QAArD,EAA+D;AAC3D,YAAM,IAAIa,SAAJ,CAAc,uBAAd,CAAN;AACH;;AACD,QAAI,OAAO4C,OAAO,CAACkN,YAAf,KAAgC,QAApC,EAA8C;AAC1C,YAAM,IAAI9P,SAAJ,CAAc,8BAAd,CAAN;AACH;;AACD,QAAI,OAAO4C,OAAO,CAACmN,QAAf,KAA4B,QAAhC,EAA0C;AACtC,YAAM,IAAI/P,SAAJ,CAAc,0BAAd,CAAN;AACH;;AACD,QAAI,OAAO4C,OAAO,CAAC2N,UAAf,KAA8B,QAAlC,EAA4C;AACxC,YAAM,IAAIvQ,SAAJ,CAAc,4BAAd,CAAN;AACH;;AACD,QAAI,OAAO4C,OAAO,CAAC4N,aAAf,KAAiC,QAArC,EAA+C;AAC3C,YAAM,IAAIxQ,SAAJ,CAAc,+BAAd,CAAN;AACH;;AACD,QAAI,OAAO4C,OAAO,CAACoN,OAAf,KAA2B,UAA/B,EAA2C;AACvC,YAAM,IAAIhQ,SAAJ,CAAc,2BAAd,CAAN;AACH;;AACD,QAAI,OAAO4C,OAAO,CAACqN,UAAf,KAA8B,UAAlC,EAA8C;AAC1C,YAAM,IAAIjQ,SAAJ,CAAc,8BAAd,CAAN;AACH;;AACD,QAAI,OAAO4C,OAAO,CAACsN,QAAf,KAA4B,UAAhC,EAA4C;AACxC,YAAM,IAAIlQ,SAAJ,CAAc,4BAAd,CAAN;AACH;;AACD,QAAI,OAAO4C,OAAO,CAACuN,OAAf,KAA2B,UAA/B,EAA2C;AACvC,YAAM,IAAInQ,SAAJ,CAAc,2BAAd,CAAN;AACH;;AACD,QAAI,OAAO4C,OAAO,CAACwN,UAAf,KAA8B,UAAlC,EAA8C;AAC1C,YAAM,IAAIpQ,SAAJ,CAAc,8BAAd,CAAN;AACH;;AACD,QAAI,OAAO4C,OAAO,CAACyN,OAAf,KAA2B,UAA/B,EAA2C;AACvC,YAAM,IAAIrQ,SAAJ,CAAc,2BAAd,CAAN;AACH;;AACD,QAAI,OAAO4C,OAAO,CAAC0N,MAAf,KAA0B,UAA9B,EAA0C;AACtC,YAAM,IAAItQ,SAAJ,CAAc,0BAAd,CAAN;AACH;;AACD,QAAI,OAAO4C,OAAO,CAACtE,KAAf,KAAyB,QAAzB,IAAqC,EAAEsE,OAAO,CAACtE,KAAR,YAAyBJ,KAA3B,CAAzC,EAA4E;AACxE,YAAM,IAAI8B,SAAJ,CAAc,sEAAd,CAAN;AACH,KA9EgB,CAgFjB;;;AACAsD,QAAI,CAACqM,QAAL,GAAgB/M,OAAO,CAAC+M,QAAxB;AACArM,QAAI,CAACsM,QAAL,GAAgBtF,UAAU,CAAC1H,OAAO,CAACgN,QAAT,CAA1B;AACAtM,QAAI,CAACuM,SAAL,GAAiBxM,QAAQ,CAACT,OAAO,CAACiN,SAAT,CAAzB;AACAvM,QAAI,CAACwM,YAAL,GAAoBzM,QAAQ,CAACT,OAAO,CAACkN,YAAT,CAA5B;AACAxM,QAAI,CAACyM,QAAL,GAAgB1M,QAAQ,CAACT,OAAO,CAACmN,QAAT,CAAxB;AACAzM,QAAI,CAACiN,UAAL,GAAkBlN,QAAQ,CAACT,OAAO,CAAC2N,UAAT,CAA1B;AACAjN,QAAI,CAACkN,aAAL,GAAqBnN,QAAQ,CAACT,OAAO,CAAC4N,aAAT,CAA7B;AACAlN,QAAI,CAAC0M,OAAL,GAAepN,OAAO,CAACoN,OAAvB;AACA1M,QAAI,CAAC2M,UAAL,GAAkBrN,OAAO,CAACqN,UAA1B;AACA3M,QAAI,CAAC4M,QAAL,GAAgBtN,OAAO,CAACsN,QAAxB;AACA5M,QAAI,CAAC6M,OAAL,GAAevN,OAAO,CAACuN,OAAvB;AACA7M,QAAI,CAAC8M,UAAL,GAAkBxN,OAAO,CAACwN,UAA1B;AACA9M,QAAI,CAAC+M,OAAL,GAAezN,OAAO,CAACyN,OAAvB;AACA/M,QAAI,CAACgN,MAAL,GAAc1N,OAAO,CAAC0N,MAAtB,CA9FiB,CAgGjB;;AACA,QAAIhS,KAAK,GAAGsE,OAAO,CAACtE,KAApB;AACA,QAAI0P,IAAI,GAAGpL,OAAO,CAACoL,IAAnB;AACA,QAAI4C,cAAc,GAAG,GAArB;AACA,QAAIzR,IAAI,GAAGyD,OAAO,CAACzD,IAAnB;AACA,QAAIqB,MAAM,GAAG,IAAb;AACA,QAAIqQ,MAAM,GAAG,CAAb;AACA,QAAIC,MAAM,GAAG,CAAb;AACA,QAAItF,KAAK,GAAGwC,IAAI,CAAChK,IAAjB;AACA,QAAI+M,KAAK,GAAG,CAAZ;AACA,QAAIC,OAAO,GAAG,IAAd;AACA,QAAIxL,KAAK,GAAG,IAAZ;AACA,QAAIwB,QAAQ,GAAG,KAAf;AACA,QAAIC,SAAS,GAAG,KAAhB;AAEA,QAAIgK,KAAK,GAAG,IAAZ;AACA,QAAIC,KAAK,GAAG,IAAZ;AAEA,QAAIC,WAAW,GAAG,CAAlB;AACA,QAAIC,SAAS,GAAG,CAAhB,CAnHiB,CAqHjB;;AACA,QAAI9S,KAAK,YAAYJ,KAArB,EAA4B;AACxBI,WAAK,GAAGA,KAAK,CAAC2B,OAAN,EAAR;AACH,KAxHgB,CA0HjB;;;AACAd,QAAI,CAACb,KAAL,GAAaA,KAAb;;AAEA,aAAS+S,MAAT,GAAkB;AACd;AACA1T,YAAM,CAACmD,IAAP,CAAY,aAAZ,EAA2BN,MAA3B,EAAmClC,KAAnC,EAA0CkH,KAA1C,EAAiD,UAAUR,GAAV,EAAesM,YAAf,EAA6B;AAC1E,YAAItM,GAAJ,EAAS;AACL1B,cAAI,CAAC6M,OAAL,CAAanL,GAAb,EAAkB7F,IAAlB;AACAmE,cAAI,CAACiO,KAAL;AACH,SAHD,MAIK,IAAID,YAAJ,EAAkB;AACnBrK,mBAAS,GAAG,KAAZ;AACAD,kBAAQ,GAAG,IAAX;AACA7H,cAAI,GAAGmS,YAAP;AACAhO,cAAI,CAAC2M,UAAL,CAAgBqB,YAAhB;AACH;AACJ,OAXD;AAYH;AAED;;;;;AAGAhO,QAAI,CAACiO,KAAL,GAAa,YAAY;AACrB;AACA5T,YAAM,CAACmD,IAAP,CAAY,WAAZ,EAAyBN,MAAzB,EAAiClC,KAAjC,EAAwCkH,KAAxC,EAA+C,UAAUR,GAAV,EAAeD,MAAf,EAAuB;AAClE,YAAIC,GAAJ,EAAS;AACL1B,cAAI,CAAC6M,OAAL,CAAanL,GAAb,EAAkB7F,IAAlB;AACH;AACJ,OAJD,EAFqB,CAQrB;;AACA8H,eAAS,GAAG,KAAZ;AACAzG,YAAM,GAAG,IAAT;AACAqQ,YAAM,GAAG,CAAT;AACAE,WAAK,GAAG,CAAR;AACAD,YAAM,GAAG,CAAT;AACA9J,cAAQ,GAAG,KAAX;AACAoK,eAAS,GAAG,IAAZ;AACA9N,UAAI,CAAC0M,OAAL,CAAa7Q,IAAb;AACH,KAjBD;AAmBA;;;;;;AAIAmE,QAAI,CAACkO,eAAL,GAAuB,YAAY;AAC/B,UAAIC,OAAO,GAAGnO,IAAI,CAACoO,cAAL,KAAwB,IAAtC;AACA,aAAOpO,IAAI,CAACqO,SAAL,KAAmBF,OAA1B;AACH,KAHD;AAKA;;;;;;AAIAnO,QAAI,CAACoO,cAAL,GAAsB,YAAY;AAC9B,UAAIN,SAAS,IAAI9N,IAAI,CAACsO,WAAL,EAAjB,EAAqC;AACjC,eAAOT,WAAW,IAAIhG,IAAI,CAAC0G,GAAL,KAAaT,SAAjB,CAAlB;AACH;;AACD,aAAOD,WAAP;AACH,KALD;AAOA;;;;;;AAIA7N,QAAI,CAACwO,OAAL,GAAe,YAAY;AACvB,aAAO3S,IAAP;AACH,KAFD;AAIA;;;;;;AAIAmE,QAAI,CAACqO,SAAL,GAAiB,YAAY;AACzB,aAAOb,MAAP;AACH,KAFD;AAIA;;;;;;AAIAxN,QAAI,CAACyO,WAAL,GAAmB,YAAY;AAC3B,aAAOvH,IAAI,CAACC,GAAL,CAAUqG,MAAM,GAAGtF,KAAV,GAAmB,GAAnB,GAAyB,GAAlC,EAAuC,GAAvC,CAAP;AACH,KAFD;AAIA;;;;;;AAIAlI,QAAI,CAAC0O,gBAAL,GAAwB,YAAY;AAChC,UAAIC,YAAY,GAAG3O,IAAI,CAACkO,eAAL,EAAnB;AACA,UAAIU,cAAc,GAAG1G,KAAK,GAAGlI,IAAI,CAACqO,SAAL,EAA7B;AACA,aAAOM,YAAY,IAAIC,cAAhB,GAAiC1H,IAAI,CAAC2H,GAAL,CAASD,cAAc,GAAGD,YAA1B,EAAwC,CAAxC,CAAjC,GAA8E,CAArF;AACH,KAJD;AAMA;;;;;;AAIA3O,QAAI,CAAC8O,QAAL,GAAgB,YAAY;AACxB,UAAInB,KAAK,IAAIC,KAAT,IAAkB5N,IAAI,CAACsO,WAAL,EAAtB,EAA0C;AACtC,YAAIH,OAAO,GAAG,CAACP,KAAK,GAAGD,KAAT,IAAkB,IAAhC;AACA,eAAO3N,IAAI,CAACuM,SAAL,GAAiB4B,OAAxB;AACH;;AACD,aAAO,CAAP;AACH,KAND;AAQA;;;;;;AAIAnO,QAAI,CAAC+O,QAAL,GAAgB,YAAY;AACxB,aAAO7G,KAAP;AACH,KAFD;AAIA;;;;;;AAIAlI,QAAI,CAACgP,UAAL,GAAkB,YAAY;AAC1B,aAAOtL,QAAP;AACH,KAFD;AAIA;;;;;;AAIA1D,QAAI,CAACsO,WAAL,GAAmB,YAAY;AAC3B,aAAO3K,SAAP;AACH,KAFD;AAIA;;;;;;;;;AAOA3D,QAAI,CAACiP,SAAL,GAAiB,UAAU3G,KAAV,EAAiBxJ,MAAjB,EAAyBvB,QAAzB,EAAmC;AAChD,UAAI,OAAOA,QAAP,IAAmB,UAAvB,EAAmC;AAC/B,cAAM,IAAIkD,KAAJ,CAAU,+BAAV,CAAN;AACH;;AACD,UAAI;AACA,YAAImG,GAAJ,CADA,CAGA;;AACA,YAAI9H,MAAM,IAAIwJ,KAAK,GAAGxJ,MAAR,GAAiBoJ,KAA/B,EAAsC;AAClCtB,aAAG,GAAGsB,KAAN;AACH,SAFD,MAEO;AACHtB,aAAG,GAAG0B,KAAK,GAAGxJ,MAAd;AACH,SARD,CASA;;;AACA,YAAIsI,KAAK,GAAGsD,IAAI,CAACwE,KAAL,CAAW5G,KAAX,EAAkB1B,GAAlB,CAAZ,CAVA,CAWA;;AACArJ,gBAAQ,CAACC,IAAT,CAAcwC,IAAd,EAAoB,IAApB,EAA0BoH,KAA1B;AAEH,OAdD,CAcE,OAAO1F,GAAP,EAAY;AACV/D,eAAO,CAACC,KAAR,CAAc,YAAd,EAA4B8D,GAA5B,EADU,CAEV;;AACArH,cAAM,CAAC8U,UAAP,CAAkB,YAAY;AAC1B,cAAI1B,KAAK,GAAGzN,IAAI,CAACyM,QAAjB,EAA2B;AACvBgB,iBAAK,IAAI,CAAT;AACAzN,gBAAI,CAACiP,SAAL,CAAe3G,KAAf,EAAsBxJ,MAAtB,EAA8BvB,QAA9B;AACH;AACJ,SALD,EAKGyC,IAAI,CAACiN,UALR;AAMH;AACJ,KA5BD;AA8BA;;;;;AAGAjN,QAAI,CAACoP,SAAL,GAAiB,YAAY;AACzB,UAAI,CAAC1L,QAAD,IAAaoK,SAAS,KAAK,IAA/B,EAAqC;AACjC,YAAIP,MAAM,GAAGrF,KAAb,EAAoB;AAChB,cAAIqE,SAAS,GAAGvM,IAAI,CAACuM,SAArB,CADgB,CAGhB;;AACA,cAAIvM,IAAI,CAACqM,QAAL,IAAiBsB,KAAjB,IAA0BC,KAA1B,IAAmCA,KAAK,GAAGD,KAA/C,EAAsD;AAClD,gBAAI0B,QAAQ,GAAG,CAACzB,KAAK,GAAGD,KAAT,IAAkB,IAAjC;AACA,gBAAIkB,GAAG,GAAG7O,IAAI,CAACsM,QAAL,IAAiB,IAAIgB,cAArB,CAAV;AACA,gBAAInG,GAAG,GAAGnH,IAAI,CAACsM,QAAL,IAAiB,IAAIgB,cAArB,CAAV;;AAEA,gBAAI+B,QAAQ,IAAIR,GAAhB,EAAqB;AACjBtC,uBAAS,GAAGrF,IAAI,CAACoI,GAAL,CAASpI,IAAI,CAACmE,KAAL,CAAWkB,SAAS,IAAIsC,GAAG,GAAGQ,QAAV,CAApB,CAAT,CAAZ;AAEH,aAHD,MAGO,IAAIA,QAAQ,GAAGlI,GAAf,EAAoB;AACvBoF,uBAAS,GAAGrF,IAAI,CAACmE,KAAL,CAAWkB,SAAS,IAAIpF,GAAG,GAAGkI,QAAV,CAApB,CAAZ;AACH,aAViD,CAWlD;;;AACA,gBAAIrP,IAAI,CAACwM,YAAL,GAAoB,CAApB,IAAyBD,SAAS,GAAGvM,IAAI,CAACwM,YAA9C,EAA4D;AACxDD,uBAAS,GAAGvM,IAAI,CAACwM,YAAjB;AACH;AACJ,WAnBe,CAqBhB;;;AACA,cAAIxM,IAAI,CAACwM,YAAL,GAAoB,CAApB,IAAyBD,SAAS,GAAGvM,IAAI,CAACwM,YAA9C,EAA4D;AACxDD,qBAAS,GAAGvM,IAAI,CAACwM,YAAjB;AACH,WAxBe,CA0BhB;;;AACA,cAAIe,MAAM,GAAGhB,SAAT,GAAqBrE,KAAzB,EAAgC;AAC5BqE,qBAAS,GAAGrE,KAAK,GAAGqF,MAApB;AACH,WA7Be,CA+BhB;;;AACAvN,cAAI,CAACiP,SAAL,CAAe1B,MAAf,EAAuBhB,SAAvB,EAAkC,UAAU7K,GAAV,EAAe0F,KAAf,EAAsB;AACpD,gBAAI1F,GAAJ,EAAS;AACL1B,kBAAI,CAAC6M,OAAL,CAAanL,GAAb,EAAkB7F,IAAlB;AACA;AACH;;AAED,gBAAI0T,GAAG,GAAG,IAAIC,cAAJ,EAAV;;AACAD,eAAG,CAACE,kBAAJ,GAAyB,YAAY;AACjC,kBAAIF,GAAG,CAACG,UAAJ,KAAmB,CAAvB,EAA0B;AACtB,oBAAIxV,CAAC,CAAC4G,QAAF,CAAW,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAAX,EAAiCyO,GAAG,CAAC7H,MAArC,CAAJ,EAAkD;AAC9CkG,uBAAK,GAAG/F,IAAI,CAAC0G,GAAL,EAAR;AACAhB,wBAAM,IAAIhB,SAAV;AACAiB,wBAAM,IAAIjB,SAAV,CAH8C,CAK9C;;AACAvM,sBAAI,CAAC8M,UAAL,CAAgBjR,IAAhB,EAAsBmE,IAAI,CAACyO,WAAL,EAAtB,EAN8C,CAQ9C;;AACA,sBAAIjB,MAAM,IAAItF,KAAd,EAAqB;AACjB2F,+BAAW,GAAGhG,IAAI,CAAC0G,GAAL,KAAaT,SAA3B;AACAC,0BAAM;AACT,mBAHD,MAGO;AACH1T,0BAAM,CAAC8U,UAAP,CAAkBnP,IAAI,CAACoP,SAAvB,EAAkCpP,IAAI,CAACkN,aAAvC;AACH;AACJ,iBAfD,MAgBK,IAAI,CAAChT,CAAC,CAAC4G,QAAF,CAAW,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAAX,EAAiCyO,GAAG,CAAC7H,MAArC,CAAL,EAAmD;AACpD;AACA;AACA,sBAAI+F,KAAK,IAAIzN,IAAI,CAACyM,QAAlB,EAA4B;AACxBgB,yBAAK,IAAI,CAAT,CADwB,CAExB;;AACApT,0BAAM,CAAC8U,UAAP,CAAkBnP,IAAI,CAACoP,SAAvB,EAAkCpP,IAAI,CAACiN,UAAvC;AACH,mBAJD,MAIO;AACHjN,wBAAI,CAACiO,KAAL;AACH;AACJ,iBAVI,MAWA;AACDjO,sBAAI,CAACiO,KAAL;AACH;AACJ;AACJ,aAjCD,CAPoD,CA0CpD;;;AACA,gBAAInK,QAAQ,GAAG,CAACyJ,MAAM,GAAGhB,SAAV,IAAuBrE,KAAtC,CA3CoD,CA4CpD;AACA;AACA;;AACA,gBAAI5K,GAAG,aAAMoQ,OAAN,uBAA0B5J,QAA1B,CAAP;AAEA6J,iBAAK,GAAG9F,IAAI,CAAC0G,GAAL,EAAR;AACAX,iBAAK,GAAG,IAAR;AACAjK,qBAAS,GAAG,IAAZ,CAnDoD,CAqDpD;;AACA4L,eAAG,CAACI,IAAJ,CAAS,MAAT,EAAiBrS,GAAjB,EAAsB,IAAtB;AACAiS,eAAG,CAACK,IAAJ,CAASxI,KAAT;AACH,WAxDD;AAyDH;AACJ;AACJ,KA7FD;AA+FA;;;;;AAGApH,QAAI,CAACsI,KAAL,GAAa,YAAY;AACrB,UAAI,CAACpL,MAAL,EAAa;AACT;AACA;AACA7C,cAAM,CAACmD,IAAP,CAAY,WAAZ,EAAyBtD,CAAC,CAACqF,MAAF,CAAS,EAAT,EAAa1D,IAAb,CAAzB,EAA6C,UAAU6F,GAAV,EAAeD,MAAf,EAAuB;AAChE,cAAIC,GAAJ,EAAS;AACL1B,gBAAI,CAAC6M,OAAL,CAAanL,GAAb,EAAkB7F,IAAlB;AACH,WAFD,MAEO,IAAI4F,MAAJ,EAAY;AACfS,iBAAK,GAAGT,MAAM,CAACS,KAAf;AACAwL,mBAAO,GAAGjM,MAAM,CAACnE,GAAjB;AACAJ,kBAAM,GAAGuE,MAAM,CAACvE,MAAhB;AACArB,gBAAI,CAACF,GAAL,GAAW8F,MAAM,CAACvE,MAAlB;AACA8C,gBAAI,CAAC4M,QAAL,CAAc/Q,IAAd;AACA4R,iBAAK,GAAG,CAAR;AACAK,qBAAS,GAAGjG,IAAI,CAAC0G,GAAL,EAAZ;AACAvO,gBAAI,CAAC+M,OAAL,CAAalR,IAAb;AACAmE,gBAAI,CAACoP,SAAL;AACH;AACJ,SAdD;AAeH,OAlBD,MAkBO,IAAI,CAACzL,SAAD,IAAc,CAACD,QAAnB,EAA6B;AAChC;AACA+J,aAAK,GAAG,CAAR;AACAK,iBAAS,GAAGjG,IAAI,CAAC0G,GAAL,EAAZ;AACAvO,YAAI,CAAC+M,OAAL,CAAalR,IAAb;AACAmE,YAAI,CAACoP,SAAL;AACH;AACJ,KA1BD;AA4BA;;;;;AAGApP,QAAI,CAAC6P,IAAL,GAAY,YAAY;AACpB,UAAIlM,SAAJ,EAAe;AACX;AACAkK,mBAAW,GAAGhG,IAAI,CAAC0G,GAAL,KAAaT,SAA3B;AACAA,iBAAS,GAAG,IAAZ;AACAnK,iBAAS,GAAG,KAAZ;AACA3D,YAAI,CAACgN,MAAL,CAAYnR,IAAZ;AAEAxB,cAAM,CAACmD,IAAP,CAAY,SAAZ,EAAuBN,MAAvB,EAA+BlC,KAA/B,EAAsCkH,KAAtC,EAA6C,UAAUR,GAAV,EAAeD,MAAf,EAAuB;AAChE,cAAIC,GAAJ,EAAS;AACL1B,gBAAI,CAAC6M,OAAL,CAAanL,GAAb,EAAkB7F,IAAlB;AACH;AACJ,SAJD;AAKH;AACJ,KAdD;AAeH;AAED;;;;;;AAIA6Q,SAAO,CAAC7Q,IAAD,EAAO,CACb;AAED;;;;;;AAIA8Q,YAAU,CAAC9Q,IAAD,EAAO,CAChB;AAED;;;;;;AAIA+Q,UAAQ,CAAC/Q,IAAD,EAAO,CACd;AAED;;;;;;;AAKAgR,SAAO,CAACnL,GAAD,EAAM7F,IAAN,EAAY;AACf8B,WAAO,CAACC,KAAR,gBAAsB8D,GAAG,CAACe,OAA1B;AACH;AAED;;;;;;;AAKAqK,YAAU,CAACjR,IAAD,EAAOiI,QAAP,EAAiB,CAC1B;AAED;;;;;;AAIAiJ,SAAO,CAAClR,IAAD,EAAO,CACb;AAED;;;;;;AAIAmR,QAAM,CAACnR,IAAD,EAAO,CACZ;;AA3eiB,C","file":"/packages/jalik_ufs.js","sourcesContent":["/*\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2017 Karl STEIN\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n *\r\n */\r\nimport {_} from \"meteor/underscore\";\r\nimport {Meteor} from \"meteor/meteor\";\r\nimport {Mongo} from \"meteor/mongo\";\r\nimport {MIME} from \"./ufs-mime\";\r\nimport {Random} from \"meteor/random\";\r\nimport {Tokens} from \"./ufs-tokens\";\r\nimport {Config} from \"./ufs-config\";\r\nimport {Filter} from \"./ufs-filter\";\r\nimport {Store} from \"./ufs-store\";\r\nimport {StorePermissions} from \"./ufs-store-permissions\";\r\nimport {Uploader} from \"./ufs-uploader\";\r\n\r\n\r\nlet stores = {};\r\n\r\nexport const UploadFS = {\r\n\r\n    /**\r\n     * Contains all stores\r\n     */\r\n    store: {},\r\n\r\n    /**\r\n     * Collection of tokens\r\n     */\r\n    tokens: Tokens,\r\n\r\n    /**\r\n     * Adds the \"etag\" attribute to files\r\n     * @param where\r\n     */\r\n    addETagAttributeToFiles(where) {\r\n        _.each(this.getStores(), (store) => {\r\n            const files = store.getCollection();\r\n\r\n            // By default update only files with no path set\r\n            files.find(where || {etag: null}, {fields: {_id: 1}}).forEach((file) => {\r\n                files.direct.update(file._id, {$set: {etag: this.generateEtag()}});\r\n            });\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Adds the MIME type for an extension\r\n     * @param extension\r\n     * @param mime\r\n     */\r\n    addMimeType(extension, mime) {\r\n        MIME[extension.toLowerCase()] = mime;\r\n    },\r\n\r\n    /**\r\n     * Adds the \"path\" attribute to files\r\n     * @param where\r\n     */\r\n    addPathAttributeToFiles(where) {\r\n        _.each(this.getStores(), (store) => {\r\n            const files = store.getCollection();\r\n\r\n            // By default update only files with no path set\r\n            files.find(where || {path: null}, {fields: {_id: 1}}).forEach((file) => {\r\n                files.direct.update(file._id, {$set: {path: store.getFileRelativeURL(file._id)}});\r\n            });\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Registers the store\r\n     * @param store\r\n     */\r\n    addStore(store) {\r\n        if (!(store instanceof Store)) {\r\n            throw new TypeError(`ufs: store is not an instance of UploadFS.Store.`);\r\n        }\r\n        stores[store.getName()] = store;\r\n    },\r\n\r\n    /**\r\n     * Generates a unique ETag\r\n     * @return {string}\r\n     */\r\n    generateEtag() {\r\n        return Random.id();\r\n    },\r\n\r\n    /**\r\n     * Returns the MIME type of the extension\r\n     * @param extension\r\n     * @returns {*}\r\n     */\r\n    getMimeType(extension) {\r\n        extension = extension.toLowerCase();\r\n        return MIME[extension];\r\n    },\r\n\r\n    /**\r\n     * Returns all MIME types\r\n     */\r\n    getMimeTypes() {\r\n        return MIME;\r\n    },\r\n\r\n    /**\r\n     * Returns the store by its name\r\n     * @param name\r\n     * @return {UploadFS.Store}\r\n     */\r\n    getStore(name) {\r\n        return stores[name];\r\n    },\r\n\r\n    /**\r\n     * Returns all stores\r\n     * @return {object}\r\n     */\r\n    getStores() {\r\n        return stores;\r\n    },\r\n\r\n    /**\r\n     * Returns the temporary file path\r\n     * @param fileId\r\n     * @return {string}\r\n     */\r\n    getTempFilePath(fileId) {\r\n        return `${this.config.tmpDir}/${fileId}`;\r\n    },\r\n\r\n    /**\r\n     * Imports a file from a URL\r\n     * @param url\r\n     * @param file\r\n     * @param store\r\n     * @param callback\r\n     */\r\n    importFromURL(url, file, store, callback) {\r\n        if (typeof store === 'string') {\r\n            Meteor.call('ufsImportURL', url, file, store, callback);\r\n        }\r\n        else if (typeof store === 'object') {\r\n            store.importFromURL(url, file, callback);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Returns file and data as ArrayBuffer for each files in the event\r\n     * @deprecated\r\n     * @param event\r\n     * @param callback\r\n     */\r\n    readAsArrayBuffer (event, callback) {\r\n        console.error('UploadFS.readAsArrayBuffer is deprecated, see https://github.com/jalik/jalik-ufs#uploading-from-a-file');\r\n    },\r\n\r\n    /**\r\n     * Opens a dialog to select a single file\r\n     * @param callback\r\n     */\r\n    selectFile(callback) {\r\n        const input = document.createElement('input');\r\n        input.type = 'file';\r\n        input.multiple = false;\r\n        input.onchange = (ev) => {\r\n            let files = ev.target.files;\r\n            callback.call(UploadFS, files[0]);\r\n        };\r\n        // Fix for iOS/Safari\r\n        const div = document.createElement('div');\r\n        div.className = 'ufs-file-selector';\r\n        div.style = 'display:none; height:0; width:0; overflow: hidden;';\r\n        div.appendChild(input);\r\n        document.body.appendChild(div);\r\n        // Trigger file selection\r\n        input.click();\r\n    },\r\n\r\n    /**\r\n     * Opens a dialog to select multiple files\r\n     * @param callback\r\n     */\r\n    selectFiles(callback) {\r\n        const input = document.createElement('input');\r\n        input.type = 'file';\r\n        input.multiple = true;\r\n        input.onchange = (ev) => {\r\n            const files = ev.target.files;\r\n\r\n            for (let i = 0; i < files.length; i += 1) {\r\n                callback.call(UploadFS, files[i]);\r\n            }\r\n        };\r\n        // Fix for iOS/Safari\r\n        const div = document.createElement('div');\r\n        div.className = 'ufs-file-selector';\r\n        div.style = 'display:none; height:0; width:0; overflow: hidden;';\r\n        div.appendChild(input);\r\n        document.body.appendChild(div);\r\n        // Trigger file selection\r\n        input.click();\r\n    }\r\n};\r\n\r\n\r\nif (Meteor.isClient) {\r\n    require('./ufs-template-helpers');\r\n}\r\nif (Meteor.isServer) {\r\n    require('./ufs-methods');\r\n    require('./ufs-server');\r\n}\r\n\r\n/**\r\n * UploadFS Configuration\r\n * @type {Config}\r\n */\r\nUploadFS.config = new Config();\r\n\r\n// Add classes to global namespace\r\nUploadFS.Config = Config;\r\nUploadFS.Filter = Filter;\r\nUploadFS.Store = Store;\r\nUploadFS.StorePermissions = StorePermissions;\r\nUploadFS.Uploader = Uploader;\r\n\r\nif (Meteor.isServer) {\r\n    // Expose the module globally\r\n    if (typeof global !== 'undefined') {\r\n        global['UploadFS'] = UploadFS;\r\n    }\r\n}\r\nelse if (Meteor.isClient) {\r\n    // Expose the module globally\r\n    if (typeof window !== 'undefined') {\r\n        window.UploadFS = UploadFS;\r\n    }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2017 Karl STEIN\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n *\r\n */\r\n\r\nimport {_} from 'meteor/underscore';\r\nimport {Meteor} from 'meteor/meteor';\r\nimport {StorePermissions} from './ufs-store-permissions';\r\n\r\n\r\n/**\r\n * UploadFS configuration\r\n */\r\nexport class Config {\r\n\r\n    constructor(options) {\r\n        // Default options\r\n        options = _.extend({\r\n            defaultStorePermissions: null,\r\n            https: false,\r\n            simulateReadDelay: 0,\r\n            simulateUploadSpeed: 0,\r\n            simulateWriteDelay: 0,\r\n            storesPath: 'ufs',\r\n            tmpDir: '/tmp/ufs',\r\n            tmpDirPermissions: '0700'\r\n        }, options);\r\n\r\n        // Check options\r\n        if (options.defaultStorePermissions && !(options.defaultStorePermissions instanceof StorePermissions)) {\r\n            throw new TypeError('Config: defaultStorePermissions is not an instance of StorePermissions');\r\n        }\r\n        if (typeof options.https !== 'boolean') {\r\n            throw new TypeError('Config: https is not a function');\r\n        }\r\n        if (typeof options.simulateReadDelay !== 'number') {\r\n            throw new TypeError('Config: simulateReadDelay is not a number');\r\n        }\r\n        if (typeof options.simulateUploadSpeed !== 'number') {\r\n            throw new TypeError('Config: simulateUploadSpeed is not a number');\r\n        }\r\n        if (typeof options.simulateWriteDelay !== 'number') {\r\n            throw new TypeError('Config: simulateWriteDelay is not a number');\r\n        }\r\n        if (typeof options.storesPath !== 'string') {\r\n            throw new TypeError('Config: storesPath is not a string');\r\n        }\r\n        if (typeof options.tmpDir !== 'string') {\r\n            throw new TypeError('Config: tmpDir is not a string');\r\n        }\r\n        if (typeof options.tmpDirPermissions !== 'string') {\r\n            throw new TypeError('Config: tmpDirPermissions is not a string');\r\n        }\r\n\r\n        /**\r\n         * Default store permissions\r\n         * @type {UploadFS.StorePermissions}\r\n         */\r\n        this.defaultStorePermissions = options.defaultStorePermissions;\r\n        /**\r\n         * Use or not secured protocol in URLS\r\n         * @type {boolean}\r\n         */\r\n        this.https = options.https;\r\n        /**\r\n         * The simulation read delay\r\n         * @type {Number}\r\n         */\r\n        this.simulateReadDelay = parseInt(options.simulateReadDelay);\r\n        /**\r\n         * The simulation upload speed\r\n         * @type {Number}\r\n         */\r\n        this.simulateUploadSpeed = parseInt(options.simulateUploadSpeed);\r\n        /**\r\n         * The simulation write delay\r\n         * @type {Number}\r\n         */\r\n        this.simulateWriteDelay = parseInt(options.simulateWriteDelay);\r\n        /**\r\n         * The URL root path of stores\r\n         * @type {string}\r\n         */\r\n        this.storesPath = options.storesPath;\r\n        /**\r\n         * The temporary directory of uploading files\r\n         * @type {string}\r\n         */\r\n        this.tmpDir = options.tmpDir;\r\n        /**\r\n         * The permissions of the temporary directory\r\n         * @type {string}\r\n         */\r\n        this.tmpDirPermissions = options.tmpDirPermissions;\r\n    }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2017 Karl STEIN\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n *\r\n */\r\nimport {_} from \"meteor/underscore\";\r\nimport {Meteor} from \"meteor/meteor\";\r\n\r\n\r\n/**\r\n * File filter\r\n */\r\nexport class Filter {\r\n\r\n    constructor(options) {\r\n        const self = this;\r\n\r\n        // Default options\r\n        options = _.extend({\r\n            contentTypes: null,\r\n            extensions: null,\r\n            minSize: 1,\r\n            maxSize: 0,\r\n            onCheck: this.onCheck\r\n        }, options);\r\n\r\n        // Check options\r\n        if (options.contentTypes && !(options.contentTypes instanceof Array)) {\r\n            throw new TypeError(\"Filter: contentTypes is not an Array\");\r\n        }\r\n        if (options.extensions && !(options.extensions instanceof Array)) {\r\n            throw new TypeError(\"Filter: extensions is not an Array\");\r\n        }\r\n        if (typeof options.minSize !== \"number\") {\r\n            throw new TypeError(\"Filter: minSize is not a number\");\r\n        }\r\n        if (typeof options.maxSize !== \"number\") {\r\n            throw new TypeError(\"Filter: maxSize is not a number\");\r\n        }\r\n        if (options.onCheck && typeof options.onCheck !== \"function\") {\r\n            throw new TypeError(\"Filter: onCheck is not a function\");\r\n        }\r\n\r\n        // Public attributes\r\n        self.options = options;\r\n        _.each([\r\n            'onCheck'\r\n        ], (method) => {\r\n            if (typeof options[method] === 'function') {\r\n                self[method] = options[method];\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Checks the file\r\n     * @param file\r\n     */\r\n    check(file) {\r\n        if (typeof file !== \"object\" || !file) {\r\n            throw new Meteor.Error('invalid-file', \"File is not valid\");\r\n        }\r\n        // Check size\r\n        if (file.size <= 0 || file.size < this.getMinSize()) {\r\n            throw new Meteor.Error('file-too-small', `File size is too small (min = ${this.getMinSize()})`);\r\n        }\r\n        if (this.getMaxSize() > 0 && file.size > this.getMaxSize()) {\r\n            throw new Meteor.Error('file-too-large', `File size is too large (max = ${this.getMaxSize()})`);\r\n        }\r\n        // Check extension\r\n        if (this.getExtensions() && !_.contains(this.getExtensions(), file.extension)) {\r\n            throw new Meteor.Error('invalid-file-extension', `File extension \"${file.extension}\" is not accepted`);\r\n        }\r\n        // Check content type\r\n        if (this.getContentTypes() && !this.isContentTypeInList(file.type, this.getContentTypes())) {\r\n            throw new Meteor.Error('invalid-file-type', `File type \"${file.type}\" is not accepted`);\r\n        }\r\n        // Apply custom check\r\n        if (typeof this.onCheck === 'function' && !this.onCheck(file)) {\r\n            throw new Meteor.Error('invalid-file', \"File does not match filter\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the allowed content types\r\n     * @return {Array}\r\n     */\r\n    getContentTypes() {\r\n        return this.options.contentTypes;\r\n    }\r\n\r\n    /**\r\n     * Returns the allowed extensions\r\n     * @return {Array}\r\n     */\r\n    getExtensions() {\r\n        return this.options.extensions;\r\n    }\r\n\r\n    /**\r\n     * Returns the maximum file size\r\n     * @return {Number}\r\n     */\r\n    getMaxSize() {\r\n        return this.options.maxSize;\r\n    }\r\n\r\n    /**\r\n     * Returns the minimum file size\r\n     * @return {Number}\r\n     */\r\n    getMinSize() {\r\n        return this.options.minSize;\r\n    }\r\n\r\n    /**\r\n     * Checks if content type is in the given list\r\n     * @param type\r\n     * @param list\r\n     * @return {boolean}\r\n     */\r\n    isContentTypeInList(type, list) {\r\n        if (typeof type === 'string' && list instanceof Array) {\r\n            if (_.contains(list, type)) {\r\n                return true;\r\n            } else {\r\n                let wildCardGlob = '/*';\r\n                let wildcards = _.filter(list, (item) => {\r\n                    return item.indexOf(wildCardGlob) > 0;\r\n                });\r\n\r\n                if (_.contains(wildcards, type.replace(/(\\/.*)$/, wildCardGlob))) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Checks if the file matches filter\r\n     * @param file\r\n     * @return {boolean}\r\n     */\r\n    isValid(file) {\r\n        let result = true;\r\n        try {\r\n            this.check(file);\r\n        } catch (err) {\r\n            result = false;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Executes custom checks\r\n     * @param file\r\n     * @return {boolean}\r\n     */\r\n    onCheck(file) {\r\n        return true;\r\n    }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2017 Karl STEIN\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n *\r\n */\r\n\r\nimport {_} from 'meteor/underscore';\r\nimport {check} from 'meteor/check';\r\nimport {Meteor} from 'meteor/meteor';\r\nimport {UploadFS} from './ufs';\r\nimport {Filter} from './ufs-filter';\r\nimport {Tokens} from './ufs-tokens';\r\n\r\nconst fs = Npm.require('fs');\r\nconst http = Npm.require('http');\r\nconst https = Npm.require('https');\r\nconst Future = Npm.require('fibers/future');\r\n\r\n\r\nif (Meteor.isServer) {\r\n    Meteor.methods({\r\n\r\n        /**\r\n         * Completes the file transfer\r\n         * @param fileId\r\n         * @param storeName\r\n         * @param token\r\n         */\r\n        ufsComplete(fileId, storeName, token) {\r\n            check(fileId, String);\r\n            check(storeName, String);\r\n            check(token, String);\r\n\r\n            // Get store\r\n            let store = UploadFS.getStore(storeName);\r\n            if (!store) {\r\n                throw new Meteor.Error('invalid-store', \"Store not found\");\r\n            }\r\n            // Check token\r\n            if (!store.checkToken(token, fileId)) {\r\n                throw new Meteor.Error('invalid-token', \"Token is not valid\");\r\n            }\r\n\r\n            let fut = new Future();\r\n            let tmpFile = UploadFS.getTempFilePath(fileId);\r\n\r\n            const removeTempFile = function () {\r\n                fs.unlink(tmpFile, function (err) {\r\n                    err && console.error(`ufs: cannot delete temp file \"${tmpFile}\" (${err.message})`);\r\n                });\r\n            };\r\n\r\n            try {\r\n                // todo check if temp file exists\r\n\r\n                // Get file\r\n                let file = store.getCollection().findOne({_id: fileId});\r\n\r\n                // Validate file before moving to the store\r\n                store.validate(file);\r\n\r\n                // Get the temp file\r\n                let rs = fs.createReadStream(tmpFile, {\r\n                    flags: 'r',\r\n                    encoding: null,\r\n                    autoClose: true\r\n                });\r\n\r\n                // Clean upload if error occurs\r\n                rs.on('error', Meteor.bindEnvironment(function (err) {\r\n                    console.error(err);\r\n                    store.getCollection().remove({_id: fileId});\r\n                    fut.throw(err);\r\n                }));\r\n\r\n                // Save file in the store\r\n                store.write(rs, fileId, Meteor.bindEnvironment(function (err, file) {\r\n                    removeTempFile();\r\n\r\n                    if (err) {\r\n                        fut.throw(err);\r\n                    } else {\r\n                        // File has been fully uploaded\r\n                        // so we don't need to keep the token anymore.\r\n                        // Also this ensure that the file cannot be modified with extra chunks later.\r\n                        Tokens.remove({fileId: fileId});\r\n                        fut.return(file);\r\n                    }\r\n                }));\r\n            }\r\n            catch (err) {\r\n                // If write failed, remove the file\r\n                store.getCollection().remove({_id: fileId});\r\n                // removeTempFile(); // todo remove temp file on error or try again ?\r\n                fut.throw(err);\r\n            }\r\n            return fut.wait();\r\n        },\r\n\r\n        /**\r\n         * Creates the file and returns the file upload token\r\n         * @param file\r\n         * @return {{fileId: string, token: *, url: *}}\r\n         */\r\n        ufsCreate(file) {\r\n            check(file, Object);\r\n\r\n            if (typeof file.name !== 'string' || !file.name.length) {\r\n                throw new Meteor.Error('invalid-file-name', \"file name is not valid\");\r\n            }\r\n            if (typeof file.store !== 'string' || !file.store.length) {\r\n                throw new Meteor.Error('invalid-store', \"store is not valid\");\r\n            }\r\n            // Get store\r\n            let store = UploadFS.getStore(file.store);\r\n            if (!store) {\r\n                throw new Meteor.Error('invalid-store', \"Store not found\");\r\n            }\r\n\r\n            // Set default info\r\n            file.complete = false;\r\n            file.uploading = false;\r\n            file.extension = file.name && file.name.substr((~-file.name.lastIndexOf('.') >>> 0) + 2).toLowerCase();\r\n            // Assign file MIME type based on the extension\r\n            if (file.extension && !file.type) {\r\n                file.type = UploadFS.getMimeType(file.extension) || 'application/octet-stream';\r\n            }\r\n            file.progress = 0;\r\n            file.size = parseInt(file.size) || 0;\r\n            file.userId = file.userId || this.userId;\r\n\r\n            // Check if the file matches store filter\r\n            let filter = store.getFilter();\r\n            if (filter instanceof Filter) {\r\n                filter.check(file);\r\n            }\r\n\r\n            // Create the file\r\n            let fileId = store.create(file);\r\n            let token = store.createToken(fileId);\r\n            let uploadUrl = store.getURL(`${fileId}?token=${token}`);\r\n\r\n            return {\r\n                fileId: fileId,\r\n                token: token,\r\n                url: uploadUrl\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Deletes a file\r\n         * @param fileId\r\n         * @param storeName\r\n         * @param token\r\n         * @returns {*}\r\n         */\r\n        ufsDelete(fileId, storeName, token) {\r\n            check(fileId, String);\r\n            check(storeName, String);\r\n            check(token, String);\r\n\r\n            // Check store\r\n            let store = UploadFS.getStore(storeName);\r\n            if (!store) {\r\n                throw new Meteor.Error('invalid-store', \"Store not found\");\r\n            }\r\n            // Ignore files that does not exist\r\n            if (store.getCollection().find({_id: fileId}).count() === 0) {\r\n                return 1;\r\n            }\r\n            // Check token\r\n            if (!store.checkToken(token, fileId)) {\r\n                throw new Meteor.Error('invalid-token', \"Token is not valid\");\r\n            }\r\n            return store.getCollection().remove({_id: fileId});\r\n        },\r\n\r\n        /**\r\n         * Imports a file from the URL\r\n         * @param url\r\n         * @param file\r\n         * @param storeName\r\n         * @return {*}\r\n         */\r\n        ufsImportURL(url, file, storeName) {\r\n            check(url, String);\r\n            check(file, Object);\r\n            check(storeName, String);\r\n\r\n            // Check URL\r\n            if (typeof url !== 'string' || url.length <= 0) {\r\n                throw new Meteor.Error('invalid-url', \"The url is not valid\");\r\n            }\r\n            // Check file\r\n            if (typeof file !== 'object' || file === null) {\r\n                throw new Meteor.Error('invalid-file', \"The file is not valid\");\r\n            }\r\n            // Check store\r\n            const store = UploadFS.getStore(storeName);\r\n            if (!store) {\r\n                throw new Meteor.Error('invalid-store', 'The store does not exist');\r\n            }\r\n\r\n            // Extract file info\r\n            if (!file.name) {\r\n                file.name = url.replace(/\\?.*$/, '').split('/').pop();\r\n            }\r\n            if (file.name && !file.extension) {\r\n                file.extension = file.name && file.name.substr((~-file.name.lastIndexOf('.') >>> 0) + 2).toLowerCase();\r\n            }\r\n            if (file.extension && !file.type) {\r\n                // Assign file MIME type based on the extension\r\n                file.type = UploadFS.getMimeType(file.extension) || 'application/octet-stream';\r\n            }\r\n            // Check if file is valid\r\n            if (store.getFilter() instanceof Filter) {\r\n                store.getFilter().check(file);\r\n            }\r\n\r\n            if (file.originalUrl) {\r\n                console.warn(`ufs: The \"originalUrl\" attribute is automatically set when importing a file from a URL`);\r\n            }\r\n\r\n            // Add original URL\r\n            file.originalUrl = url;\r\n\r\n            // Create the file\r\n            file.complete = false;\r\n            file.uploading = true;\r\n            file.progress = 0;\r\n            file._id = store.create(file);\r\n\r\n            let fut = new Future();\r\n            let proto;\r\n\r\n            // Detect protocol to use\r\n            if (/http:\\/\\//i.test(url)) {\r\n                proto = http;\r\n            } else if (/https:\\/\\//i.test(url)) {\r\n                proto = https;\r\n            }\r\n\r\n            this.unblock();\r\n\r\n            // Download file\r\n            proto.get(url, Meteor.bindEnvironment(function (res) {\r\n                // Save the file in the store\r\n                store.write(res, file._id, function (err, file) {\r\n                    if (err) {\r\n                        fut.throw(err);\r\n                    } else {\r\n                        fut.return(file);\r\n                    }\r\n                });\r\n            })).on('error', function (err) {\r\n                fut.throw(err);\r\n            });\r\n            return fut.wait();\r\n        },\r\n\r\n        /**\r\n         * Marks the file uploading as stopped\r\n         * @param fileId\r\n         * @param storeName\r\n         * @param token\r\n         * @returns {*}\r\n         */\r\n        ufsStop(fileId, storeName, token) {\r\n            check(fileId, String);\r\n            check(storeName, String);\r\n            check(token, String);\r\n\r\n            // Check store\r\n            const store = UploadFS.getStore(storeName);\r\n            if (!store) {\r\n                throw new Meteor.Error('invalid-store', \"Store not found\");\r\n            }\r\n            // Check file\r\n            const file = store.getCollection().find({_id: fileId}, {fields: {userId: 1}});\r\n            if (!file) {\r\n                throw new Meteor.Error('invalid-file', \"File not found\");\r\n            }\r\n            // Check token\r\n            if (!store.checkToken(token, fileId)) {\r\n                throw new Meteor.Error('invalid-token', \"Token is not valid\");\r\n            }\r\n\r\n            return store.getCollection().update({_id: fileId}, {\r\n                $set: {uploading: false}\r\n            });\r\n        }\r\n    });\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2017 Karl STEIN\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n *\r\n */\r\n\r\n/**\r\n * MIME types and extensions\r\n */\r\nexport const MIME = {\r\n\r\n    // application\r\n    '7z': 'application/x-7z-compressed',\r\n    'arc': 'application/octet-stream',\r\n    'ai': 'application/postscript',\r\n    'bin': 'application/octet-stream',\r\n    'bz': 'application/x-bzip',\r\n    'bz2': 'application/x-bzip2',\r\n    'eps': 'application/postscript',\r\n    'exe': 'application/octet-stream',\r\n    'gz': 'application/x-gzip',\r\n    'gzip': 'application/x-gzip',\r\n    'js': 'application/javascript',\r\n    'json': 'application/json',\r\n    'ogx': 'application/ogg',\r\n    'pdf': 'application/pdf',\r\n    'ps': 'application/postscript',\r\n    'psd': 'application/octet-stream',\r\n    'rar': 'application/x-rar-compressed',\r\n    'rev': 'application/x-rar-compressed',\r\n    'swf': 'application/x-shockwave-flash',\r\n    'tar': 'application/x-tar',\r\n    'xhtml': 'application/xhtml+xml',\r\n    'xml': 'application/xml',\r\n    'zip': 'application/zip',\r\n\r\n    // audio\r\n    'aif': 'audio/aiff',\r\n    'aifc': 'audio/aiff',\r\n    'aiff': 'audio/aiff',\r\n    'au': 'audio/basic',\r\n    'flac': 'audio/flac',\r\n    'midi': 'audio/midi',\r\n    'mp2': 'audio/mpeg',\r\n    'mp3': 'audio/mpeg',\r\n    'mpa': 'audio/mpeg',\r\n    'oga': 'audio/ogg',\r\n    'ogg': 'audio/ogg',\r\n    'opus': 'audio/ogg',\r\n    'ra': 'audio/vnd.rn-realaudio',\r\n    'spx': 'audio/ogg',\r\n    'wav': 'audio/x-wav',\r\n    'weba': 'audio/webm',\r\n    'wma': 'audio/x-ms-wma',\r\n\r\n    // image\r\n    'avs': 'image/avs-video',\r\n    'bmp': 'image/x-windows-bmp',\r\n    'gif': 'image/gif',\r\n    'ico': 'image/vnd.microsoft.icon',\r\n    'jpeg': 'image/jpeg',\r\n    'jpg': 'image/jpg',\r\n    'mjpg': 'image/x-motion-jpeg',\r\n    'pic': 'image/pic',\r\n    'png': 'image/png',\r\n    'svg': 'image/svg+xml',\r\n    'tif': 'image/tiff',\r\n    'tiff': 'image/tiff',\r\n\r\n    // text\r\n    'css': 'text/css',\r\n    'csv': 'text/csv',\r\n    'html': 'text/html',\r\n    'txt': 'text/plain',\r\n\r\n    // video\r\n    'avi': 'video/avi',\r\n    'dv': 'video/x-dv',\r\n    'flv': 'video/x-flv',\r\n    'mov': 'video/quicktime',\r\n    'mp4': 'video/mp4',\r\n    'mpeg': 'video/mpeg',\r\n    'mpg': 'video/mpg',\r\n    'ogv': 'video/ogg',\r\n    'vdo': 'video/vdo',\r\n    'webm': 'video/webm',\r\n    'wmv': 'video/x-ms-wmv',\r\n\r\n    // specific to vendors\r\n    'doc': 'application/msword',\r\n    'docx': 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\r\n    'odb': 'application/vnd.oasis.opendocument.database',\r\n    'odc': 'application/vnd.oasis.opendocument.chart',\r\n    'odf': 'application/vnd.oasis.opendocument.formula',\r\n    'odg': 'application/vnd.oasis.opendocument.graphics',\r\n    'odi': 'application/vnd.oasis.opendocument.image',\r\n    'odm': 'application/vnd.oasis.opendocument.text-master',\r\n    'odp': 'application/vnd.oasis.opendocument.presentation',\r\n    'ods': 'application/vnd.oasis.opendocument.spreadsheet',\r\n    'odt': 'application/vnd.oasis.opendocument.text',\r\n    'otg': 'application/vnd.oasis.opendocument.graphics-template',\r\n    'otp': 'application/vnd.oasis.opendocument.presentation-template',\r\n    'ots': 'application/vnd.oasis.opendocument.spreadsheet-template',\r\n    'ott': 'application/vnd.oasis.opendocument.text-template',\r\n    'ppt': 'application/vnd.ms-powerpoint',\r\n    'pptx': 'application/vnd.openxmlformats-officedocument.presentationml.presentation',\r\n    'xls': 'application/vnd.ms-excel',\r\n    'xlsx': 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\r\n};\r\n","/*\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2017 Karl STEIN\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n *\r\n */\r\nimport {_} from \"meteor/underscore\";\r\nimport {Meteor} from \"meteor/meteor\";\r\nimport {WebApp} from \"meteor/webapp\";\r\nimport {UploadFS} from \"./ufs\";\r\n\r\n\r\nif (Meteor.isServer) {\r\n\r\n    const domain = Npm.require('domain');\r\n    const fs = Npm.require('fs');\r\n    const http = Npm.require('http');\r\n    const https = Npm.require('https');\r\n    const mkdirp = Npm.require('mkdirp');\r\n    const stream = Npm.require('stream');\r\n    const URL = Npm.require('url');\r\n    const zlib = Npm.require('zlib');\r\n\r\n\r\n    Meteor.startup(() => {\r\n        let path = UploadFS.config.tmpDir;\r\n        let mode = UploadFS.config.tmpDirPermissions;\r\n\r\n        fs.stat(path, (err) => {\r\n            if (err) {\r\n                // Create the temp directory\r\n                mkdirp(path, {mode: mode}, (err) => {\r\n                    if (err) {\r\n                        console.error(`ufs: cannot create temp directory at \"${path}\" (${err.message})`);\r\n                    } else {\r\n                        console.log(`ufs: temp directory created at \"${path}\"`);\r\n                    }\r\n                });\r\n            } else {\r\n                // Set directory permissions\r\n                fs.chmod(path, mode, (err) => {\r\n                    err && console.error(`ufs: cannot set temp directory permissions ${mode} (${err.message})`);\r\n                });\r\n            }\r\n        });\r\n    });\r\n\r\n    // Create domain to handle errors\r\n    // and possibly avoid server crashes.\r\n    let d = domain.create();\r\n\r\n    d.on('error', (err) => {\r\n        console.error('ufs: ' + err.message);\r\n    });\r\n\r\n    // Listen HTTP requests to serve files\r\n    WebApp.connectHandlers.use((req, res, next) => {\r\n        // Quick check to see if request should be catch\r\n        if (req.url.indexOf(UploadFS.config.storesPath) === -1) {\r\n            next();\r\n            return;\r\n        }\r\n\r\n        // Remove store path\r\n        let parsedUrl = URL.parse(req.url);\r\n        let path = parsedUrl.pathname.substr(UploadFS.config.storesPath.length + 1);\r\n\r\n        let allowCORS = () => {\r\n            // res.setHeader('Access-Control-Allow-Origin', req.headers.origin);\r\n            res.setHeader(\"Access-Control-Allow-Methods\", \"POST\");\r\n            res.setHeader(\"Access-Control-Allow-Origin\", \"*\");\r\n            res.setHeader(\"Access-Control-Allow-Headers\", \"Content-Type\");\r\n        };\r\n\r\n        if (req.method === \"OPTIONS\") {\r\n            let regExp = new RegExp('^\\/([^\\/\\?]+)\\/([^\\/\\?]+)$');\r\n            let match = regExp.exec(path);\r\n\r\n            // Request is not valid\r\n            if (match === null) {\r\n                res.writeHead(400);\r\n                res.end();\r\n                return;\r\n            }\r\n\r\n            // Get store\r\n            let store = UploadFS.getStore(match[1]);\r\n            if (!store) {\r\n                res.writeHead(404);\r\n                res.end();\r\n                return;\r\n            }\r\n\r\n            // If a store is found, go ahead and allow the origin\r\n            allowCORS();\r\n\r\n            next();\r\n        }\r\n        else if (req.method === 'POST') {\r\n            // Get store\r\n            let regExp = new RegExp('^\\/([^\\/\\?]+)\\/([^\\/\\?]+)$');\r\n            let match = regExp.exec(path);\r\n\r\n            // Request is not valid\r\n            if (match === null) {\r\n                res.writeHead(400);\r\n                res.end();\r\n                return;\r\n            }\r\n\r\n            // Get store\r\n            let store = UploadFS.getStore(match[1]);\r\n            if (!store) {\r\n                res.writeHead(404);\r\n                res.end();\r\n                return;\r\n            }\r\n\r\n            // If a store is found, go ahead and allow the origin\r\n            allowCORS();\r\n\r\n            // Get file\r\n            let fileId = match[2];\r\n            if (store.getCollection().find({_id: fileId}).count() === 0) {\r\n                res.writeHead(404);\r\n                res.end();\r\n                return;\r\n            }\r\n\r\n            // Check upload token\r\n            if (!store.checkToken(req.query.token, fileId)) {\r\n                res.writeHead(403);\r\n                res.end();\r\n                return;\r\n            }\r\n\r\n            let tmpFile = UploadFS.getTempFilePath(fileId);\r\n            let ws = fs.createWriteStream(tmpFile, {flags: 'a'});\r\n            let fields = {uploading: true};\r\n            let progress = parseFloat(req.query.progress);\r\n            if (!isNaN(progress) && progress > 0) {\r\n                fields.progress = Math.min(progress, 1);\r\n            }\r\n\r\n            req.on('data', (chunk) => {\r\n                ws.write(chunk);\r\n            });\r\n            req.on('error', (err) => {\r\n                res.writeHead(500);\r\n                res.end();\r\n            });\r\n            req.on('end', Meteor.bindEnvironment(() => {\r\n                // Update completed state without triggering hooks\r\n                store.getCollection().direct.update({_id: fileId}, {$set: fields});\r\n                ws.end();\r\n            }));\r\n            ws.on('error', (err) => {\r\n                console.error(`ufs: cannot write chunk of file \"${fileId}\" (${err.message})`);\r\n                fs.unlink(tmpFile, (err) => {\r\n                    err && console.error(`ufs: cannot delete temp file \"${tmpFile}\" (${err.message})`);\r\n                });\r\n                res.writeHead(500);\r\n                res.end();\r\n            });\r\n            ws.on('finish', () => {\r\n                res.writeHead(204, {\"Content-Type\": 'text/plain'});\r\n                res.end();\r\n            });\r\n        }\r\n        else if (req.method === 'GET') {\r\n            // Get store, file Id and file name\r\n            let regExp = new RegExp('^\\/([^\\/\\?]+)\\/([^\\/\\?]+)(?:\\/([^\\/\\?]+))?$');\r\n            let match = regExp.exec(path);\r\n\r\n            // Avoid 504 Gateway timeout error\r\n            // if file is not handled by UploadFS.\r\n            if (match === null) {\r\n                next();\r\n                return;\r\n            }\r\n\r\n            // Get store\r\n            const storeName = match[1];\r\n            const store = UploadFS.getStore(storeName);\r\n\r\n            if (!store) {\r\n                res.writeHead(404);\r\n                res.end();\r\n                return;\r\n            }\r\n\r\n            if (store.onRead !== null && store.onRead !== undefined && typeof store.onRead !== 'function') {\r\n                console.error(`ufs: Store.onRead is not a function in store \"${storeName}\"`);\r\n                res.writeHead(500);\r\n                res.end();\r\n                return;\r\n            }\r\n\r\n            // Remove file extension from file Id\r\n            let index = match[2].indexOf('.');\r\n            let fileId = index !== -1 ? match[2].substr(0, index) : match[2];\r\n\r\n            // Get file from database\r\n            const file = store.getCollection().findOne({_id: fileId});\r\n            if (!file) {\r\n                res.writeHead(404);\r\n                res.end();\r\n                return;\r\n            }\r\n\r\n            // Simulate read speed\r\n            if (UploadFS.config.simulateReadDelay) {\r\n                Meteor._sleepForMs(UploadFS.config.simulateReadDelay);\r\n            }\r\n\r\n            d.run(() => {\r\n                // Check if the file can be accessed\r\n                if (store.onRead.call(store, fileId, file, req, res) !== false) {\r\n                    let options = {};\r\n                    let status = 200;\r\n\r\n                    // Prepare response headers\r\n                    let headers = {\r\n                        'Content-Type': file.type,\r\n                        'Content-Length': file.size\r\n                    };\r\n\r\n                    // Add ETag header\r\n                    if (typeof file.etag === 'string') {\r\n                        headers['ETag'] = file.etag;\r\n                    }\r\n\r\n                    // Add Last-Modified header\r\n                    if (file.modifiedAt instanceof Date) {\r\n                        headers['Last-Modified'] = file.modifiedAt.toUTCString();\r\n                    }\r\n                    else if (file.uploadedAt instanceof Date) {\r\n                        headers['Last-Modified'] = file.uploadedAt.toUTCString();\r\n                    }\r\n\r\n                    // Parse request headers\r\n                    if (typeof req.headers === 'object') {\r\n\r\n                        // Compare ETag\r\n                        if (req.headers['if-none-match']) {\r\n                            if (file.etag === req.headers['if-none-match']) {\r\n                                res.writeHead(304); // Not Modified\r\n                                res.end();\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        // Compare file modification date\r\n                        if (req.headers['if-modified-since']) {\r\n                            const modifiedSince = new Date(req.headers['if-modified-since']);\r\n\r\n                            if ((file.modifiedAt instanceof Date && file.modifiedAt > modifiedSince)\r\n                                || file.uploadedAt instanceof Date && file.uploadedAt > modifiedSince) {\r\n                                res.writeHead(304); // Not Modified\r\n                                res.end();\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        // Support range request\r\n                        if (typeof req.headers.range === 'string') {\r\n                            const range = req.headers.range;\r\n\r\n                            // Range is not valid\r\n                            if (!range) {\r\n                                res.writeHead(416);\r\n                                res.end();\r\n                                return;\r\n                            }\r\n\r\n                            const total = file.size;\r\n                            const unit = range.substr(0, range.indexOf(\"=\"));\r\n\r\n                            if (unit !== \"bytes\") {\r\n                                res.writeHead(416);\r\n                                res.end();\r\n                                return;\r\n                            }\r\n\r\n                            const ranges = range.substr(unit.length).replace(/[^0-9\\-,]/, '').split(',');\r\n\r\n                            if (ranges.length > 1) {\r\n                                //todo: support multipart ranges: https://developer.mozilla.org/en-US/docs/Web/HTTP/Range_requests\r\n                            } else {\r\n                                const r = ranges[0].split(\"-\");\r\n                                const start = parseInt(r[0], 10);\r\n                                const end = r[1] ? parseInt(r[1], 10) : total - 1;\r\n\r\n                                // Range is not valid\r\n                                if (start < 0 || end >= total || start > end) {\r\n                                    res.writeHead(416);\r\n                                    res.end();\r\n                                    return;\r\n                                }\r\n\r\n                                // Update headers\r\n                                headers['Content-Range'] = `bytes ${start}-${end}/${total}`;\r\n                                headers['Content-Length'] = end - start + 1;\r\n                                options.start = start;\r\n                                options.end = end;\r\n                            }\r\n                            status = 206; // partial content\r\n                        }\r\n                    } else {\r\n                        headers['Accept-Ranges'] = \"bytes\";\r\n                    }\r\n\r\n                    // Open the file stream\r\n                    const rs = store.getReadStream(fileId, file, options);\r\n                    const ws = new stream.PassThrough();\r\n\r\n                    rs.on('error', Meteor.bindEnvironment((err) => {\r\n                        store.onReadError.call(store, err, fileId, file);\r\n                        res.end();\r\n                    }));\r\n                    ws.on('error', Meteor.bindEnvironment((err) => {\r\n                        store.onReadError.call(store, err, fileId, file);\r\n                        res.end();\r\n                    }));\r\n                    ws.on('close', () => {\r\n                        // Close output stream at the end\r\n                        ws.emit('end');\r\n                    });\r\n\r\n                    // Transform stream\r\n                    store.transformRead(rs, ws, fileId, file, req, headers);\r\n\r\n                    // Parse request headers\r\n                    if (typeof req.headers === 'object') {\r\n                        // Compress data using if needed (ignore audio/video as they are already compressed)\r\n                        if (typeof req.headers['accept-encoding'] === 'string' && !/^(audio|video)/.test(file.type)) {\r\n                            let accept = req.headers['accept-encoding'];\r\n\r\n                            // Compress with gzip\r\n                            if (accept.match(/\\bgzip\\b/)) {\r\n                                headers['Content-Encoding'] = 'gzip';\r\n                                delete headers['Content-Length'];\r\n                                res.writeHead(status, headers);\r\n                                ws.pipe(zlib.createGzip()).pipe(res);\r\n                                return;\r\n                            }\r\n                            // Compress with deflate\r\n                            else if (accept.match(/\\bdeflate\\b/)) {\r\n                                headers['Content-Encoding'] = 'deflate';\r\n                                delete headers['Content-Length'];\r\n                                res.writeHead(status, headers);\r\n                                ws.pipe(zlib.createDeflate()).pipe(res);\r\n                                return;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // Send raw data\r\n                    if (!headers['Content-Encoding']) {\r\n                        res.writeHead(status, headers);\r\n                        ws.pipe(res);\r\n                    }\r\n\r\n                } else {\r\n                    res.end();\r\n                }\r\n            });\r\n        } else {\r\n            next();\r\n        }\r\n    });\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2017 Karl STEIN\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n *\r\n */\r\nimport {_} from \"meteor/underscore\";\r\n\r\n\r\n/**\r\n * Store permissions\r\n */\r\nexport class StorePermissions {\r\n\r\n    constructor(options) {\r\n        // Default options\r\n        options = _.extend({\r\n            insert: null,\r\n            remove: null,\r\n            update: null\r\n        }, options);\r\n\r\n        // Check options\r\n        if (options.insert && typeof options.insert !== 'function') {\r\n            throw new TypeError(\"StorePermissions: insert is not a function\");\r\n        }\r\n        if (options.remove && typeof options.remove !== 'function') {\r\n            throw new TypeError(\"StorePermissions: remove is not a function\");\r\n        }\r\n        if (options.update && typeof options.update !== 'function') {\r\n            throw new TypeError(\"StorePermissions: update is not a function\");\r\n        }\r\n\r\n        // Public attributes\r\n        this.actions = {\r\n            insert: options.insert,\r\n            remove: options.remove,\r\n            update: options.update,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Checks the permission for the action\r\n     * @param action\r\n     * @param userId\r\n     * @param file\r\n     * @param fields\r\n     * @param modifiers\r\n     * @return {*}\r\n     */\r\n    check(action, userId, file, fields, modifiers) {\r\n        if (typeof this.actions[action] === 'function') {\r\n            return this.actions[action](userId, file, fields, modifiers);\r\n        }\r\n        return true; // by default allow all\r\n    }\r\n\r\n    /**\r\n     * Checks the insert permission\r\n     * @param userId\r\n     * @param file\r\n     * @returns {*}\r\n     */\r\n    checkInsert(userId, file) {\r\n        return this.check('insert', userId, file);\r\n    }\r\n\r\n    /**\r\n     * Checks the remove permission\r\n     * @param userId\r\n     * @param file\r\n     * @returns {*}\r\n     */\r\n    checkRemove(userId, file) {\r\n        return this.check('remove', userId, file);\r\n    }\r\n\r\n    /**\r\n     * Checks the update permission\r\n     * @param userId\r\n     * @param file\r\n     * @param fields\r\n     * @param modifiers\r\n     * @returns {*}\r\n     */\r\n    checkUpdate(userId, file, fields, modifiers) {\r\n        return this.check('update', userId, file, fields, modifiers);\r\n    }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2017 Karl STEIN\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n *\r\n */\r\nimport {_} from \"meteor/underscore\";\r\nimport {check} from \"meteor/check\";\r\nimport {Meteor} from \"meteor/meteor\";\r\nimport {Mongo} from \"meteor/mongo\";\r\nimport {UploadFS} from \"./ufs\";\r\nimport {Filter} from \"./ufs-filter\";\r\nimport {StorePermissions} from \"./ufs-store-permissions\";\r\nimport {Tokens} from \"./ufs-tokens\";\r\n\r\n\r\n/**\r\n * File store\r\n */\r\nexport class Store {\r\n\r\n    constructor(options) {\r\n        let self = this;\r\n\r\n        // Default options\r\n        options = _.extend({\r\n            collection: null,\r\n            filter: null,\r\n            name: null,\r\n            onCopyError: this.onCopyError,\r\n            onFinishUpload: this.onFinishUpload,\r\n            onRead: this.onRead,\r\n            onReadError: this.onReadError,\r\n            onValidate: this.onValidate,\r\n            onWriteError: this.onWriteError,\r\n            permissions: null,\r\n            transformRead: null,\r\n            transformWrite: null\r\n        }, options);\r\n\r\n        // Check options\r\n        if (!(options.collection instanceof Mongo.Collection)) {\r\n            throw new TypeError('Store: collection is not a Mongo.Collection');\r\n        }\r\n        if (options.filter && !(options.filter instanceof Filter)) {\r\n            throw new TypeError('Store: filter is not a UploadFS.Filter');\r\n        }\r\n        if (typeof options.name !== 'string') {\r\n            throw new TypeError('Store: name is not a string');\r\n        }\r\n        if (UploadFS.getStore(options.name)) {\r\n            throw new TypeError('Store: name already exists');\r\n        }\r\n        if (options.onCopyError && typeof options.onCopyError !== 'function') {\r\n            throw new TypeError('Store: onCopyError is not a function');\r\n        }\r\n        if (options.onFinishUpload && typeof options.onFinishUpload !== 'function') {\r\n            throw new TypeError('Store: onFinishUpload is not a function');\r\n        }\r\n        if (options.onRead && typeof options.onRead !== 'function') {\r\n            throw new TypeError('Store: onRead is not a function');\r\n        }\r\n        if (options.onReadError && typeof options.onReadError !== 'function') {\r\n            throw new TypeError('Store: onReadError is not a function');\r\n        }\r\n        if (options.onWriteError && typeof options.onWriteError !== 'function') {\r\n            throw new TypeError('Store: onWriteError is not a function');\r\n        }\r\n        if (options.permissions && !(options.permissions instanceof StorePermissions)) {\r\n            throw new TypeError('Store: permissions is not a UploadFS.StorePermissions');\r\n        }\r\n        if (options.transformRead && typeof options.transformRead !== 'function') {\r\n            throw new TypeError('Store: transformRead is not a function');\r\n        }\r\n        if (options.transformWrite && typeof options.transformWrite !== 'function') {\r\n            throw new TypeError('Store: transformWrite is not a function');\r\n        }\r\n        if (options.onValidate && typeof options.onValidate !== 'function') {\r\n            throw new TypeError('Store: onValidate is not a function');\r\n        }\r\n\r\n        // Public attributes\r\n        self.options = options;\r\n        self.permissions = options.permissions;\r\n        _.each([\r\n            'onCopyError',\r\n            'onFinishUpload',\r\n            'onRead',\r\n            'onReadError',\r\n            'onWriteError',\r\n            'onValidate'\r\n        ], (method) => {\r\n            if (typeof options[method] === 'function') {\r\n                self[method] = options[method];\r\n            }\r\n        });\r\n\r\n        // Add the store to the list\r\n        UploadFS.addStore(self);\r\n\r\n        // Set default permissions\r\n        if (!(self.permissions instanceof StorePermissions)) {\r\n            // Uses custom default permissions or UFS default permissions\r\n            if (UploadFS.config.defaultStorePermissions instanceof StorePermissions) {\r\n                self.permissions = UploadFS.config.defaultStorePermissions;\r\n            } else {\r\n                self.permissions = new StorePermissions();\r\n                console.warn(`ufs: permissions are not defined for store \"${options.name}\"`);\r\n            }\r\n        }\r\n\r\n        if (Meteor.isServer) {\r\n\r\n            /**\r\n             * Checks token validity\r\n             * @param token\r\n             * @param fileId\r\n             * @returns {boolean}\r\n             */\r\n            self.checkToken = function (token, fileId) {\r\n                check(token, String);\r\n                check(fileId, String);\r\n                return Tokens.find({value: token, fileId: fileId}).count() === 1;\r\n            };\r\n\r\n            /**\r\n             * Copies the file to a store\r\n             * @param fileId\r\n             * @param store\r\n             * @param callback\r\n             */\r\n            self.copy = function (fileId, store, callback) {\r\n                check(fileId, String);\r\n\r\n                if (!(store instanceof Store)) {\r\n                    throw new TypeError('store is not an instance of UploadFS.Store');\r\n                }\r\n                // Get original file\r\n                let file = self.getCollection().findOne({_id: fileId});\r\n                if (!file) {\r\n                    throw new Meteor.Error('file-not-found', 'File not found');\r\n                }\r\n                // Silently ignore the file if it does not match filter\r\n                const filter = store.getFilter();\r\n                if (filter instanceof Filter && !filter.isValid(file)) {\r\n                    return;\r\n                }\r\n\r\n                // Prepare copy\r\n                let copy = _.omit(file, '_id', 'url');\r\n                copy.originalStore = self.getName();\r\n                copy.originalId = fileId;\r\n\r\n                // Create the copy\r\n                let copyId = store.create(copy);\r\n\r\n                // Get original stream\r\n                let rs = self.getReadStream(fileId, file);\r\n\r\n                // Catch errors to avoid app crashing\r\n                rs.on('error', Meteor.bindEnvironment(function (err) {\r\n                    callback.call(self, err, null);\r\n                }));\r\n\r\n                // Copy file data\r\n                store.write(rs, copyId, Meteor.bindEnvironment(function (err) {\r\n                    if (err) {\r\n                        self.getCollection().remove({_id: copyId});\r\n                        self.onCopyError.call(self, err, fileId, file);\r\n                    }\r\n                    if (typeof callback === 'function') {\r\n                        callback.call(self, err, copyId, copy, store);\r\n                    }\r\n                }));\r\n            };\r\n\r\n            /**\r\n             * Creates the file in the collection\r\n             * @param file\r\n             * @param callback\r\n             * @return {string}\r\n             */\r\n            self.create = function (file, callback) {\r\n                check(file, Object);\r\n                file.store = self.options.name; // assign store to file\r\n                return self.getCollection().insert(file, callback);\r\n            };\r\n\r\n            /**\r\n             * Creates a token for the file (only needed for client side upload)\r\n             * @param fileId\r\n             * @returns {*}\r\n             */\r\n            self.createToken = function (fileId) {\r\n                let token = self.generateToken();\r\n\r\n                // Check if token exists\r\n                if (Tokens.find({fileId: fileId}).count()) {\r\n                    Tokens.update({fileId: fileId}, {\r\n                        $set: {\r\n                            createdAt: new Date(),\r\n                            value: token\r\n                        }\r\n                    });\r\n                } else {\r\n                    Tokens.insert({\r\n                        createdAt: new Date(),\r\n                        fileId: fileId,\r\n                        value: token\r\n                    });\r\n                }\r\n                return token;\r\n            };\r\n\r\n            /**\r\n             * Writes the file to the store\r\n             * @param rs\r\n             * @param fileId\r\n             * @param callback\r\n             */\r\n            self.write = function (rs, fileId, callback) {\r\n                let file = self.getCollection().findOne({_id: fileId});\r\n                let ws = self.getWriteStream(fileId, file);\r\n\r\n                let errorHandler = Meteor.bindEnvironment(function (err) {\r\n                    self.getCollection().remove({_id: fileId});\r\n                    self.onWriteError.call(self, err, fileId, file);\r\n                    callback.call(self, err);\r\n                });\r\n\r\n                ws.on('error', errorHandler);\r\n                ws.on('finish', Meteor.bindEnvironment(function () {\r\n                    let size = 0;\r\n                    let readStream = self.getReadStream(fileId, file);\r\n\r\n                    readStream.on('error', Meteor.bindEnvironment(function (error) {\r\n                        callback.call(self, error, null);\r\n                    }));\r\n                    readStream.on('data', Meteor.bindEnvironment(function (data) {\r\n                        size += data.length;\r\n                    }));\r\n                    readStream.on('end', Meteor.bindEnvironment(function () {\r\n                        // Set file attribute\r\n                        file.complete = true;\r\n                        file.etag = UploadFS.generateEtag();\r\n                        file.path = self.getFileRelativeURL(fileId);\r\n                        file.progress = 1;\r\n                        file.size = size;\r\n                        file.token = self.generateToken();\r\n                        file.uploading = false;\r\n                        file.uploadedAt = new Date();\r\n                        file.url = self.getFileURL(fileId);\r\n\r\n                        // Execute callback\r\n                        if (typeof self.onFinishUpload === 'function') {\r\n                            self.onFinishUpload.call(self, file);\r\n                        }\r\n\r\n                        // Sets the file URL when file transfer is complete,\r\n                        // this way, the image will loads entirely.\r\n                        self.getCollection().direct.update({_id: fileId}, {\r\n                            $set: {\r\n                                complete: file.complete,\r\n                                etag: file.etag,\r\n                                path: file.path,\r\n                                progress: file.progress,\r\n                                size: file.size,\r\n                                token: file.token,\r\n                                uploading: file.uploading,\r\n                                uploadedAt: file.uploadedAt,\r\n                                url: file.url\r\n                            }\r\n                        });\r\n\r\n                        // Return file info\r\n                        callback.call(self, null, file);\r\n\r\n                        // Simulate write speed\r\n                        if (UploadFS.config.simulateWriteDelay) {\r\n                            Meteor._sleepForMs(UploadFS.config.simulateWriteDelay);\r\n                        }\r\n\r\n                        // Copy file to other stores\r\n                        if (self.options.copyTo instanceof Array) {\r\n                            for (let i = 0; i < self.options.copyTo.length; i += 1) {\r\n                                let store = self.options.copyTo[i];\r\n\r\n                                if (!store.getFilter() || store.getFilter().isValid(file)) {\r\n                                    self.copy(fileId, store);\r\n                                }\r\n                            }\r\n                        }\r\n                    }));\r\n                }));\r\n\r\n                // Execute transformation\r\n                self.transformWrite(rs, ws, fileId, file);\r\n            };\r\n        }\r\n\r\n        if (Meteor.isServer) {\r\n            const fs = Npm.require('fs');\r\n            const collection = self.getCollection();\r\n\r\n            // Code executed after removing file\r\n            collection.after.remove(function (userId, file) {\r\n                // Remove associated tokens\r\n                Tokens.remove({fileId: file._id});\r\n\r\n                if (self.options.copyTo instanceof Array) {\r\n                    for (let i = 0; i < self.options.copyTo.length; i += 1) {\r\n                        // Remove copies in stores\r\n                        self.options.copyTo[i].getCollection().remove({originalId: file._id});\r\n                    }\r\n                }\r\n            });\r\n\r\n            // Code executed before inserting file\r\n            collection.before.insert(function (userId, file) {\r\n                if (!self.permissions.checkInsert(userId, file)) {\r\n                    throw new Meteor.Error('forbidden', \"Forbidden\");\r\n                }\r\n            });\r\n\r\n            // Code executed before updating file\r\n            collection.before.update(function (userId, file, fields, modifiers) {\r\n                if (!self.permissions.checkUpdate(userId, file, fields, modifiers)) {\r\n                    throw new Meteor.Error('forbidden', \"Forbidden\");\r\n                }\r\n            });\r\n\r\n            // Code executed before removing file\r\n            collection.before.remove(function (userId, file) {\r\n                if (!self.permissions.checkRemove(userId, file)) {\r\n                    throw new Meteor.Error('forbidden', \"Forbidden\");\r\n                }\r\n\r\n                // Delete the physical file in the store\r\n                self.delete(file._id);\r\n\r\n                let tmpFile = UploadFS.getTempFilePath(file._id);\r\n\r\n                // Delete the temp file\r\n                fs.stat(tmpFile, function (err) {\r\n                    !err && fs.unlink(tmpFile, function (err) {\r\n                        err && console.error(`ufs: cannot delete temp file at ${tmpFile} (${err.message})`);\r\n                    });\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Deletes a file async\r\n     * @param fileId\r\n     * @param callback\r\n     */\r\n    delete(fileId, callback) {\r\n        throw new Error('delete is not implemented');\r\n    }\r\n\r\n    /**\r\n     * Generates a random token\r\n     * @param pattern\r\n     * @return {string}\r\n     */\r\n    generateToken(pattern) {\r\n        return (pattern || 'xyxyxyxyxy').replace(/[xy]/g, (c) => {\r\n            let r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\r\n            let s = v.toString(16);\r\n            return Math.round(Math.random()) ? s.toUpperCase() : s;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Returns the collection\r\n     * @return {Mongo.Collection}\r\n     */\r\n    getCollection() {\r\n        return this.options.collection;\r\n    }\r\n\r\n    /**\r\n     * Returns the file URL\r\n     * @param fileId\r\n     * @return {string|null}\r\n     */\r\n    getFileRelativeURL(fileId) {\r\n        let file = this.getCollection().findOne(fileId, {fields: {name: 1}});\r\n        return file ? this.getRelativeURL(`${fileId}/${file.name}`) : null;\r\n    }\r\n\r\n    /**\r\n     * Returns the file URL\r\n     * @param fileId\r\n     * @return {string|null}\r\n     */\r\n    getFileURL(fileId) {\r\n        let file = this.getCollection().findOne(fileId, {fields: {name: 1}});\r\n        return file ? this.getURL(`${fileId}/${file.name}`) : null;\r\n    }\r\n\r\n    /**\r\n     * Returns the file filter\r\n     * @return {UploadFS.Filter}\r\n     */\r\n    getFilter() {\r\n        return this.options.filter;\r\n    }\r\n\r\n    /**\r\n     * Returns the store name\r\n     * @return {string}\r\n     */\r\n    getName() {\r\n        return this.options.name;\r\n    }\r\n\r\n    /**\r\n     * Returns the file read stream\r\n     * @param fileId\r\n     * @param file\r\n     */\r\n    getReadStream(fileId, file) {\r\n        throw new Error('Store.getReadStream is not implemented');\r\n    }\r\n\r\n    /**\r\n     * Returns the store relative URL\r\n     * @param path\r\n     * @return {string}\r\n     */\r\n    getRelativeURL(path) {\r\n        const rootUrl = Meteor.absoluteUrl().replace(/\\/+$/, '');\r\n        const rootPath = rootUrl.replace(/^[a-z]+:\\/\\/[^/]+\\/*/gi, '');\r\n        const storeName = this.getName();\r\n        path = String(path).replace(/\\/$/, '').trim();\r\n        return encodeURI(`${rootPath}/${UploadFS.config.storesPath}/${storeName}/${path}`);\r\n    }\r\n\r\n    /**\r\n     * Returns the store absolute URL\r\n     * @param path\r\n     * @return {string}\r\n     */\r\n    getURL(path) {\r\n        const rootUrl = Meteor.absoluteUrl({secure: UploadFS.config.https}).replace(/\\/+$/, '');\r\n        const storeName = this.getName();\r\n        path = String(path).replace(/\\/$/, '').trim();\r\n        return encodeURI(`${rootUrl}/${UploadFS.config.storesPath}/${storeName}/${path}`);\r\n    }\r\n\r\n    /**\r\n     * Returns the file write stream\r\n     * @param fileId\r\n     * @param file\r\n     */\r\n    getWriteStream(fileId, file) {\r\n        throw new Error('getWriteStream is not implemented');\r\n    }\r\n\r\n    /**\r\n     * Completes the file upload\r\n     * @param url\r\n     * @param file\r\n     * @param callback\r\n     */\r\n    importFromURL(url, file, callback) {\r\n        Meteor.call('ufsImportURL', url, file, this.getName(), callback);\r\n    }\r\n\r\n    /**\r\n     * Called when a copy error happened\r\n     * @param err\r\n     * @param fileId\r\n     * @param file\r\n     */\r\n    onCopyError(err, fileId, file) {\r\n        console.error(`ufs: cannot copy file \"${fileId}\" (${err.message})`, err);\r\n    }\r\n\r\n    /**\r\n     * Called when a file has been uploaded\r\n     * @param file\r\n     */\r\n    onFinishUpload(file) {\r\n    }\r\n\r\n    /**\r\n     * Called when a file is read from the store\r\n     * @param fileId\r\n     * @param file\r\n     * @param request\r\n     * @param response\r\n     * @return boolean\r\n     */\r\n    onRead(fileId, file, request, response) {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Called when a read error happened\r\n     * @param err\r\n     * @param fileId\r\n     * @param file\r\n     * @return boolean\r\n     */\r\n    onReadError(err, fileId, file) {\r\n        console.error(`ufs: cannot read file \"${fileId}\" (${err.message})`, err);\r\n    }\r\n\r\n    /**\r\n     * Called when file is being validated\r\n     * @param file\r\n     */\r\n    onValidate(file) {\r\n    }\r\n\r\n    /**\r\n     * Called when a write error happened\r\n     * @param err\r\n     * @param fileId\r\n     * @param file\r\n     * @return boolean\r\n     */\r\n    onWriteError(err, fileId, file) {\r\n        console.error(`ufs: cannot write file \"${fileId}\" (${err.message})`, err);\r\n    }\r\n\r\n    /**\r\n     * Sets the store permissions\r\n     * @param permissions\r\n     */\r\n    setPermissions(permissions) {\r\n        if (!(permissions instanceof StorePermissions)) {\r\n            throw new TypeError(\"Permissions is not an instance of UploadFS.StorePermissions\");\r\n        }\r\n        this.permissions = permissions;\r\n    }\r\n\r\n    /**\r\n     * Transforms the file on reading\r\n     * @param readStream\r\n     * @param writeStream\r\n     * @param fileId\r\n     * @param file\r\n     * @param request\r\n     * @param headers\r\n     */\r\n    transformRead(readStream, writeStream, fileId, file, request, headers) {\r\n        if (typeof this.options.transformRead === 'function') {\r\n            this.options.transformRead.call(this, readStream, writeStream, fileId, file, request, headers);\r\n        } else {\r\n            readStream.pipe(writeStream);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Transforms the file on writing\r\n     * @param readStream\r\n     * @param writeStream\r\n     * @param fileId\r\n     * @param file\r\n     */\r\n    transformWrite(readStream, writeStream, fileId, file) {\r\n        if (typeof this.options.transformWrite === 'function') {\r\n            this.options.transformWrite.call(this, readStream, writeStream, fileId, file);\r\n        } else {\r\n            readStream.pipe(writeStream);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Validates the file\r\n     * @param file\r\n     */\r\n    validate(file) {\r\n        if (typeof this.onValidate === 'function') {\r\n            this.onValidate(file);\r\n        }\r\n    }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2017 Karl STEIN\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n *\r\n */\r\n\r\nimport {Template} from 'meteor/templating';\r\n\r\n\r\nlet isMIME = function (type, mime) {\r\n    return typeof type === 'string'\r\n        && typeof mime === 'string'\r\n        && mime.indexOf(type + '/') === 0;\r\n};\r\n\r\nTemplate.registerHelper('isApplication', function (type) {\r\n    return isMIME('application', this.type || type);\r\n});\r\n\r\nTemplate.registerHelper('isAudio', function (type) {\r\n    return isMIME('audio', this.type || type);\r\n});\r\n\r\nTemplate.registerHelper('isImage', function (type) {\r\n    return isMIME('image', this.type || type);\r\n});\r\n\r\nTemplate.registerHelper('isText', function (type) {\r\n    return isMIME('text', this.type || type);\r\n});\r\n\r\nTemplate.registerHelper('isVideo', function (type) {\r\n    return isMIME('video', this.type || type);\r\n});\r\n","/*\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2017 Karl STEIN\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n *\r\n */\r\n\r\nimport {Mongo} from 'meteor/mongo';\r\n\r\n/**\r\n * Collection of upload tokens\r\n * @type {Mongo.Collection}\r\n */\r\nexport const Tokens = new Mongo.Collection('ufsTokens');\r\n","/*\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2017 Karl STEIN\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n *\r\n */\r\n\r\nimport {_} from 'meteor/underscore';\r\nimport {Meteor} from 'meteor/meteor';\r\nimport {Store} from './ufs-store';\r\n\r\n\r\n/**\r\n * File uploader\r\n */\r\nexport class Uploader {\r\n\r\n    constructor(options) {\r\n        let self = this;\r\n\r\n        // Set default options\r\n        options = _.extend({\r\n            adaptive: true,\r\n            capacity: 0.9,\r\n            chunkSize: 16 * 1024,\r\n            data: null,\r\n            file: null,\r\n            maxChunkSize: 4 * 1024 * 1000,\r\n            maxTries: 5,\r\n            onAbort: this.onAbort,\r\n            onComplete: this.onComplete,\r\n            onCreate: this.onCreate,\r\n            onError: this.onError,\r\n            onProgress: this.onProgress,\r\n            onStart: this.onStart,\r\n            onStop: this.onStop,\r\n            retryDelay: 2000,\r\n            store: null,\r\n            transferDelay: 100\r\n        }, options);\r\n\r\n        // Check options\r\n        if (typeof options.adaptive !== 'boolean') {\r\n            throw new TypeError('adaptive is not a number');\r\n        }\r\n        if (typeof options.capacity !== 'number') {\r\n            throw new TypeError('capacity is not a number');\r\n        }\r\n        if (options.capacity <= 0 || options.capacity > 1) {\r\n            throw new RangeError('capacity must be a float between 0.1 and 1.0');\r\n        }\r\n        if (typeof options.chunkSize !== 'number') {\r\n            throw new TypeError('chunkSize is not a number');\r\n        }\r\n        if (!(options.data instanceof Blob) && !(options.data instanceof File)) {\r\n            throw new TypeError('data is not an Blob or File');\r\n        }\r\n        if (options.file === null || typeof options.file !== 'object') {\r\n            throw new TypeError('file is not an object');\r\n        }\r\n        if (typeof options.maxChunkSize !== 'number') {\r\n            throw new TypeError('maxChunkSize is not a number');\r\n        }\r\n        if (typeof options.maxTries !== 'number') {\r\n            throw new TypeError('maxTries is not a number');\r\n        }\r\n        if (typeof options.retryDelay !== 'number') {\r\n            throw new TypeError('retryDelay is not a number');\r\n        }\r\n        if (typeof options.transferDelay !== 'number') {\r\n            throw new TypeError('transferDelay is not a number');\r\n        }\r\n        if (typeof options.onAbort !== 'function') {\r\n            throw new TypeError('onAbort is not a function');\r\n        }\r\n        if (typeof options.onComplete !== 'function') {\r\n            throw new TypeError('onComplete is not a function');\r\n        }\r\n        if (typeof options.onCreate !== 'function') {\r\n            throw new TypeError('onCreate is not a function');\r\n        }\r\n        if (typeof options.onError !== 'function') {\r\n            throw new TypeError('onError is not a function');\r\n        }\r\n        if (typeof options.onProgress !== 'function') {\r\n            throw new TypeError('onProgress is not a function');\r\n        }\r\n        if (typeof options.onStart !== 'function') {\r\n            throw new TypeError('onStart is not a function');\r\n        }\r\n        if (typeof options.onStop !== 'function') {\r\n            throw new TypeError('onStop is not a function');\r\n        }\r\n        if (typeof options.store !== 'string' && !(options.store instanceof Store)) {\r\n            throw new TypeError('store must be the name of the store or an instance of UploadFS.Store');\r\n        }\r\n\r\n        // Public attributes\r\n        self.adaptive = options.adaptive;\r\n        self.capacity = parseFloat(options.capacity);\r\n        self.chunkSize = parseInt(options.chunkSize);\r\n        self.maxChunkSize = parseInt(options.maxChunkSize);\r\n        self.maxTries = parseInt(options.maxTries);\r\n        self.retryDelay = parseInt(options.retryDelay);\r\n        self.transferDelay = parseInt(options.transferDelay);\r\n        self.onAbort = options.onAbort;\r\n        self.onComplete = options.onComplete;\r\n        self.onCreate = options.onCreate;\r\n        self.onError = options.onError;\r\n        self.onProgress = options.onProgress;\r\n        self.onStart = options.onStart;\r\n        self.onStop = options.onStop;\r\n\r\n        // Private attributes\r\n        let store = options.store;\r\n        let data = options.data;\r\n        let capacityMargin = 0.1;\r\n        let file = options.file;\r\n        let fileId = null;\r\n        let offset = 0;\r\n        let loaded = 0;\r\n        let total = data.size;\r\n        let tries = 0;\r\n        let postUrl = null;\r\n        let token = null;\r\n        let complete = false;\r\n        let uploading = false;\r\n\r\n        let timeA = null;\r\n        let timeB = null;\r\n\r\n        let elapsedTime = 0;\r\n        let startTime = 0;\r\n\r\n        // Keep only the name of the store\r\n        if (store instanceof Store) {\r\n            store = store.getName();\r\n        }\r\n\r\n        // Assign file to store\r\n        file.store = store;\r\n\r\n        function finish() {\r\n            // Finish the upload by telling the store the upload is complete\r\n            Meteor.call('ufsComplete', fileId, store, token, function (err, uploadedFile) {\r\n                if (err) {\r\n                    self.onError(err, file);\r\n                    self.abort();\r\n                }\r\n                else if (uploadedFile) {\r\n                    uploading = false;\r\n                    complete = true;\r\n                    file = uploadedFile;\r\n                    self.onComplete(uploadedFile);\r\n                }\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Aborts the current transfer\r\n         */\r\n        self.abort = function () {\r\n            // Remove the file from database\r\n            Meteor.call('ufsDelete', fileId, store, token, function (err, result) {\r\n                if (err) {\r\n                    self.onError(err, file);\r\n                }\r\n            });\r\n\r\n            // Reset uploader status\r\n            uploading = false;\r\n            fileId = null;\r\n            offset = 0;\r\n            tries = 0;\r\n            loaded = 0;\r\n            complete = false;\r\n            startTime = null;\r\n            self.onAbort(file);\r\n        };\r\n\r\n        /**\r\n         * Returns the average speed in bytes per second\r\n         * @returns {number}\r\n         */\r\n        self.getAverageSpeed = function () {\r\n            let seconds = self.getElapsedTime() / 1000;\r\n            return self.getLoaded() / seconds;\r\n        };\r\n\r\n        /**\r\n         * Returns the elapsed time in milliseconds\r\n         * @returns {number}\r\n         */\r\n        self.getElapsedTime = function () {\r\n            if (startTime && self.isUploading()) {\r\n                return elapsedTime + (Date.now() - startTime);\r\n            }\r\n            return elapsedTime;\r\n        };\r\n\r\n        /**\r\n         * Returns the file\r\n         * @return {object}\r\n         */\r\n        self.getFile = function () {\r\n            return file;\r\n        };\r\n\r\n        /**\r\n         * Returns the loaded bytes\r\n         * @return {number}\r\n         */\r\n        self.getLoaded = function () {\r\n            return loaded;\r\n        };\r\n\r\n        /**\r\n         * Returns current progress\r\n         * @return {number}\r\n         */\r\n        self.getProgress = function () {\r\n            return Math.min((loaded / total) * 100 / 100, 1.0);\r\n        };\r\n\r\n        /**\r\n         * Returns the remaining time in milliseconds\r\n         * @returns {number}\r\n         */\r\n        self.getRemainingTime = function () {\r\n            let averageSpeed = self.getAverageSpeed();\r\n            let remainingBytes = total - self.getLoaded();\r\n            return averageSpeed && remainingBytes ? Math.max(remainingBytes / averageSpeed, 0) : 0;\r\n        };\r\n\r\n        /**\r\n         * Returns the upload speed in bytes per second\r\n         * @returns {number}\r\n         */\r\n        self.getSpeed = function () {\r\n            if (timeA && timeB && self.isUploading()) {\r\n                let seconds = (timeB - timeA) / 1000;\r\n                return self.chunkSize / seconds;\r\n            }\r\n            return 0;\r\n        };\r\n\r\n        /**\r\n         * Returns the total bytes\r\n         * @return {number}\r\n         */\r\n        self.getTotal = function () {\r\n            return total;\r\n        };\r\n\r\n        /**\r\n         * Checks if the transfer is complete\r\n         * @return {boolean}\r\n         */\r\n        self.isComplete = function () {\r\n            return complete;\r\n        };\r\n\r\n        /**\r\n         * Checks if the transfer is active\r\n         * @return {boolean}\r\n         */\r\n        self.isUploading = function () {\r\n            return uploading;\r\n        };\r\n\r\n        /**\r\n         * Reads a portion of file\r\n         * @param start\r\n         * @param length\r\n         * @param callback\r\n         * @returns {Blob}\r\n         */\r\n        self.readChunk = function (start, length, callback) {\r\n            if (typeof callback != 'function') {\r\n                throw new Error('readChunk is missing callback');\r\n            }\r\n            try {\r\n                let end;\r\n\r\n                // Calculate the chunk size\r\n                if (length && start + length > total) {\r\n                    end = total;\r\n                } else {\r\n                    end = start + length;\r\n                }\r\n                // Get chunk\r\n                let chunk = data.slice(start, end);\r\n                // Pass chunk to callback\r\n                callback.call(self, null, chunk);\r\n\r\n            } catch (err) {\r\n                console.error('read error', err);\r\n                // Retry to read chunk\r\n                Meteor.setTimeout(function () {\r\n                    if (tries < self.maxTries) {\r\n                        tries += 1;\r\n                        self.readChunk(start, length, callback);\r\n                    }\r\n                }, self.retryDelay);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Sends a file chunk to the store\r\n         */\r\n        self.sendChunk = function () {\r\n            if (!complete && startTime !== null) {\r\n                if (offset < total) {\r\n                    let chunkSize = self.chunkSize;\r\n\r\n                    // Use adaptive length\r\n                    if (self.adaptive && timeA && timeB && timeB > timeA) {\r\n                        let duration = (timeB - timeA) / 1000;\r\n                        let max = self.capacity * (1 + capacityMargin);\r\n                        let min = self.capacity * (1 - capacityMargin);\r\n\r\n                        if (duration >= max) {\r\n                            chunkSize = Math.abs(Math.round(chunkSize * (max - duration)));\r\n\r\n                        } else if (duration < min) {\r\n                            chunkSize = Math.round(chunkSize * (min / duration));\r\n                        }\r\n                        // Limit to max chunk size\r\n                        if (self.maxChunkSize > 0 && chunkSize > self.maxChunkSize) {\r\n                            chunkSize = self.maxChunkSize;\r\n                        }\r\n                    }\r\n\r\n                    // Limit to max chunk size\r\n                    if (self.maxChunkSize > 0 && chunkSize > self.maxChunkSize) {\r\n                        chunkSize = self.maxChunkSize;\r\n                    }\r\n\r\n                    // Reduce chunk size to fit total\r\n                    if (offset + chunkSize > total) {\r\n                        chunkSize = total - offset;\r\n                    }\r\n\r\n                    // Prepare the chunk\r\n                    self.readChunk(offset, chunkSize, function (err, chunk) {\r\n                        if (err) {\r\n                            self.onError(err, file);\r\n                            return;\r\n                        }\r\n\r\n                        let xhr = new XMLHttpRequest();\r\n                        xhr.onreadystatechange = function () {\r\n                            if (xhr.readyState === 4) {\r\n                                if (_.contains([200, 201, 202, 204], xhr.status)) {\r\n                                    timeB = Date.now();\r\n                                    offset += chunkSize;\r\n                                    loaded += chunkSize;\r\n\r\n                                    // Send next chunk\r\n                                    self.onProgress(file, self.getProgress());\r\n\r\n                                    // Finish upload\r\n                                    if (loaded >= total) {\r\n                                        elapsedTime = Date.now() - startTime;\r\n                                        finish();\r\n                                    } else {\r\n                                        Meteor.setTimeout(self.sendChunk, self.transferDelay);\r\n                                    }\r\n                                }\r\n                                else if (!_.contains([402, 403, 404, 500], xhr.status)) {\r\n                                    // Retry until max tries is reach\r\n                                    // But don't retry if these errors occur\r\n                                    if (tries <= self.maxTries) {\r\n                                        tries += 1;\r\n                                        // Wait before retrying\r\n                                        Meteor.setTimeout(self.sendChunk, self.retryDelay);\r\n                                    } else {\r\n                                        self.abort();\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    self.abort();\r\n                                }\r\n                            }\r\n                        };\r\n\r\n                        // Calculate upload progress\r\n                        let progress = (offset + chunkSize) / total;\r\n                        // let formData = new FormData();\r\n                        // formData.append('progress', progress);\r\n                        // formData.append('chunk', chunk);\r\n                        let url = `${postUrl}&progress=${progress}`;\r\n\r\n                        timeA = Date.now();\r\n                        timeB = null;\r\n                        uploading = true;\r\n\r\n                        // Send chunk to the store\r\n                        xhr.open('POST', url, true);\r\n                        xhr.send(chunk);\r\n                    });\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Starts or resumes the transfer\r\n         */\r\n        self.start = function () {\r\n            if (!fileId) {\r\n                // Create the file document and get the token\r\n                // that allows the user to send chunks to the store.\r\n                Meteor.call('ufsCreate', _.extend({}, file), function (err, result) {\r\n                    if (err) {\r\n                        self.onError(err, file);\r\n                    } else if (result) {\r\n                        token = result.token;\r\n                        postUrl = result.url;\r\n                        fileId = result.fileId;\r\n                        file._id = result.fileId;\r\n                        self.onCreate(file);\r\n                        tries = 0;\r\n                        startTime = Date.now();\r\n                        self.onStart(file);\r\n                        self.sendChunk();\r\n                    }\r\n                });\r\n            } else if (!uploading && !complete) {\r\n                // Resume uploading\r\n                tries = 0;\r\n                startTime = Date.now();\r\n                self.onStart(file);\r\n                self.sendChunk();\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Stops the transfer\r\n         */\r\n        self.stop = function () {\r\n            if (uploading) {\r\n                // Update elapsed time\r\n                elapsedTime = Date.now() - startTime;\r\n                startTime = null;\r\n                uploading = false;\r\n                self.onStop(file);\r\n\r\n                Meteor.call('ufsStop', fileId, store, token, function (err, result) {\r\n                    if (err) {\r\n                        self.onError(err, file);\r\n                    }\r\n                });\r\n            }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Called when the file upload is aborted\r\n     * @param file\r\n     */\r\n    onAbort(file) {\r\n    }\r\n\r\n    /**\r\n     * Called when the file upload is complete\r\n     * @param file\r\n     */\r\n    onComplete(file) {\r\n    }\r\n\r\n    /**\r\n     * Called when the file is created in the collection\r\n     * @param file\r\n     */\r\n    onCreate(file) {\r\n    }\r\n\r\n    /**\r\n     * Called when an error occurs during file upload\r\n     * @param err\r\n     * @param file\r\n     */\r\n    onError(err, file) {\r\n        console.error(`ufs: ${err.message}`);\r\n    }\r\n\r\n    /**\r\n     * Called when a file chunk has been sent\r\n     * @param file\r\n     * @param progress is a float from 0.0 to 1.0\r\n     */\r\n    onProgress(file, progress) {\r\n    }\r\n\r\n    /**\r\n     * Called when the file upload starts\r\n     * @param file\r\n     */\r\n    onStart(file) {\r\n    }\r\n\r\n    /**\r\n     * Called when the file upload stops\r\n     * @param file\r\n     */\r\n    onStop(file) {\r\n    }\r\n}\r\n"]}